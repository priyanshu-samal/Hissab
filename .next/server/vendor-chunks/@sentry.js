"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sentry";
exports.ids = ["vendor-chunks/@sentry"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ENVIRONMENT: () => (/* binding */ DEFAULT_ENVIRONMENT)\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vY29uc3RhbnRzLmpzPzdhMjciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgREVGQVVMVF9FTlZJUk9OTUVOVCA9ICdwcm9kdWN0aW9uJztcblxuZXhwb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/debug-build.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/debug-build.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9kZWJ1Zy1idWlsZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZGVidWctYnVpbGQuanM/ODIzNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnQgeyBERUJVR19CVUlMRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/debug-build.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/eventProcessors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/eventProcessors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalEventProcessor: () => (/* binding */ addGlobalEventProcessor),\n/* harmony export */   getGlobalEventProcessors: () => (/* binding */ getGlobalEventProcessors),\n/* harmony export */   notifyEventProcessors: () => (/* binding */ notifyEventProcessors)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nfunction addGlobalEventProcessor(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && processor.id && result === null && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\n\n//# sourceMappingURL=eventProcessors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9ldmVudFByb2Nlc3NvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0Y7QUFDckM7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlFQUFrQjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0RBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGlDQUFpQyxVQUFVOztBQUUzQyxNQUFNLHdEQUFXLHVDQUF1QyxpREFBTSx5QkFBeUIsYUFBYTs7QUFFcEcsVUFBVSx5REFBVTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFb0Y7QUFDcEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2V2ZW50UHJvY2Vzc29ycy5qcz8yN2E4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5bmNQcm9taXNlLCBsb2dnZXIsIGlzVGhlbmFibGUsIGdldEdsb2JhbFNpbmdsZXRvbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBnbG9iYWwgZXZlbnQgcHJvY2Vzc29ycy5cbiAqIEBkZXByZWNhdGVkIEdsb2JhbCBldmVudCBwcm9jZXNzb3JzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC5cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsRXZlbnRQcm9jZXNzb3JzKCkge1xuICByZXR1cm4gZ2V0R2xvYmFsU2luZ2xldG9uKCdnbG9iYWxFdmVudFByb2Nlc3NvcnMnLCAoKSA9PiBbXSk7XG59XG5cbi8qKlxuICogQWRkIGEgRXZlbnRQcm9jZXNzb3IgdG8gYmUga2VwdCBnbG9iYWxseS5cbiAqIEBkZXByZWNhdGVkIFVzZSBgYWRkRXZlbnRQcm9jZXNzb3JgIGluc3RlYWQuIEdsb2JhbCBldmVudCBwcm9jZXNzb3JzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IoY2FsbGJhY2spIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGdldEdsb2JhbEV2ZW50UHJvY2Vzc29ycygpLnB1c2goY2FsbGJhY2spO1xufVxuXG4vKipcbiAqIFByb2Nlc3MgYW4gYXJyYXkgb2YgZXZlbnQgcHJvY2Vzc29ycywgcmV0dXJuaW5nIHRoZSBwcm9jZXNzZWQgZXZlbnQgKG9yIGBudWxsYCBpZiB0aGUgZXZlbnQgd2FzIGRyb3BwZWQpLlxuICovXG5mdW5jdGlvbiBub3RpZnlFdmVudFByb2Nlc3NvcnMoXG4gIHByb2Nlc3NvcnMsXG4gIGV2ZW50LFxuICBoaW50LFxuICBpbmRleCA9IDAsXG4pIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcHJvY2Vzc29yID0gcHJvY2Vzc29yc1tpbmRleF07XG4gICAgaWYgKGV2ZW50ID09PSBudWxsIHx8IHR5cGVvZiBwcm9jZXNzb3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlc29sdmUoZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBwcm9jZXNzb3IoeyAuLi5ldmVudCB9LCBoaW50KSA7XG5cbiAgICAgIERFQlVHX0JVSUxEICYmIHByb2Nlc3Nvci5pZCAmJiByZXN1bHQgPT09IG51bGwgJiYgbG9nZ2VyLmxvZyhgRXZlbnQgcHJvY2Vzc29yIFwiJHtwcm9jZXNzb3IuaWR9XCIgZHJvcHBlZCBldmVudGApO1xuXG4gICAgICBpZiAoaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgIHZvaWQgcmVzdWx0XG4gICAgICAgICAgLnRoZW4oZmluYWwgPT4gbm90aWZ5RXZlbnRQcm9jZXNzb3JzKHByb2Nlc3NvcnMsIGZpbmFsLCBoaW50LCBpbmRleCArIDEpLnRoZW4ocmVzb2x2ZSkpXG4gICAgICAgICAgLnRoZW4obnVsbCwgcmVqZWN0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZvaWQgbm90aWZ5RXZlbnRQcm9jZXNzb3JzKHByb2Nlc3NvcnMsIHJlc3VsdCwgaGludCwgaW5kZXggKyAxKVxuICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgLnRoZW4obnVsbCwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyBhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0R2xvYmFsRXZlbnRQcm9jZXNzb3JzLCBub3RpZnlFdmVudFByb2Nlc3NvcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50UHJvY2Vzc29ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/eventProcessors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBreadcrumb: () => (/* binding */ addBreadcrumb),\n/* harmony export */   captureCheckIn: () => (/* binding */ captureCheckIn),\n/* harmony export */   captureEvent: () => (/* binding */ captureEvent),\n/* harmony export */   captureException: () => (/* binding */ captureException),\n/* harmony export */   captureMessage: () => (/* binding */ captureMessage),\n/* harmony export */   captureSession: () => (/* binding */ captureSession),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configureScope: () => (/* binding */ configureScope),\n/* harmony export */   endSession: () => (/* binding */ endSession),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   getCurrentScope: () => (/* binding */ getCurrentScope),\n/* harmony export */   isInitialized: () => (/* binding */ isInitialized),\n/* harmony export */   lastEventId: () => (/* binding */ lastEventId),\n/* harmony export */   setContext: () => (/* binding */ setContext),\n/* harmony export */   setExtra: () => (/* binding */ setExtra),\n/* harmony export */   setExtras: () => (/* binding */ setExtras),\n/* harmony export */   setTag: () => (/* binding */ setTag),\n/* harmony export */   setTags: () => (/* binding */ setTags),\n/* harmony export */   setUser: () => (/* binding */ setUser),\n/* harmony export */   startSession: () => (/* binding */ startSession),\n/* harmony export */   startTransaction: () => (/* binding */ startTransaction),\n/* harmony export */   withActiveSpan: () => (/* binding */ withActiveSpan),\n/* harmony export */   withIsolationScope: () => (/* binding */ withIsolationScope),\n/* harmony export */   withMonitor: () => (/* binding */ withMonitor),\n/* harmony export */   withScope: () => (/* binding */ withScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"(ssr)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__.parseEventHintOrCaptureContext)(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction configureScope(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction addBreadcrumb(breadcrumb, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nfunction setContext(name, context) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtras(extras) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtra(key, extra) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTags(tags) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTag(key, value) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setUser(user) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope ;\n      return callback(scope );\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nfunction withIsolationScope(callback) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n    return callback((0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n * @deprecated This function will be removed in the next major version of the Sentry SDK.\n */\nfunction lastEventId() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.GLOBAL_OBJ.navigator || {};\n\n  const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.makeSession)({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.updateSession)(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.closeSession)(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/exports.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/hub.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/hub.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   Hub: () => (/* binding */ Hub),\n/* harmony export */   ensureHubOnCarrier: () => (/* binding */ ensureHubOnCarrier),\n/* harmony export */   getCurrentHub: () => (/* binding */ getCurrentHub),\n/* harmony export */   getHubFromCarrier: () => (/* binding */ getHubFromCarrier),\n/* harmony export */   getIsolationScope: () => (/* binding */ getIsolationScope),\n/* harmony export */   getMainCarrier: () => (/* binding */ getMainCarrier),\n/* harmony export */   makeMain: () => (/* binding */ makeMain),\n/* harmony export */   runWithAsyncContext: () => (/* binding */ runWithAsyncContext),\n/* harmony export */   setAsyncContextStrategy: () => (/* binding */ setAsyncContextStrategy),\n/* harmony export */   setHubOnCarrier: () => (/* binding */ setHubOnCarrier)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ \"(ssr)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@sentry/core/esm/version.js\");\n\n\n\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = parseFloat(_version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n   constructor(\n    client,\n    scope,\n    isolationScope,\n      _version = API_VERSION,\n  ) {this._version = _version;\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n   bindClient(client) {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   popScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n   withScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isThenable)(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n   getClient() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n   getScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n   getStack() {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dateTimestampInSeconds)();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n   setUser(user) {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n   setTags(tags) {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n   setExtras(extras) {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n   setTag(key, value) {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n   setExtra(key, extra) {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n   configureScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   run(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n   endSession() {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.closeSession)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n   startSession(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.navigator || {};\n\n    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.makeSession)({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.updateSession)(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n   shouldSendDefaultPii() {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nfunction getIsolationScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getHubFromCarrier(carrier) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.getGlobalSingleton)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/hub.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scope: () => (/* binding */ Scope),\n/* harmony export */   getGlobalScope: () => (/* binding */ getGlobalScope),\n/* harmony export */   setGlobalScope: () => (/* binding */ setGlobalScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventProcessors.js */ \"(ssr)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/applyScopeDataToEvent.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n\n\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /**\n   * Transaction Name\n   */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  /** The client on this scope */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n   static clone(scope) {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n   clone() {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n   getClient() {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(scopeToMerge)) {\n      const scopeContext = captureContext ;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n   getAttachments() {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors = [],\n  ) {\n    (0,_utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),\n      ...this._eventProcessors,\n    ];\n\n    return (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nfunction setGlobalScope(scope) {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)(),\n    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)().substring(16),\n  };\n}\n\n\n//# sourceMappingURL=scope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/scope.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeSession: () => (/* binding */ closeSession),\n/* harmony export */   makeSession: () => (/* binding */ makeSession),\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDynamicSamplingContextFromClient: () => (/* binding */ getDynamicSamplingContextFromClient),\n/* harmony export */   getDynamicSamplingContextFromSpan: () => (/* binding */ getDynamicSamplingContextFromSpan)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../exports.js */ \"(ssr)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getRootSpan.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).trace_id || '', client, (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span) ;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanIsSampled)(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n\n//# sourceMappingURL=dynamicSamplingContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRDtBQUNJO0FBQ0s7QUFDTDtBQUNZOztBQUVsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQSxVQUFVLHdCQUF3Qjs7QUFFbEMsY0FBYyxnRUFBaUI7QUFDL0Isd0NBQXdDLDhEQUFtQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzREFBUztBQUMxQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrREFBa0QsK0RBQVUsK0JBQStCLDREQUFlOztBQUUxRztBQUNBLGNBQWMsa0VBQVc7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0NBQXNDO0FBQ2hEO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6Qzs7QUFFQTtBQUNBLG1CQUFtQiwrREFBVTs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGtFQUFhOztBQUVwQzs7QUFFQTtBQUNBOztBQUVrRjtBQUNsRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9keW5hbWljU2FtcGxpbmdDb250ZXh0LmpzPzY2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFRkFVTFRfRU5WSVJPTk1FTlQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgZ2V0Q2xpZW50LCBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuLi9leHBvcnRzLmpzJztcbmltcG9ydCB7IGdldFJvb3RTcGFuIH0gZnJvbSAnLi4vdXRpbHMvZ2V0Um9vdFNwYW4uanMnO1xuaW1wb3J0IHsgc3BhblRvSlNPTiwgc3BhbklzU2FtcGxlZCB9IGZyb20gJy4uL3V0aWxzL3NwYW5VdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBmcm9tIGEgY2xpZW50LlxuICpcbiAqIERpc3BhdGNoZXMgdGhlIGBjcmVhdGVEc2NgIGxpZmVjeWNsZSBob29rIGFzIGEgc2lkZSBlZmZlY3QuXG4gKi9cbmZ1bmN0aW9uIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50KFxuICB0cmFjZV9pZCxcbiAgY2xpZW50LFxuICBzY29wZSxcbikge1xuICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICBjb25zdCB7IHB1YmxpY0tleTogcHVibGljX2tleSB9ID0gY2xpZW50LmdldERzbigpIHx8IHt9O1xuICAvLyBUT0RPKHY4KTogUmVtb3ZlIHNlZ21lbnQgZnJvbSBVc2VyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB7IHNlZ21lbnQ6IHVzZXJfc2VnbWVudCB9ID0gKHNjb3BlICYmIHNjb3BlLmdldFVzZXIoKSkgfHwge307XG5cbiAgY29uc3QgZHNjID0gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIGVudmlyb25tZW50OiBvcHRpb25zLmVudmlyb25tZW50IHx8IERFRkFVTFRfRU5WSVJPTk1FTlQsXG4gICAgcmVsZWFzZTogb3B0aW9ucy5yZWxlYXNlLFxuICAgIHVzZXJfc2VnbWVudCxcbiAgICBwdWJsaWNfa2V5LFxuICAgIHRyYWNlX2lkLFxuICB9KSA7XG5cbiAgY2xpZW50LmVtaXQgJiYgY2xpZW50LmVtaXQoJ2NyZWF0ZURzYycsIGRzYyk7XG5cbiAgcmV0dXJuIGRzYztcbn1cblxuLyoqXG4gKiBBIFNwYW4gd2l0aCBhIGZyb3plbiBkeW5hbWljIHNhbXBsaW5nIGNvbnRleHQuXG4gKi9cblxuLyoqXG4gKiBDcmVhdGVzIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IGZyb20gYSBzcGFuIChhbmQgY2xpZW50IGFuZCBzY29wZSlcbiAqXG4gKiBAcGFyYW0gc3BhbiB0aGUgc3BhbiBmcm9tIHdoaWNoIGEgZmV3IHZhbHVlcyBsaWtlIHRoZSByb290IHNwYW4gbmFtZSBhbmQgc2FtcGxlIHJhdGUgYXJlIGV4dHJhY3RlZC5cbiAqXG4gKiBAcmV0dXJucyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dFxuICovXG5mdW5jdGlvbiBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4oc3Bhbikge1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgaWYgKCFjbGllbnQpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICAvLyBwYXNzaW5nIGVtaXQ9ZmFsc2UgaGVyZSB0byBvbmx5IGVtaXQgbGF0ZXIgb25jZSB0aGUgRFNDIGlzIGFjdHVhbGx5IHBvcHVsYXRlZFxuICBjb25zdCBkc2MgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudChzcGFuVG9KU09OKHNwYW4pLnRyYWNlX2lkIHx8ICcnLCBjbGllbnQsIGdldEN1cnJlbnRTY29wZSgpKTtcblxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSB2N0Zyb3plbkRzYyBhcyBhIFRyYW5zYWN0aW9uIHdpbGwgbm8gbG9uZ2VyIGhhdmUgX2Zyb3plbkR5bmFtaWNTYW1wbGluZ0NvbnRleHRcbiAgY29uc3QgdHhuID0gZ2V0Um9vdFNwYW4oc3BhbikgO1xuICBpZiAoIXR4bikge1xuICAgIHJldHVybiBkc2M7XG4gIH1cblxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSB2N0Zyb3plbkRzYyBhcyBhIFRyYW5zYWN0aW9uIHdpbGwgbm8gbG9uZ2VyIGhhdmUgX2Zyb3plbkR5bmFtaWNTYW1wbGluZ0NvbnRleHRcbiAgLy8gRm9yIG5vdyB3ZSBuZWVkIHRvIGF2b2lkIGJyZWFraW5nIHVzZXJzIHdobyBkaXJlY3RseSBjcmVhdGVkIGEgdHhuIHdpdGggYSBEU0MsIHdoZXJlIHRoaXMgZmllbGQgaXMgc3RpbGwgc2V0LlxuICAvLyBAc2VlIFRyYW5zYWN0aW9uIGNsYXNzIGNvbnN0cnVjdG9yXG4gIGNvbnN0IHY3RnJvemVuRHNjID0gdHhuICYmIHR4bi5fZnJvemVuRHluYW1pY1NhbXBsaW5nQ29udGV4dDtcbiAgaWYgKHY3RnJvemVuRHNjKSB7XG4gICAgcmV0dXJuIHY3RnJvemVuRHNjO1xuICB9XG5cbiAgLy8gVE9ETyAodjgpOiBSZXBsYWNlIHR4bi5tZXRhZGF0YSB3aXRoIHR4bi5hdHRyaWJ1dGVzW11cbiAgLy8gV2UgY2FuJ3QgZG8gdGhpcyB5ZXQgYmVjYXVzZSBhdHRyaWJ1dGVzIGFyZW4ndCBhbHdheXMgc2V0IHlldC5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHsgc2FtcGxlUmF0ZTogbWF5YmVTYW1wbGVSYXRlLCBzb3VyY2UgfSA9IHR4bi5tZXRhZGF0YTtcbiAgaWYgKG1heWJlU2FtcGxlUmF0ZSAhPSBudWxsKSB7XG4gICAgZHNjLnNhbXBsZV9yYXRlID0gYCR7bWF5YmVTYW1wbGVSYXRlfWA7XG4gIH1cblxuICAvLyBXZSBkb24ndCB3YW50IHRvIGhhdmUgYSB0cmFuc2FjdGlvbiBuYW1lIGluIHRoZSBEU0MgaWYgdGhlIHNvdXJjZSBpcyBcInVybFwiIGJlY2F1c2UgVVJMcyBtaWdodCBjb250YWluIFBJSVxuICBjb25zdCBqc29uU3BhbiA9IHNwYW5Ub0pTT04odHhuKTtcblxuICAvLyBhZnRlciBKU09OIGNvbnZlcnNpb24sIHR4bi5uYW1lIGJlY29tZXMganNvblNwYW4uZGVzY3JpcHRpb25cbiAgaWYgKHNvdXJjZSAmJiBzb3VyY2UgIT09ICd1cmwnKSB7XG4gICAgZHNjLnRyYW5zYWN0aW9uID0ganNvblNwYW4uZGVzY3JpcHRpb247XG4gIH1cblxuICBkc2Muc2FtcGxlZCA9IFN0cmluZyhzcGFuSXNTYW1wbGVkKHR4bikpO1xuXG4gIGNsaWVudC5lbWl0ICYmIGNsaWVudC5lbWl0KCdjcmVhdGVEc2MnLCBkc2MpO1xuXG4gIHJldHVybiBkc2M7XG59XG5cbmV4cG9ydCB7IGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50LCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWR5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyScopeDataToEvent: () => (/* binding */ applyScopeDataToEvent),\n/* harmony export */   mergeAndOverwriteScopeData: () => (/* binding */ mergeAndOverwriteScopeData),\n/* harmony export */   mergeScopeData: () => (/* binding */ mergeScopeData)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tracing/dynamicSamplingContext.js */ \"(ssr)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getRootSpan.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spanUtils.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\nfunction applyDataToEvent(event, data) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = { trace: (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToTraceContext)(span), ...event.contexts };\n  const rootSpan = (0,_getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromSpan)(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\n\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/utils/getRootSpan.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/getRootSpan.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRootSpan: () => (/* binding */ getRootSpan)\n/* harmony export */ });\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nfunction getRootSpan(span) {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n\n\n//# sourceMappingURL=getRootSpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9nZXRSb290U3Bhbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9nZXRSb290U3Bhbi5qcz80MGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0aGUgcm9vdCBzcGFuIG9mIGEgZ2l2ZW4gc3Bhbi5cbiAqXG4gKiBBcyBsb25nIGFzIHdlIHVzZSBgVHJhbnNhY3Rpb25gcyBpbnRlcm5hbGx5LCB0aGUgcmV0dXJuZWQgcm9vdCBzcGFuXG4gKiB3aWxsIGJlIGEgYFRyYW5zYWN0aW9uYCBidXQgYmUgYXdhcmUgdGhhdCB0aGlzIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuICpcbiAqIElmIHRoZSBnaXZlbiBzcGFuIGhhcyBubyByb290IHNwYW4gb3IgdHJhbnNhY3Rpb24sIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLlxuICovXG5mdW5jdGlvbiBnZXRSb290U3BhbihzcGFuKSB7XG4gIC8vIFRPRE8gKHY4KTogUmVtb3ZlIHRoaXMgY2hlY2sgYW5kIGp1c3QgcmV0dXJuIHNwYW5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIHJldHVybiBzcGFuLnRyYW5zYWN0aW9uO1xufVxuXG5leHBvcnQgeyBnZXRSb290U3BhbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Um9vdFNwYW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyDebugIds: () => (/* binding */ applyDebugIds),\n/* harmony export */   applyDebugMeta: () => (/* binding */ applyDebugMeta),\n/* harmony export */   parseEventHintOrCaptureContext: () => (/* binding */ parseEventHintOrCaptureContext),\n/* harmony export */   prepareEvent: () => (/* binding */ prepareEvent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eventProcessors.js */ \"(ssr)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope.js */ \"(ssr)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./applyScopeDataToEvent.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./spanUtils.js */ \"(ssr)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = (0,_scope_js__WEBPACK_IMPORTED_MODULE_2__.getGlobalScope)().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope, captureContext) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/utils/spanUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/spanUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRACE_FLAG_NONE: () => (/* binding */ TRACE_FLAG_NONE),\n/* harmony export */   TRACE_FLAG_SAMPLED: () => (/* binding */ TRACE_FLAG_SAMPLED),\n/* harmony export */   spanIsSampled: () => (/* binding */ spanIsSampled),\n/* harmony export */   spanTimeInputToSeconds: () => (/* binding */ spanTimeInputToSeconds),\n/* harmony export */   spanToJSON: () => (/* binding */ spanToJSON),\n/* harmony export */   spanToTraceContext: () => (/* binding */ spanToTraceContext),\n/* harmony export */   spanToTraceHeader: () => (/* binding */ spanToTraceHeader)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/./node_modules/@sentry/utils/esm/time.js\");\n\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.generateSentryTraceHeader)(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.timestampInSeconds)();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nfunction spanToJSON(span) {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n\n\n//# sourceMappingURL=spanUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpRzs7QUFFakc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0MsVUFBVSxpREFBaUQ7O0FBRTNELFNBQVMsZ0VBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGtCQUFrQjtBQUM1QjtBQUNBLFNBQVMsd0VBQXlCO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFNBQVMsaUVBQWtCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsYUFBYTtBQUN2QjtBQUNBO0FBQ0E7O0FBRXlJO0FBQ3pJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanM/MzJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cywgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgdGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8vIFRoZXNlIGFyZSBhbGlnbmVkIHdpdGggT3BlblRlbGVtZXRyeSB0cmFjZSBmbGFnc1xuY29uc3QgVFJBQ0VfRkxBR19OT05FID0gMHgwO1xuY29uc3QgVFJBQ0VfRkxBR19TQU1QTEVEID0gMHgxO1xuXG4vKipcbiAqIENvbnZlcnQgYSBzcGFuIHRvIGEgdHJhY2UgY29udGV4dCwgd2hpY2ggY2FuIGJlIHNlbnQgYXMgdGhlIGB0cmFjZWAgY29udGV4dCBpbiBhbiBldmVudC5cbiAqL1xuZnVuY3Rpb24gc3BhblRvVHJhY2VDb250ZXh0KHNwYW4pIHtcbiAgY29uc3QgeyBzcGFuSWQ6IHNwYW5faWQsIHRyYWNlSWQ6IHRyYWNlX2lkIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIGNvbnN0IHsgZGF0YSwgb3AsIHBhcmVudF9zcGFuX2lkLCBzdGF0dXMsIHRhZ3MsIG9yaWdpbiB9ID0gc3BhblRvSlNPTihzcGFuKTtcblxuICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIGRhdGEsXG4gICAgb3AsXG4gICAgcGFyZW50X3NwYW5faWQsXG4gICAgc3Bhbl9pZCxcbiAgICBzdGF0dXMsXG4gICAgdGFncyxcbiAgICB0cmFjZV9pZCxcbiAgICBvcmlnaW4sXG4gIH0pO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYSBTcGFuIHRvIGEgU2VudHJ5IHRyYWNlIGhlYWRlci5cbiAqL1xuZnVuY3Rpb24gc3BhblRvVHJhY2VIZWFkZXIoc3Bhbikge1xuICBjb25zdCB7IHRyYWNlSWQsIHNwYW5JZCB9ID0gc3Bhbi5zcGFuQ29udGV4dCgpO1xuICBjb25zdCBzYW1wbGVkID0gc3BhbklzU2FtcGxlZChzcGFuKTtcbiAgcmV0dXJuIGdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIodHJhY2VJZCwgc3BhbklkLCBzYW1wbGVkKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3BhbiB0aW1lIGlucHV0IGludHAgYSB0aW1lc3RhbXAgaW4gc2Vjb25kcy5cbiAqL1xuZnVuY3Rpb24gc3BhblRpbWVJbnB1dFRvU2Vjb25kcyhpbnB1dCkge1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBlbnN1cmVUaW1lc3RhbXBJblNlY29uZHMoaW5wdXQpO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgLy8gU2VlIHtAbGluayBIclRpbWV9IGZvciB0aGUgYXJyYXktYmFzZWQgdGltZSBmb3JtYXRcbiAgICByZXR1cm4gaW5wdXRbMF0gKyBpbnB1dFsxXSAvIDFlOTtcbiAgfVxuXG4gIGlmIChpbnB1dCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZW5zdXJlVGltZXN0YW1wSW5TZWNvbmRzKGlucHV0LmdldFRpbWUoKSk7XG4gIH1cblxuICByZXR1cm4gdGltZXN0YW1wSW5TZWNvbmRzKCk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSB0aW1lc3RhbXAgdG8gc2Vjb25kLCBpZiBpdCB3YXMgaW4gbWlsbGlzZWNvbmRzLCBvciBrZWVwcyBpdCBhcyBzZWNvbmQuXG4gKi9cbmZ1bmN0aW9uIGVuc3VyZVRpbWVzdGFtcEluU2Vjb25kcyh0aW1lc3RhbXApIHtcbiAgY29uc3QgaXNNcyA9IHRpbWVzdGFtcCA+IDk5OTk5OTk5OTk7XG4gIHJldHVybiBpc01zID8gdGltZXN0YW1wIC8gMTAwMCA6IHRpbWVzdGFtcDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3BhbiB0byBhIEpTT04gcmVwcmVzZW50YXRpb24uXG4gKiBOb3RlIHRoYXQgYWxsIGZpZWxkcyByZXR1cm5lZCBoZXJlIGFyZSBvcHRpb25hbCBhbmQgbmVlZCB0byBiZSBndWFyZGVkIGFnYWluc3QuXG4gKlxuICogTm90ZTogQmVjYXVzZSBvZiB0aGlzLCB3ZSBjdXJyZW50bHkgaGF2ZSBhIGNpcmN1bGFyIHR5cGUgZGVwZW5kZW5jeSAod2hpY2ggd2Ugb3B0ZWQgb3V0IG9mIGluIHBhY2thZ2UuanNvbikuXG4gKiBUaGlzIGlzIG5vdCBhdm9pZGFibGUgYXMgd2UgbmVlZCBgc3BhblRvSlNPTmAgaW4gYHNwYW5VdGlscy50c2AsIHdoaWNoIGluIHR1cm4gaXMgbmVlZGVkIGJ5IGBzcGFuLnRzYCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG4gKiBBbmQgYHNwYW5Ub0pTT05gIG5lZWRzIHRoZSBTcGFuIGNsYXNzIGZyb20gYHNwYW4udHNgIHRvIGNoZWNrIGhlcmUuXG4gKiBUT0RPIHY4OiBXaGVuIHdlIHJlbW92ZSB0aGUgZGVwcmVjYXRlZCBzdHVmZiBmcm9tIGBzcGFuLnRzYCwgd2UgY2FuIHJlbW92ZSB0aGUgY2lyY3VsYXIgZGVwZW5kZW5jeSBhZ2Fpbi5cbiAqL1xuZnVuY3Rpb24gc3BhblRvSlNPTihzcGFuKSB7XG4gIGlmIChzcGFuSXNTcGFuQ2xhc3Moc3BhbikpIHtcbiAgICByZXR1cm4gc3Bhbi5nZXRTcGFuSlNPTigpO1xuICB9XG5cbiAgLy8gRmFsbGJhY2s6IFdlIGFsc28gY2hlY2sgZm9yIGAudG9KU09OKClgIGhlcmUuLi5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmICh0eXBlb2Ygc3Bhbi50b0pTT04gPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICByZXR1cm4gc3Bhbi50b0pTT04oKTtcbiAgfVxuXG4gIHJldHVybiB7fTtcbn1cblxuLyoqXG4gKiBTYWRseSwgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY3kgY2hlY2tzIHdlIGNhbm5vdCBhY3R1YWxseSBpbXBvcnQgdGhlIFNwYW4gY2xhc3MgaGVyZSBhbmQgY2hlY2sgZm9yIGluc3RhbmNlb2YuXG4gKiA6KCBTbyBpbnN0ZWFkIHdlIGFwcHJveGltYXRlIHRoaXMgYnkgY2hlY2tpbmcgaWYgaXQgaGFzIHRoZSBgZ2V0U3BhbkpTT05gIG1ldGhvZC5cbiAqL1xuZnVuY3Rpb24gc3BhbklzU3BhbkNsYXNzKHNwYW4pIHtcbiAgcmV0dXJuIHR5cGVvZiAoc3BhbiApLmdldFNwYW5KU09OID09PSAnZnVuY3Rpb24nO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIHNwYW4gaXMgc2FtcGxlZC5cbiAqIEluIG1vc3QgY2FzZXMsIHlvdSBzaG91bGQganVzdCB1c2UgYHNwYW4uaXNSZWNvcmRpbmcoKWAgaW5zdGVhZC5cbiAqIEhvd2V2ZXIsIHRoaXMgaGFzIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNlbWFudGljLCBhcyBpdCBhbHNvIHJldHVybnMgZmFsc2UgaWYgdGhlIHNwYW4gaXMgZmluaXNoZWQuXG4gKiBTbyBpbiB0aGUgY2FzZSB3aGVyZSB0aGlzIGRpc3RpbmN0aW9uIGlzIGltcG9ydGFudCwgdXNlIHRoaXMgbWV0aG9kLlxuICovXG5mdW5jdGlvbiBzcGFuSXNTYW1wbGVkKHNwYW4pIHtcbiAgLy8gV2UgYWxpZ24gb3VyIHRyYWNlIGZsYWdzIHdpdGggdGhlIG9uZXMgT3BlblRlbGVtZXRyeSB1c2VcbiAgLy8gU28gd2UgYWxzbyBjaGVjayBmb3Igc2FtcGxlZCB0aGUgc2FtZSB3YXkgdGhleSBkby5cbiAgY29uc3QgeyB0cmFjZUZsYWdzIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlXG4gIHJldHVybiBCb29sZWFuKHRyYWNlRmxhZ3MgJiBUUkFDRV9GTEFHX1NBTVBMRUQpO1xufVxuXG5leHBvcnQgeyBUUkFDRV9GTEFHX05PTkUsIFRSQUNFX0ZMQUdfU0FNUExFRCwgc3BhbklzU2FtcGxlZCwgc3BhblRpbWVJbnB1dFRvU2Vjb25kcywgc3BhblRvSlNPTiwgc3BhblRvVHJhY2VDb250ZXh0LCBzcGFuVG9UcmFjZUhlYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhblV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/utils/spanUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/core/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/version.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\nconst SDK_VERSION = '7.112.2';\n\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3ZlcnNpb24uanM/Y2RiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTREtfVkVSU0lPTiA9ICc3LjExMi4yJztcblxuZXhwb3J0IHsgU0RLX1ZFUlNJT04gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/core/esm/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BAGGAGE_HEADER_NAME: () => (/* binding */ BAGGAGE_HEADER_NAME),\n/* harmony export */   MAX_BAGGAGE_STRING_LENGTH: () => (/* binding */ MAX_BAGGAGE_STRING_LENGTH),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX_REGEX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX),\n/* harmony export */   baggageHeaderToDynamicSamplingContext: () => (/* binding */ baggageHeaderToDynamicSamplingContext),\n/* harmony export */   dynamicSamplingContextToSentryBaggageHeader: () => (/* binding */ dynamicSamplingContextToSentryBaggageHeader)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYmFnZ2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBK0M7QUFDWjtBQUNFOztBQUVyQzs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0RBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1QsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBCQUEwQixFQUFFLE9BQU87QUFDbEQ7QUFDQTtBQUNBLEtBQUs7QUFDTCxNQUFNO0FBQ047O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRCQUE0Qiw4QkFBOEIsR0FBRyxnQ0FBZ0M7QUFDN0Ysb0VBQW9FLGNBQWMsR0FBRyxhQUFhO0FBQ2xHO0FBQ0EsTUFBTSx3REFBVztBQUNqQixRQUFRLDhDQUFNO0FBQ2QsNkJBQTZCLFdBQVcsWUFBWSxhQUFhO0FBQ2pFO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFME07QUFDMU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9iYWdnYWdlLmpzPzJiNWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IGlzU3RyaW5nIH0gZnJvbSAnLi9pcy5qcyc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5cbmNvbnN0IEJBR0dBR0VfSEVBREVSX05BTUUgPSAnYmFnZ2FnZSc7XG5cbmNvbnN0IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVggPSAnc2VudHJ5LSc7XG5cbmNvbnN0IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVhfUkVHRVggPSAvXnNlbnRyeS0vO1xuXG4vKipcbiAqIE1heCBsZW5ndGggb2YgYSBzZXJpYWxpemVkIGJhZ2dhZ2Ugc3RyaW5nXG4gKlxuICogaHR0cHM6Ly93d3cudzMub3JnL1RSL2JhZ2dhZ2UvI2xpbWl0c1xuICovXG5jb25zdCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RIID0gODE5MjtcblxuLyoqXG4gKiBUYWtlcyBhIGJhZ2dhZ2UgaGVhZGVyIGFuZCB0dXJucyBpdCBpbnRvIER5bmFtaWMgU2FtcGxpbmcgQ29udGV4dCwgYnkgZXh0cmFjdGluZyBhbGwgdGhlIFwic2VudHJ5LVwiIHByZWZpeGVkIHZhbHVlc1xuICogZnJvbSBpdC5cbiAqXG4gKiBAcGFyYW0gYmFnZ2FnZUhlYWRlciBBIHZlcnkgYnJlYWQgZGVmaW5pdGlvbiBvZiBhIGJhZ2dhZ2UgaGVhZGVyIGFzIGl0IG1pZ2h0IGFwcGVhciBpbiB2YXJpb3VzIGZyYW1ld29ya3MuXG4gKiBAcmV0dXJucyBUaGUgRHluYW1pYyBTYW1wbGluZyBDb250ZXh0IHRoYXQgd2FzIGZvdW5kIG9uIGBiYWdnYWdlSGVhZGVyYCwgaWYgdGhlcmUgd2FzIGFueSwgYHVuZGVmaW5lZGAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KFxuICAvLyBWZXJ5IGxpYmVyYWwgZGVmaW5pdGlvbiBvZiB3aGF0IGFueSBpbmNvbWluZyBoZWFkZXIgbWlnaHQgbG9vayBsaWtlXG4gIGJhZ2dhZ2VIZWFkZXIsXG4pIHtcbiAgaWYgKCFpc1N0cmluZyhiYWdnYWdlSGVhZGVyKSAmJiAhQXJyYXkuaXNBcnJheShiYWdnYWdlSGVhZGVyKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBJbnRlcm1lZGlhcnkgb2JqZWN0IHRvIHN0b3JlIGJhZ2dhZ2Uga2V5IHZhbHVlIHBhaXJzIG9mIGluY29taW5nIGJhZ2dhZ2UgaGVhZGVycyBvbi5cbiAgLy8gSXQgaXMgbGF0ZXIgdXNlZCB0byByZWFkIFNlbnRyeS1EU0MtdmFsdWVzIGZyb20uXG4gIGxldCBiYWdnYWdlT2JqZWN0ID0ge307XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYmFnZ2FnZUhlYWRlcikpIHtcbiAgICAvLyBDb21iaW5lIGFsbCBiYWdnYWdlIGhlYWRlcnMgaW50byBvbmUgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGJhZ2dhZ2UgdmFsdWVzIHNvIHdlIGNhbiBsYXRlciByZWFkIHRoZSBTZW50cnktRFNDLXZhbHVlcyBmcm9tIGl0XG4gICAgYmFnZ2FnZU9iamVjdCA9IGJhZ2dhZ2VIZWFkZXIucmVkdWNlKChhY2MsIGN1cnIpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJCYWdnYWdlT2JqZWN0ID0gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGN1cnIpO1xuICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoY3VyckJhZ2dhZ2VPYmplY3QpKSB7XG4gICAgICAgIGFjY1trZXldID0gY3VyckJhZ2dhZ2VPYmplY3Rba2V5XTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9IGVsc2Uge1xuICAgIC8vIFJldHVybiB1bmRlZmluZWQgaWYgYmFnZ2FnZSBoZWFkZXIgaXMgYW4gZW1wdHkgc3RyaW5nICh0ZWNobmljYWxseSBhbiBlbXB0eSBiYWdnYWdlIGhlYWRlciBpcyBub3Qgc3BlYyBjb25mb3JtIGJ1dFxuICAgIC8vIHRoaXMgaXMgaG93IHdlIGNob29zZSB0byBoYW5kbGUgaXQpXG4gICAgaWYgKCFiYWdnYWdlSGVhZGVyKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGJhZ2dhZ2VPYmplY3QgPSBiYWdnYWdlSGVhZGVyVG9PYmplY3QoYmFnZ2FnZUhlYWRlcik7XG4gIH1cblxuICAvLyBSZWFkIGFsbCBcInNlbnRyeS1cIiBwcmVmaXhlZCB2YWx1ZXMgb3V0IG9mIHRoZSBiYWdnYWdlIG9iamVjdCBhbmQgcHV0IGl0IG9udG8gYSBkeW5hbWljIHNhbXBsaW5nIGNvbnRleHQgb2JqZWN0LlxuICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gT2JqZWN0LmVudHJpZXMoYmFnZ2FnZU9iamVjdCkucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgIGlmIChrZXkubWF0Y2goU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWF9SRUdFWCkpIHtcbiAgICAgIGNvbnN0IG5vblByZWZpeGVkS2V5ID0ga2V5LnNsaWNlKFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVgubGVuZ3RoKTtcbiAgICAgIGFjY1tub25QcmVmaXhlZEtleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuXG4gIC8vIE9ubHkgcmV0dXJuIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IG9iamVjdCBpZiB0aGVyZSBhcmUga2V5cyBpbiBpdC5cbiAgLy8gQSBrZXlsZXNzIG9iamVjdCBtZWFucyB0aGVyZSB3ZXJlIG5vIHNlbnRyeSB2YWx1ZXMgb24gdGhlIGhlYWRlciwgd2hpY2ggbWVhbnMgdGhhdCB0aGVyZSBpcyBubyBEU0MuXG4gIGlmIChPYmplY3Qua2V5cyhkeW5hbWljU2FtcGxpbmdDb250ZXh0KS5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBUdXJucyBhIER5bmFtaWMgU2FtcGxpbmcgT2JqZWN0IGludG8gYSBiYWdnYWdlIGhlYWRlciBieSBwcmVmaXhpbmcgYWxsIHRoZSBrZXlzIG9uIHRoZSBvYmplY3Qgd2l0aCBcInNlbnRyeS1cIi5cbiAqXG4gKiBAcGFyYW0gZHluYW1pY1NhbXBsaW5nQ29udGV4dCBUaGUgRHluYW1pYyBTYW1wbGluZyBDb250ZXh0IHRvIHR1cm4gaW50byBhIGhlYWRlci4gRm9yIGNvbnZlbmllbmNlIGFuZCBjb21wYXRpYmlsaXR5XG4gKiB3aXRoIHRoZSBgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dGAgbWV0aG9kIG9uIHRoZSBUcmFuc2FjdGlvbiBjbGFzcyAsdGhpcyBhcmd1bWVudCBjYW4gYWxzbyBiZSBgdW5kZWZpbmVkYC4gSWYgaXQgaXNcbiAqIGB1bmRlZmluZWRgIHRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiBgdW5kZWZpbmVkYC5cbiAqIEByZXR1cm5zIGEgYmFnZ2FnZSBoZWFkZXIsIGNyZWF0ZWQgZnJvbSBgZHluYW1pY1NhbXBsaW5nQ29udGV4dGAsIG9yIGB1bmRlZmluZWRgIGVpdGhlciBpZiBgZHluYW1pY1NhbXBsaW5nQ29udGV4dGBcbiAqIHdhcyBgdW5kZWZpbmVkYCwgb3IgaWYgYGR5bmFtaWNTYW1wbGluZ0NvbnRleHRgIGRpZG4ndCBjb250YWluIGFueSB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoXG4gIC8vIHRoaXMgYWxzbyB0YWtlcyB1bmRlZmluZWQgZm9yIGNvbnZlbmllbmNlIGFuZCBidW5kbGUgc2l6ZSBpbiBvdGhlciBwbGFjZXNcbiAgZHluYW1pY1NhbXBsaW5nQ29udGV4dCxcbikge1xuICBpZiAoIWR5bmFtaWNTYW1wbGluZ0NvbnRleHQpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLy8gUHJlZml4IGFsbCBEU0Mga2V5cyB3aXRoIFwic2VudHJ5LVwiIGFuZCBwdXQgdGhlbSBpbnRvIGEgbmV3IG9iamVjdFxuICBjb25zdCBzZW50cnlQcmVmaXhlZERTQyA9IE9iamVjdC5lbnRyaWVzKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpLnJlZHVjZShcbiAgICAoYWNjLCBbZHNjS2V5LCBkc2NWYWx1ZV0pID0+IHtcbiAgICAgIGlmIChkc2NWYWx1ZSkge1xuICAgICAgICBhY2NbYCR7U0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWH0ke2RzY0tleX1gXSA9IGRzY1ZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LFxuICAgIHt9LFxuICApO1xuXG4gIHJldHVybiBvYmplY3RUb0JhZ2dhZ2VIZWFkZXIoc2VudHJ5UHJlZml4ZWREU0MpO1xufVxuXG4vKipcbiAqIFdpbGwgcGFyc2UgYSBiYWdnYWdlIGhlYWRlciwgd2hpY2ggaXMgYSBzaW1wbGUga2V5LXZhbHVlIG1hcCwgaW50byBhIGZsYXQgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBiYWdnYWdlSGVhZGVyIFRoZSBiYWdnYWdlIGhlYWRlciB0byBwYXJzZS5cbiAqIEByZXR1cm5zIGEgZmxhdCBvYmplY3QgY29udGFpbmluZyBhbGwgdGhlIGtleS12YWx1ZSBwYWlycyBmcm9tIGBiYWdnYWdlSGVhZGVyYC5cbiAqL1xuZnVuY3Rpb24gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGJhZ2dhZ2VIZWFkZXIpIHtcbiAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXJcbiAgICAuc3BsaXQoJywnKVxuICAgIC5tYXAoYmFnZ2FnZUVudHJ5ID0+IGJhZ2dhZ2VFbnRyeS5zcGxpdCgnPScpLm1hcChrZXlPclZhbHVlID0+IGRlY29kZVVSSUNvbXBvbmVudChrZXlPclZhbHVlLnRyaW0oKSkpKVxuICAgIC5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG59XG5cbi8qKlxuICogVHVybnMgYSBmbGF0IG9iamVjdCAoa2V5LXZhbHVlIHBhaXJzKSBpbnRvIGEgYmFnZ2FnZSBoZWFkZXIsIHdoaWNoIGlzIGFsc28ganVzdCBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgb2JqZWN0IHRvIHR1cm4gaW50byBhIGJhZ2dhZ2UgaGVhZGVyLlxuICogQHJldHVybnMgYSBiYWdnYWdlIGhlYWRlciBzdHJpbmcsIG9yIGB1bmRlZmluZWRgIGlmIHRoZSBvYmplY3QgZGlkbid0IGhhdmUgYW55IHZhbHVlcywgc2luY2UgYW4gZW1wdHkgYmFnZ2FnZSBoZWFkZXJcbiAqIGlzIG5vdCBzcGVjIGNvbXBsaWFudC5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9CYWdnYWdlSGVhZGVyKG9iamVjdCkge1xuICBpZiAoT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGggPT09IDApIHtcbiAgICAvLyBBbiBlbXB0eSBiYWdnYWdlIGhlYWRlciBpcyBub3Qgc3BlYyBjb21wbGlhbnQ6IFdlIHJldHVybiB1bmRlZmluZWQuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZW50cmllcyhvYmplY3QpLnJlZHVjZSgoYmFnZ2FnZUhlYWRlciwgW29iamVjdEtleSwgb2JqZWN0VmFsdWVdLCBjdXJyZW50SW5kZXgpID0+IHtcbiAgICBjb25zdCBiYWdnYWdlRW50cnkgPSBgJHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0S2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0VmFsdWUpfWA7XG4gICAgY29uc3QgbmV3QmFnZ2FnZUhlYWRlciA9IGN1cnJlbnRJbmRleCA9PT0gMCA/IGJhZ2dhZ2VFbnRyeSA6IGAke2JhZ2dhZ2VIZWFkZXJ9LCR7YmFnZ2FnZUVudHJ5fWA7XG4gICAgaWYgKG5ld0JhZ2dhZ2VIZWFkZXIubGVuZ3RoID4gTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSCkge1xuICAgICAgREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLndhcm4oXG4gICAgICAgICAgYE5vdCBhZGRpbmcga2V5OiAke29iamVjdEtleX0gd2l0aCB2YWw6ICR7b2JqZWN0VmFsdWV9IHRvIGJhZ2dhZ2UgaGVhZGVyIGR1ZSB0byBleGNlZWRpbmcgYmFnZ2FnZSBzaXplIGxpbWl0cy5gLFxuICAgICAgICApO1xuICAgICAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXdCYWdnYWdlSGVhZGVyO1xuICAgIH1cbiAgfSwgJycpO1xufVxuXG5leHBvcnQgeyBCQUdHQUdFX0hFQURFUl9OQU1FLCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RILCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYLCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYLCBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0LCBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWdnYWdlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/baggage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getComponentName: () => (/* binding */ getComponentName),\n/* harmony export */   getDomElement: () => (/* binding */ getDomElement),\n/* harmony export */   getLocationHref: () => (/* binding */ getLocationHref),\n/* harmony export */   htmlTreeAsString: () => (/* binding */ htmlTreeAsString)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/debug-build.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/debug-build.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZGVidWctYnVpbGQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBdUMsSUFBSSxLQUFnQjs7QUFFekQ7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9kZWJ1Zy1idWlsZC5qcz9hNTFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/debug-build.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDOMError: () => (/* binding */ isDOMError),\n/* harmony export */   isDOMException: () => (/* binding */ isDOMException),\n/* harmony export */   isElement: () => (/* binding */ isElement),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   isErrorEvent: () => (/* binding */ isErrorEvent),\n/* harmony export */   isEvent: () => (/* binding */ isEvent),\n/* harmony export */   isInstanceOf: () => (/* binding */ isInstanceOf),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isParameterizedString: () => (/* binding */ isParameterizedString),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isPrimitive: () => (/* binding */ isPrimitive),\n/* harmony export */   isRegExp: () => (/* binding */ isRegExp),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isSyntheticEvent: () => (/* binding */ isSyntheticEvent),\n/* harmony export */   isThenable: () => (/* binding */ isThenable),\n/* harmony export */   isVueViewModel: () => (/* binding */ isVueViewModel)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\n\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSOLE_LEVELS: () => (/* binding */ CONSOLE_LEVELS),\n/* harmony export */   consoleSandbox: () => (/* binding */ consoleSandbox),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   originalConsoleMethods: () => (/* binding */ originalConsoleMethods)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\n\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNIOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBdUI7QUFDL0I7QUFDQTs7QUFFQSxrQkFBa0IscURBQVU7QUFDNUI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxNQUFNLHdEQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFVLGtCQUFrQixPQUFPLEdBQUcsS0FBSztBQUN2RCxXQUFXO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2xvZ2dlci5qcz85NTkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG4vKiogUHJlZml4IGZvciBsb2dnaW5nIHN0cmluZ3MgKi9cbmNvbnN0IFBSRUZJWCA9ICdTZW50cnkgTG9nZ2VyICc7XG5cbmNvbnN0IENPTlNPTEVfTEVWRUxTID0gW1xuICAnZGVidWcnLFxuICAnaW5mbycsXG4gICd3YXJuJyxcbiAgJ2Vycm9yJyxcbiAgJ2xvZycsXG4gICdhc3NlcnQnLFxuICAndHJhY2UnLFxuXSA7XG5cbi8qKiBUaGlzIG1heSBiZSBtdXRhdGVkIGJ5IHRoZSBjb25zb2xlIGluc3RydW1lbnRhdGlvbi4gKi9cbmNvbnN0IG9yaWdpbmFsQ29uc29sZU1ldGhvZHNcblxuID0ge307XG5cbi8qKiBKU0RvYyAqL1xuXG4vKipcbiAqIFRlbXBvcmFyaWx5IGRpc2FibGUgc2VudHJ5IGNvbnNvbGUgaW5zdHJ1bWVudGF0aW9ucy5cbiAqXG4gKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biBhZ2FpbnN0IHRoZSBvcmlnaW5hbCBgY29uc29sZWAgbWVzc2FnZXNcbiAqIEByZXR1cm5zIFRoZSByZXN1bHRzIG9mIHRoZSBjYWxsYmFja1xuICovXG5mdW5jdGlvbiBjb25zb2xlU2FuZGJveChjYWxsYmFjaykge1xuICBpZiAoISgnY29uc29sZScgaW4gR0xPQkFMX09CSikpIHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfVxuXG4gIGNvbnN0IGNvbnNvbGUgPSBHTE9CQUxfT0JKLmNvbnNvbGUgO1xuICBjb25zdCB3cmFwcGVkRnVuY3MgPSB7fTtcblxuICBjb25zdCB3cmFwcGVkTGV2ZWxzID0gT2JqZWN0LmtleXMob3JpZ2luYWxDb25zb2xlTWV0aG9kcykgO1xuXG4gIC8vIFJlc3RvcmUgYWxsIHdyYXBwZWQgY29uc29sZSBtZXRob2RzXG4gIHdyYXBwZWRMZXZlbHMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF0gO1xuICAgIHdyYXBwZWRGdW5jc1tsZXZlbF0gPSBjb25zb2xlW2xldmVsXSA7XG4gICAgY29uc29sZVtsZXZlbF0gPSBvcmlnaW5hbENvbnNvbGVNZXRob2Q7XG4gIH0pO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH0gZmluYWxseSB7XG4gICAgLy8gUmV2ZXJ0IHJlc3RvcmF0aW9uIHRvIHdyYXBwZWQgc3RhdGVcbiAgICB3cmFwcGVkTGV2ZWxzLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgY29uc29sZVtsZXZlbF0gPSB3cmFwcGVkRnVuY3NbbGV2ZWxdIDtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlTG9nZ2VyKCkge1xuICBsZXQgZW5hYmxlZCA9IGZhbHNlO1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSBmYWxzZTtcbiAgICB9LFxuICAgIGlzRW5hYmxlZDogKCkgPT4gZW5hYmxlZCxcbiAgfTtcblxuICBpZiAoREVCVUdfQlVJTEQpIHtcbiAgICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAgICAgR0xPQkFMX09CSi5jb25zb2xlW25hbWVdKGAke1BSRUZJWH1bJHtuYW1lfV06YCwgLi4uYXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBsb2dnZXIgO1xufVxuXG5jb25zdCBsb2dnZXIgPSBtYWtlTG9nZ2VyKCk7XG5cbmV4cG9ydCB7IENPTlNPTEVfTEVWRUxTLCBjb25zb2xlU2FuZGJveCwgbG9nZ2VyLCBvcmlnaW5hbENvbnNvbGVNZXRob2RzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoBuilder: () => (/* binding */ memoBuilder)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL21lbW8uanM/NDRlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqXG4gKiBIZWxwZXIgdG8gZGVjeWNsZSBqc29uIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gbWVtb0J1aWxkZXIoKSB7XG4gIGNvbnN0IGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJztcbiAgY29uc3QgaW5uZXIgPSBoYXNXZWFrU2V0ID8gbmV3IFdlYWtTZXQoKSA6IFtdO1xuICBmdW5jdGlvbiBtZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpZiAoaW5uZXIuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpbm5lci5hZGQob2JqKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBpbm5lcltpXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpbm5lci5wdXNoKG9iaik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpbm5lci5kZWxldGUob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaW5uZXJbaV0gPT09IG9iaikge1xuICAgICAgICAgIGlubmVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gW21lbW9pemUsIHVubWVtb2l6ZV07XG59XG5cbmV4cG9ydCB7IG1lbW9CdWlsZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/memo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addContextToFrame: () => (/* binding */ addContextToFrame),\n/* harmony export */   addExceptionMechanism: () => (/* binding */ addExceptionMechanism),\n/* harmony export */   addExceptionTypeValue: () => (/* binding */ addExceptionTypeValue),\n/* harmony export */   arrayify: () => (/* binding */ arrayify),\n/* harmony export */   checkOrSetAlreadyCaught: () => (/* binding */ checkOrSetAlreadyCaught),\n/* harmony export */   getEventDescription: () => (/* binding */ getEventDescription),\n/* harmony export */   parseSemver: () => (/* binding */ parseSemver),\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/node-stack-trace.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node-stack-trace.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filenameIsInApp: () => (/* binding */ filenameIsInApp),\n/* harmony export */   node: () => (/* binding */ node)\n/* harmony export */ });\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app: filenameIsInApp(filename, isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS1zdGFjay10cmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxHQUFHO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQ0FBcUMsU0FBUyxHQUFHLFdBQVc7QUFDNUQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL25vZGUtc3RhY2stdHJhY2UuanM/ZTM4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERvZXMgdGhpcyBmaWxlbmFtZSBsb29rIGxpa2UgaXQncyBwYXJ0IG9mIHRoZSBhcHAgY29kZT9cbiAqL1xuZnVuY3Rpb24gZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGlzSW50ZXJuYWwgPVxuICAgIGlzTmF0aXZlIHx8XG4gICAgKGZpbGVuYW1lICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiBpdCdzIGFuIGFic29sdXRlIGxpbnV4IHBhdGhcbiAgICAgICFmaWxlbmFtZS5zdGFydHNXaXRoKCcvJykgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgd2luZG93cyBwYXRoXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bQS1aXTovKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIHBhdGggaXMgc3RhcnRpbmcgd2l0aCBhIGRvdFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIGZyYW1lIGhhcyBhIHByb3RvY29sLiBJbiBub2RlLCB0aGlzIGlzIHVzdWFsbHkgdGhlIGNhc2UgaWYgdGhlIGZpbGUgZ290IHByZS1wcm9jZXNzZWQgd2l0aCBhIGJ1bmRsZXIgbGlrZSB3ZWJwYWNrXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bYS16QS1aXShbYS16QS1aMC05LlxcLStdKSo6XFwvXFwvLykpOyAvLyBTY2hlbWEgZnJvbTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM2NDE3ODJcblxuICAvLyBpbl9hcHAgaXMgYWxsIHRoYXQncyBub3QgYW4gaW50ZXJuYWwgTm9kZSBmdW5jdGlvbiBvciBhIG1vZHVsZSB3aXRoaW4gbm9kZV9tb2R1bGVzXG4gIC8vIG5vdGUgdGhhdCBpc05hdGl2ZSBhcHBlYXJzIHRvIHJldHVybiB0cnVlIGV2ZW4gZm9yIG5vZGUgY29yZSBsaWJyYXJpZXNcbiAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tbm9kZS9pc3N1ZXMvMTc2XG5cbiAgcmV0dXJuICFpc0ludGVybmFsICYmIGZpbGVuYW1lICE9PSB1bmRlZmluZWQgJiYgIWZpbGVuYW1lLmluY2x1ZGVzKCdub2RlX21vZHVsZXMvJyk7XG59XG5cbi8qKiBOb2RlIFN0YWNrIGxpbmUgcGFyc2VyICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZnVuY3Rpb24gbm9kZShnZXRNb2R1bGUpIHtcbiAgY29uc3QgRklMRU5BTUVfTUFUQ0ggPSAvXlxccypbLV17NCx9JC87XG4gIGNvbnN0IEZVTExfTUFUQ0ggPSAvYXQgKD86YXN5bmMgKT8oPzooLis/KVxccytcXCgpPyg/OiguKyk6KFxcZCspOihcXGQrKT98KFteKV0rKSlcXCk/LztcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuICByZXR1cm4gKGxpbmUpID0+IHtcbiAgICBjb25zdCBsaW5lTWF0Y2ggPSBsaW5lLm1hdGNoKEZVTExfTUFUQ0gpO1xuXG4gICAgaWYgKGxpbmVNYXRjaCkge1xuICAgICAgbGV0IG9iamVjdDtcbiAgICAgIGxldCBtZXRob2Q7XG4gICAgICBsZXQgZnVuY3Rpb25OYW1lO1xuICAgICAgbGV0IHR5cGVOYW1lO1xuICAgICAgbGV0IG1ldGhvZE5hbWU7XG5cbiAgICAgIGlmIChsaW5lTWF0Y2hbMV0pIHtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gbGluZU1hdGNoWzFdO1xuXG4gICAgICAgIGxldCBtZXRob2RTdGFydCA9IGZ1bmN0aW9uTmFtZS5sYXN0SW5kZXhPZignLicpO1xuICAgICAgICBpZiAoZnVuY3Rpb25OYW1lW21ldGhvZFN0YXJ0IC0gMV0gPT09ICcuJykge1xuICAgICAgICAgIG1ldGhvZFN0YXJ0LS07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobWV0aG9kU3RhcnQgPiAwKSB7XG4gICAgICAgICAgb2JqZWN0ID0gZnVuY3Rpb25OYW1lLnNsaWNlKDAsIG1ldGhvZFN0YXJ0KTtcbiAgICAgICAgICBtZXRob2QgPSBmdW5jdGlvbk5hbWUuc2xpY2UobWV0aG9kU3RhcnQgKyAxKTtcbiAgICAgICAgICBjb25zdCBvYmplY3RFbmQgPSBvYmplY3QuaW5kZXhPZignLk1vZHVsZScpO1xuICAgICAgICAgIGlmIChvYmplY3RFbmQgPiAwKSB7XG4gICAgICAgICAgICBmdW5jdGlvbk5hbWUgPSBmdW5jdGlvbk5hbWUuc2xpY2Uob2JqZWN0RW5kICsgMSk7XG4gICAgICAgICAgICBvYmplY3QgPSBvYmplY3Quc2xpY2UoMCwgb2JqZWN0RW5kKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHlwZU5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QpIHtcbiAgICAgICAgdHlwZU5hbWUgPSBvYmplY3Q7XG4gICAgICAgIG1ldGhvZE5hbWUgPSBtZXRob2Q7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QgPT09ICc8YW5vbnltb3VzPicpIHtcbiAgICAgICAgbWV0aG9kTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAoZnVuY3Rpb25OYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZE5hbWUgfHwgJzxhbm9ueW1vdXM+JztcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdHlwZU5hbWUgPyBgJHt0eXBlTmFtZX0uJHttZXRob2ROYW1lfWAgOiBtZXRob2ROYW1lO1xuICAgICAgfVxuXG4gICAgICBsZXQgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbMl0gJiYgbGluZU1hdGNoWzJdLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSA/IGxpbmVNYXRjaFsyXS5zbGljZSg3KSA6IGxpbmVNYXRjaFsyXTtcbiAgICAgIGNvbnN0IGlzTmF0aXZlID0gbGluZU1hdGNoWzVdID09PSAnbmF0aXZlJztcblxuICAgICAgLy8gSWYgaXQncyBhIFdpbmRvd3MgcGF0aCwgdHJpbSB0aGUgbGVhZGluZyBzbGFzaCBzbyB0aGF0IGAvQzovZm9vYCBiZWNvbWVzIGBDOi9mb29gXG4gICAgICBpZiAoZmlsZW5hbWUgJiYgZmlsZW5hbWUubWF0Y2goL1xcL1tBLVpdOi8pKSB7XG4gICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc2xpY2UoMSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZmlsZW5hbWUgJiYgbGluZU1hdGNoWzVdICYmICFpc05hdGl2ZSkge1xuICAgICAgICBmaWxlbmFtZSA9IGxpbmVNYXRjaFs1XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWUsXG4gICAgICAgIG1vZHVsZTogZ2V0TW9kdWxlID8gZ2V0TW9kdWxlKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZnVuY3Rpb246IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgbGluZW5vOiBwYXJzZUludChsaW5lTWF0Y2hbM10sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGNvbG5vOiBwYXJzZUludChsaW5lTWF0Y2hbNF0sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGluX2FwcDogZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSksXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChsaW5lLm1hdGNoKEZJTEVOQU1FX01BVENIKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWU6IGxpbmUsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmV4cG9ydCB7IGZpbGVuYW1lSXNJbkFwcCwgbm9kZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1zdGFjay10cmFjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/node-stack-trace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeToSize: () => (/* binding */ normalizeToSize),\n/* harmony export */   normalizeUrlToBase: () => (/* binding */ normalizeUrlToBase),\n/* harmony export */   walk: () => (/* binding */ visit)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"(ssr)/./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"(ssr)/./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isVueViewModel)(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/normalize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNonEnumerableProperty: () => (/* binding */ addNonEnumerableProperty),\n/* harmony export */   convertToPlainObject: () => (/* binding */ convertToPlainObject),\n/* harmony export */   dropUndefinedKeys: () => (/* binding */ dropUndefinedKeys),\n/* harmony export */   extractExceptionKeysForMessage: () => (/* binding */ extractExceptionKeysForMessage),\n/* harmony export */   fill: () => (/* binding */ fill),\n/* harmony export */   getOriginalFunction: () => (/* binding */ getOriginalFunction),\n/* harmony export */   markFunctionWrapped: () => (/* binding */ markFunctionWrapped),\n/* harmony export */   objectify: () => (/* binding */ objectify),\n/* harmony export */   urlEncode: () => (/* binding */ urlEncode)\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStackParser: () => (/* binding */ createStackParser),\n/* harmony export */   filenameIsInApp: () => (/* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.filenameIsInApp),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   nodeStackLineParser: () => (/* binding */ nodeStackLineParser),\n/* harmony export */   stackParserFromStackParserOptions: () => (/* binding */ stackParserFromStackParserOptions),\n/* harmony export */   stripSentryFramesAndReverse: () => (/* binding */ stripSentryFramesAndReverse)\n/* harmony export */ });\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-stack-trace.js */ \"(ssr)/./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n\n\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.node)(getModule)];\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/stacktrace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMatchingPattern: () => (/* binding */ isMatchingPattern),\n/* harmony export */   safeJoin: () => (/* binding */ safeJoin),\n/* harmony export */   snipLine: () => (/* binding */ snipLine),\n/* harmony export */   stringMatchesSomePattern: () => (/* binding */ stringMatchesSomePattern),\n/* harmony export */   truncate: () => (/* binding */ truncate)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isVueViewModel)(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQWM7QUFDeEI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0RBQVE7QUFDZjtBQUNBOztBQUVBLE1BQU0sZ0RBQVE7QUFDZDtBQUNBO0FBQ0EsTUFBTSxnREFBUTtBQUNkO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3N0cmluZy5qcz81YTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVnVlVmlld01vZGVsLCBpc1N0cmluZywgaXNSZWdFeHAgfSBmcm9tICcuL2lzLmpzJztcblxuLyoqXG4gKiBUcnVuY2F0ZXMgZ2l2ZW4gc3RyaW5nIHRvIHRoZSBtYXhpbXVtIGNoYXJhY3RlcnMgY291bnRcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nICgwID0gdW5saW1pdGVkKVxuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gdHJ1bmNhdGUoc3RyLCBtYXggPSAwKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJyB8fCBtYXggPT09IDApIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIHJldHVybiBzdHIubGVuZ3RoIDw9IG1heCA/IHN0ciA6IGAke3N0ci5zbGljZSgwLCBtYXgpfS4uLmA7XG59XG5cbi8qKlxuICogVGhpcyBpcyBiYXNpY2FsbHkganVzdCBgdHJpbV9saW5lYCBmcm9tXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS9ibG9iL21hc3Rlci9zcmMvc2VudHJ5L2xhbmcvamF2YXNjcmlwdC9wcm9jZXNzb3IucHkjTDY3XG4gKlxuICogQHBhcmFtIHN0ciBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcGFyYW0gbWF4IE1heGltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdHJ1bmNhdGVkIHN0cmluZ1xuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gc25pcExpbmUobGluZSwgY29sbm8pIHtcbiAgbGV0IG5ld0xpbmUgPSBsaW5lO1xuICBjb25zdCBsaW5lTGVuZ3RoID0gbmV3TGluZS5sZW5ndGg7XG4gIGlmIChsaW5lTGVuZ3RoIDw9IDE1MCkge1xuICAgIHJldHVybiBuZXdMaW5lO1xuICB9XG4gIGlmIChjb2xubyA+IGxpbmVMZW5ndGgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBjb2xubyA9IGxpbmVMZW5ndGg7XG4gIH1cblxuICBsZXQgc3RhcnQgPSBNYXRoLm1heChjb2xubyAtIDYwLCAwKTtcbiAgaWYgKHN0YXJ0IDwgNSkge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuXG4gIGxldCBlbmQgPSBNYXRoLm1pbihzdGFydCArIDE0MCwgbGluZUxlbmd0aCk7XG4gIGlmIChlbmQgPiBsaW5lTGVuZ3RoIC0gNSkge1xuICAgIGVuZCA9IGxpbmVMZW5ndGg7XG4gIH1cbiAgaWYgKGVuZCA9PT0gbGluZUxlbmd0aCkge1xuICAgIHN0YXJ0ID0gTWF0aC5tYXgoZW5kIC0gMTQwLCAwKTtcbiAgfVxuXG4gIG5ld0xpbmUgPSBuZXdMaW5lLnNsaWNlKHN0YXJ0LCBlbmQpO1xuICBpZiAoc3RhcnQgPiAwKSB7XG4gICAgbmV3TGluZSA9IGAne3NuaXB9ICR7bmV3TGluZX1gO1xuICB9XG4gIGlmIChlbmQgPCBsaW5lTGVuZ3RoKSB7XG4gICAgbmV3TGluZSArPSAnIHtzbmlwfSc7XG4gIH1cblxuICByZXR1cm4gbmV3TGluZTtcbn1cblxuLyoqXG4gKiBKb2luIHZhbHVlcyBpbiBhcnJheVxuICogQHBhcmFtIGlucHV0IGFycmF5IG9mIHZhbHVlcyB0byBiZSBqb2luZWQgdG9nZXRoZXJcbiAqIEBwYXJhbSBkZWxpbWl0ZXIgc3RyaW5nIHRvIGJlIHBsYWNlZCBpbi1iZXR3ZWVuIHZhbHVlc1xuICogQHJldHVybnMgSm9pbmVkIHZhbHVlc1xuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gc2FmZUpvaW4oaW5wdXQsIGRlbGltaXRlcikge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0ID0gW107XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLWZvci1vZlxuICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgdmFsdWUgPSBpbnB1dFtpXTtcbiAgICB0cnkge1xuICAgICAgLy8gVGhpcyBpcyBhIGhhY2sgdG8gZml4IGEgVnVlMy1zcGVjaWZpYyBidWcgdGhhdCBjYXVzZXMgYW4gaW5maW5pdGUgbG9vcCBvZlxuICAgICAgLy8gY29uc29sZSB3YXJuaW5ncy4gVGhpcyBoYXBwZW5zIHdoZW4gYSBWdWUgdGVtcGxhdGUgaXMgcmVuZGVyZWQgd2l0aFxuICAgICAgLy8gYW4gdW5kZWNsYXJlZCB2YXJpYWJsZSwgd2hpY2ggd2UgdHJ5IHRvIHN0cmluZ2lmeSwgdWx0aW1hdGVseSBjYXVzaW5nXG4gICAgICAvLyBWdWUgdG8gaXNzdWUgYW5vdGhlciB3YXJuaW5nIHdoaWNoIHJlcGVhdHMgaW5kZWZpbml0ZWx5LlxuICAgICAgLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L3B1bGwvODk4MVxuICAgICAgaWYgKGlzVnVlVmlld01vZGVsKHZhbHVlKSkge1xuICAgICAgICBvdXRwdXQucHVzaCgnW1Z1ZVZpZXdNb2RlbF0nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dHB1dC5wdXNoKFN0cmluZyh2YWx1ZSkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIG91dHB1dC5wdXNoKCdbdmFsdWUgY2Fubm90IGJlIHNlcmlhbGl6ZWRdJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dHB1dC5qb2luKGRlbGltaXRlcik7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiB2YWx1ZSBtYXRjaGVzIGEgcmVnZXggb3Igc3RyaW5nXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBzdHJpbmcgdG8gdGVzdFxuICogQHBhcmFtIHBhdHRlcm4gRWl0aGVyIGEgcmVnZXggb3IgYSBzdHJpbmcgYWdhaW5zdCB3aGljaCBgdmFsdWVgIHdpbGwgYmUgbWF0Y2hlZFxuICogQHBhcmFtIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoIElmIHRydWUsIGB2YWx1ZWAgbXVzdCBtYXRjaCBgcGF0dGVybmAgZXhhY3RseS4gSWYgZmFsc2UsIGB2YWx1ZWAgd2lsbCBtYXRjaFxuICogYHBhdHRlcm5gIGlmIGl0IGNvbnRhaW5zIGBwYXR0ZXJuYC4gT25seSBhcHBsaWVzIHRvIHN0cmluZy10eXBlIHBhdHRlcm5zLlxuICovXG5mdW5jdGlvbiBpc01hdGNoaW5nUGF0dGVybihcbiAgdmFsdWUsXG4gIHBhdHRlcm4sXG4gIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID0gZmFsc2UsXG4pIHtcbiAgaWYgKCFpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoaXNSZWdFeHAocGF0dGVybikpIHtcbiAgICByZXR1cm4gcGF0dGVybi50ZXN0KHZhbHVlKTtcbiAgfVxuICBpZiAoaXNTdHJpbmcocGF0dGVybikpIHtcbiAgICByZXR1cm4gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPyB2YWx1ZSA9PT0gcGF0dGVybiA6IHZhbHVlLmluY2x1ZGVzKHBhdHRlcm4pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIFRlc3QgdGhlIGdpdmVuIHN0cmluZyBhZ2FpbnN0IGFuIGFycmF5IG9mIHN0cmluZ3MgYW5kIHJlZ2V4ZXMuIEJ5IGRlZmF1bHQsIHN0cmluZyBtYXRjaGluZyBpcyBkb25lIG9uIGFcbiAqIHN1YnN0cmluZy1pbmNsdXNpb24gYmFzaXMgcmF0aGVyIHRoYW4gYSBzdHJpY3QgZXF1YWxpdHkgYmFzaXNcbiAqXG4gKiBAcGFyYW0gdGVzdFN0cmluZyBUaGUgc3RyaW5nIHRvIHRlc3RcbiAqIEBwYXJhbSBwYXR0ZXJucyBUaGUgcGF0dGVybnMgYWdhaW5zdCB3aGljaCB0byB0ZXN0IHRoZSBzdHJpbmdcbiAqIEBwYXJhbSByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCBJZiB0cnVlLCBgdGVzdFN0cmluZ2AgbXVzdCBtYXRjaCBvbmUgb2YgdGhlIGdpdmVuIHN0cmluZyBwYXR0ZXJucyBleGFjdGx5IGluIG9yZGVyIHRvXG4gKiBjb3VudC4gSWYgZmFsc2UsIGB0ZXN0U3RyaW5nYCB3aWxsIG1hdGNoIGEgc3RyaW5nIHBhdHRlcm4gaWYgaXQgY29udGFpbnMgdGhhdCBwYXR0ZXJuLlxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuKFxuICB0ZXN0U3RyaW5nLFxuICBwYXR0ZXJucyA9IFtdLFxuICByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA9IGZhbHNlLFxuKSB7XG4gIHJldHVybiBwYXR0ZXJucy5zb21lKHBhdHRlcm4gPT4gaXNNYXRjaGluZ1BhdHRlcm4odGVzdFN0cmluZywgcGF0dGVybiwgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2gpKTtcbn1cblxuZXhwb3J0IHsgaXNNYXRjaGluZ1BhdHRlcm4sIHNhZmVKb2luLCBzbmlwTGluZSwgc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuLCB0cnVuY2F0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SyncPromise: () => (/* binding */ SyncPromise),\n/* harmony export */   rejectedSyncPromise: () => (/* binding */ rejectedSyncPromise),\n/* harmony export */   resolvedSyncPromise: () => (/* binding */ resolvedSyncPromise)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQzs7QUFFckM7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxzQkFBc0I7QUFDdEIsQ0FBQyx3QkFBd0I7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSyx3Q0FBd0MseUNBQXlDLHlDQUF5QztBQUMvSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBLFFBQVEsa0RBQVU7QUFDbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFaUU7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9zeW5jcHJvbWlzZS5qcz9kZTMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVGhlbmFibGUgfSBmcm9tICcuL2lzLmpzJztcblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LWZ1bmN0aW9uLXJldHVybi10eXBlICovXG5cbi8qKiBTeW5jUHJvbWlzZSBpbnRlcm5hbCBzdGF0ZXMgKi9cbnZhciBTdGF0ZXM7IChmdW5jdGlvbiAoU3RhdGVzKSB7XG4gIC8qKiBQZW5kaW5nICovXG4gIGNvbnN0IFBFTkRJTkcgPSAwOyBTdGF0ZXNbU3RhdGVzW1wiUEVORElOR1wiXSA9IFBFTkRJTkddID0gXCJQRU5ESU5HXCI7XG4gIC8qKiBSZXNvbHZlZCAvIE9LICovXG4gIGNvbnN0IFJFU09MVkVEID0gMTsgU3RhdGVzW1N0YXRlc1tcIlJFU09MVkVEXCJdID0gUkVTT0xWRURdID0gXCJSRVNPTFZFRFwiO1xuICAvKiogUmVqZWN0ZWQgLyBFcnJvciAqL1xuICBjb25zdCBSRUpFQ1RFRCA9IDI7IFN0YXRlc1tTdGF0ZXNbXCJSRUpFQ1RFRFwiXSA9IFJFSkVDVEVEXSA9IFwiUkVKRUNURURcIjtcbn0pKFN0YXRlcyB8fCAoU3RhdGVzID0ge30pKTtcblxuLy8gT3ZlcmxvYWRzIHNvIHdlIGNhbiBjYWxsIHJlc29sdmVkU3luY1Byb21pc2Ugd2l0aG91dCBhcmd1bWVudHMgYW5kIGdlbmVyaWMgYXJndW1lbnRcblxuLyoqXG4gKiBDcmVhdGVzIGEgcmVzb2x2ZWQgc3luYyBwcm9taXNlLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gcmVzb2x2ZSB0aGUgcHJvbWlzZSB3aXRoXG4gKiBAcmV0dXJucyB0aGUgcmVzb2x2ZWQgc3luYyBwcm9taXNlXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVkU3luY1Byb21pc2UodmFsdWUpIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlamVjdGVkIHN5bmMgcHJvbWlzZS5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIHJlamVjdCB0aGUgcHJvbWlzZSB3aXRoXG4gKiBAcmV0dXJucyB0aGUgcmVqZWN0ZWQgc3luYyBwcm9taXNlXG4gKi9cbmZ1bmN0aW9uIHJlamVjdGVkU3luY1Byb21pc2UocmVhc29uKSB7XG4gIHJldHVybiBuZXcgU3luY1Byb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgIHJlamVjdChyZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaGVuYWJsZSBjbGFzcyB0aGF0IGJlaGF2ZXMgbGlrZSBhIFByb21pc2UgYW5kIGZvbGxvd3MgaXQncyBpbnRlcmZhY2VcbiAqIGJ1dCBpcyBub3QgYXN5bmMgaW50ZXJuYWxseVxuICovXG5jbGFzcyBTeW5jUHJvbWlzZSB7XG5cbiAgIGNvbnN0cnVjdG9yKFxuICAgIGV4ZWN1dG9yLFxuICApIHtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0My5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQ0LmNhbGwodGhpcyk7XG4gICAgdGhpcy5fc3RhdGUgPSBTdGF0ZXMuUEVORElORztcbiAgICB0aGlzLl9oYW5kbGVycyA9IFtdO1xuXG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKHRoaXMuX3Jlc29sdmUsIHRoaXMuX3JlamVjdCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fcmVqZWN0KGUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgdGhlbihcbiAgICBvbmZ1bGZpbGxlZCxcbiAgICBvbnJlamVjdGVkLFxuICApIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZXJzLnB1c2goW1xuICAgICAgICBmYWxzZSxcbiAgICAgICAgcmVzdWx0ID0+IHtcbiAgICAgICAgICBpZiAoIW9uZnVsZmlsbGVkKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiDCr1xcXyjjg4QpXy/Cr1xuICAgICAgICAgICAgLy8gVE9ETzogRklYTUVcbiAgICAgICAgICAgIHJlc29sdmUocmVzdWx0ICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHJlc29sdmUob25mdWxmaWxsZWQocmVzdWx0KSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaWYgKCFvbnJlamVjdGVkKSB7XG4gICAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShvbnJlamVjdGVkKHJlYXNvbikpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgXSk7XG4gICAgICB0aGlzLl9leGVjdXRlSGFuZGxlcnMoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgY2F0Y2goXG4gICAgb25yZWplY3RlZCxcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbih2YWwgPT4gdmFsLCBvbnJlamVjdGVkKTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgZmluYWxseShvbmZpbmFsbHkpIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCB2YWw7XG4gICAgICBsZXQgaXNSZWplY3RlZDtcblxuICAgICAgcmV0dXJuIHRoaXMudGhlbihcbiAgICAgICAgdmFsdWUgPT4ge1xuICAgICAgICAgIGlzUmVqZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICB2YWwgPSB2YWx1ZTtcbiAgICAgICAgICBpZiAob25maW5hbGx5KSB7XG4gICAgICAgICAgICBvbmZpbmFsbHkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaXNSZWplY3RlZCA9IHRydWU7XG4gICAgICAgICAgdmFsID0gcmVhc29uO1xuICAgICAgICAgIGlmIChvbmZpbmFsbHkpIHtcbiAgICAgICAgICAgIG9uZmluYWxseSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICkudGhlbigoKSA9PiB7XG4gICAgICAgIGlmIChpc1JlamVjdGVkKSB7XG4gICAgICAgICAgcmVqZWN0KHZhbCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh2YWwgKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0KCkge3RoaXMuX3Jlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICB0aGlzLl9zZXRSZXN1bHQoU3RhdGVzLlJFU09MVkVELCB2YWx1ZSk7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDIoKSB7dGhpcy5fcmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgIHRoaXMuX3NldFJlc3VsdChTdGF0ZXMuUkVKRUNURUQsIHJlYXNvbik7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDMoKSB7dGhpcy5fc2V0UmVzdWx0ID0gKHN0YXRlLCB2YWx1ZSkgPT4ge1xuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gU3RhdGVzLlBFTkRJTkcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIHZvaWQgKHZhbHVlICkudGhlbih0aGlzLl9yZXNvbHZlLCB0aGlzLl9yZWplY3QpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3N0YXRlID0gc3RhdGU7XG4gICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcblxuICAgIHRoaXMuX2V4ZWN1dGVIYW5kbGVycygpO1xuICB9O31cblxuICAvKiogSlNEb2MgKi9cbiAgICBfX2luaXQ0KCkge3RoaXMuX2V4ZWN1dGVIYW5kbGVycyA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5fc3RhdGUgPT09IFN0YXRlcy5QRU5ESU5HKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2FjaGVkSGFuZGxlcnMgPSB0aGlzLl9oYW5kbGVycy5zbGljZSgpO1xuICAgIHRoaXMuX2hhbmRsZXJzID0gW107XG5cbiAgICBjYWNoZWRIYW5kbGVycy5mb3JFYWNoKGhhbmRsZXIgPT4ge1xuICAgICAgaWYgKGhhbmRsZXJbMF0pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fc3RhdGUgPT09IFN0YXRlcy5SRVNPTFZFRCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgICAgIGhhbmRsZXJbMV0odGhpcy5fdmFsdWUgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX3N0YXRlID09PSBTdGF0ZXMuUkVKRUNURUQpIHtcbiAgICAgICAgaGFuZGxlclsyXSh0aGlzLl92YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGhhbmRsZXJbMF0gPSB0cnVlO1xuICAgIH0pO1xuICB9O31cbn1cblxuZXhwb3J0IHsgU3luY1Byb21pc2UsIHJlamVjdGVkU3luY1Byb21pc2UsIHJlc29sdmVkU3luY1Byb21pc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNwcm9taXNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/syncpromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _browserPerformanceTimeOriginMode: () => (/* binding */ _browserPerformanceTimeOriginMode),\n/* harmony export */   browserPerformanceTimeOrigin: () => (/* binding */ browserPerformanceTimeOrigin),\n/* harmony export */   dateTimestampInSeconds: () => (/* binding */ dateTimestampInSeconds),\n/* harmony export */   timestampInSeconds: () => (/* binding */ timestampInSeconds),\n/* harmony export */   timestampWithMs: () => (/* binding */ timestampWithMs)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRACEPARENT_REGEXP: () => (/* binding */ TRACEPARENT_REGEXP),\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   generateSentryTraceHeader: () => (/* binding */ generateSentryTraceHeader),\n/* harmony export */   propagationContextFromHeaders: () => (/* binding */ propagationContextFromHeaders),\n/* harmony export */   tracingContextFromHeaders: () => (/* binding */ tracingContextFromHeaders)\n/* harmony export */ });\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ \"(ssr)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n        spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n        parentSpanId: parentSpanId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n        spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      parentSpanId: parentSpanId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdHJhY2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFFO0FBQ25DOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCLEdBQUc7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsa0ZBQXFDOztBQUV0RSxVQUFVLHVDQUF1Qzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrQ0FBSztBQUNqQyxnQkFBZ0IsK0NBQUs7QUFDckIsT0FBTztBQUNQO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQSw0QkFBNEIsK0NBQUs7QUFDakMsc0NBQXNDLCtDQUFLO0FBQzNDLGdCQUFnQiwrQ0FBSztBQUNyQjtBQUNBLHlDQUF5QztBQUN6QyxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0ZBQXFDOztBQUV0RSxVQUFVLHVDQUF1Qzs7QUFFakQ7QUFDQTtBQUNBLDBCQUEwQiwrQ0FBSztBQUMvQixjQUFjLCtDQUFLO0FBQ25CO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsMEJBQTBCLCtDQUFLO0FBQy9CLG9DQUFvQywrQ0FBSztBQUN6QyxjQUFjLCtDQUFLO0FBQ25CO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0NBQUs7QUFDakIsV0FBVywrQ0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVEsR0FBRyxPQUFPLEVBQUUsY0FBYztBQUM5Qzs7QUFFMkk7QUFDM0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS90cmFjaW5nLmpzPzU0MmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dCB9IGZyb20gJy4vYmFnZ2FnZS5qcyc7XG5pbXBvcnQgeyB1dWlkNCB9IGZyb20gJy4vbWlzYy5qcyc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAc2VudHJ5LWludGVybmFsL3Nkay9uby1yZWdleHAtY29uc3RydWN0b3IgLS0gUmVnRXhwIGlzIHVzZWQgZm9yIHJlYWRhYmlsaXR5IGhlcmVcbmNvbnN0IFRSQUNFUEFSRU5UX1JFR0VYUCA9IG5ldyBSZWdFeHAoXG4gICdeWyBcXFxcdF0qJyArIC8vIHdoaXRlc3BhY2VcbiAgICAnKFswLTlhLWZdezMyfSk/JyArIC8vIHRyYWNlX2lkXG4gICAgJy0/KFswLTlhLWZdezE2fSk/JyArIC8vIHNwYW5faWRcbiAgICAnLT8oWzAxXSk/JyArIC8vIHNhbXBsZWRcbiAgICAnWyBcXFxcdF0qJCcsIC8vIHdoaXRlc3BhY2Vcbik7XG5cbi8qKlxuICogRXh0cmFjdCB0cmFuc2FjdGlvbiBjb250ZXh0IGRhdGEgZnJvbSBhIGBzZW50cnktdHJhY2VgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0gdHJhY2VwYXJlbnQgVHJhY2VwYXJlbnQgc3RyaW5nXG4gKlxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgZGF0YSBmcm9tIHRoZSBoZWFkZXIsIG9yIHVuZGVmaW5lZCBpZiB0cmFjZXBhcmVudCBzdHJpbmcgaXMgbWFsZm9ybWVkXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFjZXBhcmVudERhdGEodHJhY2VwYXJlbnQpIHtcbiAgaWYgKCF0cmFjZXBhcmVudCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSB0cmFjaW5nIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnNgIGluc3RlYWQuXG4gKi9cbi8vIFRPRE8odjgpOiBSZW1vdmUgdGhpcyBmdW5jdGlvblxuZnVuY3Rpb24gdHJhY2luZ0NvbnRleHRGcm9tSGVhZGVycyhcbiAgc2VudHJ5VHJhY2UsXG4gIGJhZ2dhZ2UsXG4pXG5cbiB7XG4gIGNvbnN0IHRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGEoc2VudHJ5VHJhY2UpO1xuICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dChiYWdnYWdlKTtcblxuICBjb25zdCB7IHRyYWNlSWQsIHBhcmVudFNwYW5JZCwgcGFyZW50U2FtcGxlZCB9ID0gdHJhY2VwYXJlbnREYXRhIHx8IHt9O1xuXG4gIGlmICghdHJhY2VwYXJlbnREYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRyYWNlcGFyZW50RGF0YSxcbiAgICAgIGR5bmFtaWNTYW1wbGluZ0NvbnRleHQ6IHVuZGVmaW5lZCxcbiAgICAgIHByb3BhZ2F0aW9uQ29udGV4dDoge1xuICAgICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IHV1aWQ0KCksXG4gICAgICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZXBhcmVudERhdGEsXG4gICAgICBkeW5hbWljU2FtcGxpbmdDb250ZXh0OiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgICBwcm9wYWdhdGlvbkNvbnRleHQ6IHtcbiAgICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgICBwYXJlbnRTcGFuSWQ6IHBhcmVudFNwYW5JZCB8fCB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgICBkc2M6IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgfHwge30sIC8vIElmIHdlIGhhdmUgdHJhY2VwYXJlbnQgZGF0YSBidXQgbm8gRFNDIGl0IG1lYW5zIHdlIGFyZSBub3QgaGVhZCBvZiB0cmFjZSBhbmQgd2UgbXVzdCBmcmVlemUgaXRcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHByb3BhZ2F0aW9uIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzLlxuICovXG5mdW5jdGlvbiBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyhcbiAgc2VudHJ5VHJhY2UsXG4gIGJhZ2dhZ2UsXG4pIHtcbiAgY29uc3QgdHJhY2VwYXJlbnREYXRhID0gZXh0cmFjdFRyYWNlcGFyZW50RGF0YShzZW50cnlUcmFjZSk7XG4gIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KGJhZ2dhZ2UpO1xuXG4gIGNvbnN0IHsgdHJhY2VJZCwgcGFyZW50U3BhbklkLCBwYXJlbnRTYW1wbGVkIH0gPSB0cmFjZXBhcmVudERhdGEgfHwge307XG5cbiAgaWYgKCF0cmFjZXBhcmVudERhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgc3BhbklkOiB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgcGFyZW50U3BhbklkOiBwYXJlbnRTcGFuSWQgfHwgdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgc3BhbklkOiB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgZHNjOiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBzZW50cnktdHJhY2UgaGVhZGVyIGZyb20gc3BhbiBjb250ZXh0IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcihcbiAgdHJhY2VJZCA9IHV1aWQ0KCksXG4gIHNwYW5JZCA9IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgc2FtcGxlZCxcbikge1xuICBsZXQgc2FtcGxlZFN0cmluZyA9ICcnO1xuICBpZiAoc2FtcGxlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc2FtcGxlZFN0cmluZyA9IHNhbXBsZWQgPyAnLTEnIDogJy0wJztcbiAgfVxuICByZXR1cm4gYCR7dHJhY2VJZH0tJHtzcGFuSWR9JHtzYW1wbGVkU3RyaW5nfWA7XG59XG5cbmV4cG9ydCB7IFRSQUNFUEFSRU5UX1JFR0VYUCwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSwgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMsIHRyYWNpbmdDb250ZXh0RnJvbUhlYWRlcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/tracing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLOBAL_OBJ: () => (/* binding */ GLOBAL_OBJ),\n/* harmony export */   getGlobalObject: () => (/* binding */ getGlobalObject),\n/* harmony export */   getGlobalSingleton: () => (/* binding */ getGlobalSingleton)\n/* harmony export */ });\n/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7O0FBRTJEO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzP2E0OTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEludGVybmFsIGdsb2JhbCB3aXRoIGNvbW1vbiBwcm9wZXJ0aWVzIGFuZCBTZW50cnkgZXh0ZW5zaW9ucyAgKi9cblxuLy8gVGhlIGNvZGUgYmVsb3cgZm9yICdpc0dsb2JhbE9iaicgYW5kICdHTE9CQUxfT0JKJyB3YXMgY29waWVkIGZyb20gY29yZS1qcyBiZWZvcmUgbW9kaWZpY2F0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9ibG9iLzFiOTQ0ZGY1NTI4MmNkYzk5YzkwZGI1ZjQ5ZWIwYjZlZGEyY2MwYTMvcGFja2FnZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2xvYmFsLmpzXG4vLyBjb3JlLWpzIGhhcyB0aGUgZm9sbG93aW5nIGxpY2VuY2U6XG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDE0LTIwMjIgRGVuaXMgUHVzaGthcmV2XG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuLyoqIFJldHVybnMgJ29iaicgaWYgaXQncyB0aGUgZ2xvYmFsIG9iamVjdCwgb3RoZXJ3aXNlIHJldHVybnMgdW5kZWZpbmVkICovXG5mdW5jdGlvbiBpc0dsb2JhbE9iaihvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouTWF0aCA9PSBNYXRoID8gb2JqIDogdW5kZWZpbmVkO1xufVxuXG4vKiogR2V0J3MgdGhlIGdsb2JhbCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgcnVudGltZSAqL1xuY29uc3QgR0xPQkFMX09CSiA9XG4gICh0eXBlb2YgZ2xvYmFsVGhpcyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaihnbG9iYWxUaGlzKSkgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaih3aW5kb3cpKSB8fFxuICAodHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgaXNHbG9iYWxPYmooc2VsZikpIHx8XG4gICh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGlzR2xvYmFsT2JqKGdsb2JhbCkpIHx8XG4gIChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pKCkgfHxcbiAge307XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIEdMT0JBTF9PQkogaW5zdGVhZCBvciBXSU5ET1cgZnJvbSBAc2VudHJ5L2Jyb3dzZXIuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIHY4XG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbE9iamVjdCgpIHtcbiAgcmV0dXJuIEdMT0JBTF9PQkogO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBnbG9iYWwgc2luZ2xldG9uIGNvbnRhaW5lZCBpbiB0aGUgZ2xvYmFsIGBfX1NFTlRSWV9fYCBvYmplY3QuXG4gKlxuICogSWYgdGhlIHNpbmdsZXRvbiBkb2Vzbid0IGFscmVhZHkgZXhpc3QgaW4gYF9fU0VOVFJZX19gLCBpdCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIGdpdmVuIGZhY3RvcnlcbiAqIGZ1bmN0aW9uIGFuZCBhZGRlZCB0byB0aGUgYF9fU0VOVFJZX19gIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBnbG9iYWwgc2luZ2xldG9uIG9uIF9fU0VOVFJZX19cbiAqIEBwYXJhbSBjcmVhdG9yIGNyZWF0b3IgRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHNpbmdsZXRvbiBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3Qgb24gYF9fU0VOVFJZX19gXG4gKiBAcGFyYW0gb2JqIChPcHRpb25hbCkgVGhlIGdsb2JhbCBvYmplY3Qgb24gd2hpY2ggdG8gbG9vayBmb3IgYF9fU0VOVFJZX19gLCBpZiBub3QgYEdMT0JBTF9PQkpgJ3MgcmV0dXJuIHZhbHVlXG4gKiBAcmV0dXJucyB0aGUgc2luZ2xldG9uXG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbFNpbmdsZXRvbihuYW1lLCBjcmVhdG9yLCBvYmopIHtcbiAgY29uc3QgZ2JsID0gKG9iaiB8fCBHTE9CQUxfT0JKKSA7XG4gIGNvbnN0IF9fU0VOVFJZX18gPSAoZ2JsLl9fU0VOVFJZX18gPSBnYmwuX19TRU5UUllfXyB8fCB7fSk7XG4gIGNvbnN0IHNpbmdsZXRvbiA9IF9fU0VOVFJZX19bbmFtZV0gfHwgKF9fU0VOVFJZX19bbmFtZV0gPSBjcmVhdG9yKCkpO1xuICByZXR1cm4gc2luZ2xldG9uO1xufVxuXG5leHBvcnQgeyBHTE9CQUxfT0JKLCBnZXRHbG9iYWxPYmplY3QsIGdldEdsb2JhbFNpbmdsZXRvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sentry/utils/esm/worldwide.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvelopeEndpointWithUrlEncodedAuth: () => (/* binding */ getEnvelopeEndpointWithUrlEncodedAuth),\n/* harmony export */   getReportDialogEndpoint: () => (/* binding */ getReportDialogEndpoint)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.makeDsn)(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRTs7QUFFaEU7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxhQUFhO0FBQ2xELDhCQUE4QixTQUFTO0FBQ3ZDLFlBQVksU0FBUyxJQUFJLFNBQVMsRUFBRSxLQUFLLEVBQUUsZUFBZSxTQUFTLE9BQU87QUFDMUU7O0FBRUE7QUFDQTtBQUNBLFlBQVksd0JBQXdCLEVBQUUsY0FBYztBQUNwRDs7QUFFQTtBQUNBO0FBQ0EsU0FBUyx3REFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrQkFBa0IsYUFBYSxHQUFHLGdCQUFnQixHQUFHO0FBQzFFLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEMsaUNBQWlDLHdCQUF3QixHQUFHLGlDQUFpQzs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBLDhCQUE4Qix3QkFBd0IsR0FBRywyQkFBMkI7QUFDcEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMsc0RBQU87QUFDckI7QUFDQTtBQUNBOztBQUVBLHNCQUFzQix3QkFBd0I7O0FBRTlDLDhCQUE4QiwwREFBVyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsOEJBQThCO0FBQ2pFO0FBQ0E7QUFDQSxvQ0FBb0MsK0JBQStCO0FBQ25FO0FBQ0EsTUFBTTtBQUNOLDRCQUE0Qix3QkFBd0IsR0FBRyx3Q0FBd0M7QUFDL0Y7QUFDQTs7QUFFQSxZQUFZLFNBQVMsR0FBRyxlQUFlO0FBQ3ZDOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vYXBpLmpzPzI2ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZURzbiwgZHNuVG9TdHJpbmcsIHVybEVuY29kZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBTRU5UUllfQVBJX1ZFUlNJT04gPSAnNyc7XG5cbi8qKiBSZXR1cm5zIHRoZSBwcmVmaXggdG8gY29uc3RydWN0IFNlbnRyeSBpbmdlc3Rpb24gQVBJIGVuZHBvaW50cy4gKi9cbmZ1bmN0aW9uIGdldEJhc2VBcGlFbmRwb2ludChkc24pIHtcbiAgY29uc3QgcHJvdG9jb2wgPSBkc24ucHJvdG9jb2wgPyBgJHtkc24ucHJvdG9jb2x9OmAgOiAnJztcbiAgY29uc3QgcG9ydCA9IGRzbi5wb3J0ID8gYDoke2Rzbi5wb3J0fWAgOiAnJztcbiAgcmV0dXJuIGAke3Byb3RvY29sfS8vJHtkc24uaG9zdH0ke3BvcnR9JHtkc24ucGF0aCA/IGAvJHtkc24ucGF0aH1gIDogJyd9L2FwaS9gO1xufVxuXG4vKiogUmV0dXJucyB0aGUgaW5nZXN0IEFQSSBlbmRwb2ludCBmb3IgdGFyZ2V0LiAqL1xuZnVuY3Rpb24gX2dldEluZ2VzdEVuZHBvaW50KGRzbikge1xuICByZXR1cm4gYCR7Z2V0QmFzZUFwaUVuZHBvaW50KGRzbil9JHtkc24ucHJvamVjdElkfS9lbnZlbG9wZS9gO1xufVxuXG4vKiogUmV0dXJucyBhIFVSTC1lbmNvZGVkIHN0cmluZyB3aXRoIGF1dGggY29uZmlnIHN1aXRhYmxlIGZvciBhIHF1ZXJ5IHN0cmluZy4gKi9cbmZ1bmN0aW9uIF9lbmNvZGVkQXV0aChkc24sIHNka0luZm8pIHtcbiAgcmV0dXJuIHVybEVuY29kZSh7XG4gICAgLy8gV2Ugc2VuZCBvbmx5IHRoZSBtaW5pbXVtIHNldCBvZiByZXF1aXJlZCBpbmZvcm1hdGlvbi4gU2VlXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9pc3N1ZXMvMjU3Mi5cbiAgICBzZW50cnlfa2V5OiBkc24ucHVibGljS2V5LFxuICAgIHNlbnRyeV92ZXJzaW9uOiBTRU5UUllfQVBJX1ZFUlNJT04sXG4gICAgLi4uKHNka0luZm8gJiYgeyBzZW50cnlfY2xpZW50OiBgJHtzZGtJbmZvLm5hbWV9LyR7c2RrSW5mby52ZXJzaW9ufWAgfSksXG4gIH0pO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIGVudmVsb3BlIGVuZHBvaW50IFVSTCB3aXRoIGF1dGggaW4gdGhlIHF1ZXJ5IHN0cmluZy5cbiAqXG4gKiBTZW5kaW5nIGF1dGggYXMgcGFydCBvZiB0aGUgcXVlcnkgc3RyaW5nIGFuZCBub3QgYXMgY3VzdG9tIEhUVFAgaGVhZGVycyBhdm9pZHMgQ09SUyBwcmVmbGlnaHQgcmVxdWVzdHMuXG4gKi9cbmZ1bmN0aW9uIGdldEVudmVsb3BlRW5kcG9pbnRXaXRoVXJsRW5jb2RlZEF1dGgoXG4gIGRzbixcbiAgLy8gVE9ETyAodjgpOiBSZW1vdmUgYHR1bm5lbE9yT3B0aW9uc2AgaW4gZmF2b3Igb2YgYG9wdGlvbnNgLCBhbmQgdXNlIHRoZSBzdWJzdGl0dXRlIGNvZGUgYmVsb3dcbiAgLy8gb3B0aW9uczogQ2xpZW50T3B0aW9ucyA9IHt9IGFzIENsaWVudE9wdGlvbnMsXG4gIHR1bm5lbE9yT3B0aW9ucyA9IHt9ICxcbikge1xuICAvLyBUT0RPICh2OCk6IFVzZSB0aGlzIGNvZGUgaW5zdGVhZFxuICAvLyBjb25zdCB7IHR1bm5lbCwgX21ldGFkYXRhID0ge30gfSA9IG9wdGlvbnM7XG4gIC8vIHJldHVybiB0dW5uZWwgPyB0dW5uZWwgOiBgJHtfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKX0/JHtfZW5jb2RlZEF1dGgoZHNuLCBfbWV0YWRhdGEuc2RrKX1gO1xuXG4gIGNvbnN0IHR1bm5lbCA9IHR5cGVvZiB0dW5uZWxPck9wdGlvbnMgPT09ICdzdHJpbmcnID8gdHVubmVsT3JPcHRpb25zIDogdHVubmVsT3JPcHRpb25zLnR1bm5lbDtcbiAgY29uc3Qgc2RrSW5mbyA9XG4gICAgdHlwZW9mIHR1bm5lbE9yT3B0aW9ucyA9PT0gJ3N0cmluZycgfHwgIXR1bm5lbE9yT3B0aW9ucy5fbWV0YWRhdGEgPyB1bmRlZmluZWQgOiB0dW5uZWxPck9wdGlvbnMuX21ldGFkYXRhLnNkaztcblxuICByZXR1cm4gdHVubmVsID8gdHVubmVsIDogYCR7X2dldEluZ2VzdEVuZHBvaW50KGRzbil9PyR7X2VuY29kZWRBdXRoKGRzbiwgc2RrSW5mbyl9YDtcbn1cblxuLyoqIFJldHVybnMgdGhlIHVybCB0byB0aGUgcmVwb3J0IGRpYWxvZyBlbmRwb2ludC4gKi9cbmZ1bmN0aW9uIGdldFJlcG9ydERpYWxvZ0VuZHBvaW50KFxuICBkc25MaWtlLFxuICBkaWFsb2dPcHRpb25zXG5cbixcbikge1xuICBjb25zdCBkc24gPSBtYWtlRHNuKGRzbkxpa2UpO1xuICBpZiAoIWRzbikge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGNvbnN0IGVuZHBvaW50ID0gYCR7Z2V0QmFzZUFwaUVuZHBvaW50KGRzbil9ZW1iZWQvZXJyb3ItcGFnZS9gO1xuXG4gIGxldCBlbmNvZGVkT3B0aW9ucyA9IGBkc249JHtkc25Ub1N0cmluZyhkc24pfWA7XG4gIGZvciAoY29uc3Qga2V5IGluIGRpYWxvZ09wdGlvbnMpIHtcbiAgICBpZiAoa2V5ID09PSAnZHNuJykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ29uQ2xvc2UnKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAndXNlcicpIHtcbiAgICAgIGNvbnN0IHVzZXIgPSBkaWFsb2dPcHRpb25zLnVzZXI7XG4gICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5uYW1lKSB7XG4gICAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmbmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VyLm5hbWUpfWA7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5lbWFpbCkge1xuICAgICAgICBlbmNvZGVkT3B0aW9ucyArPSBgJmVtYWlsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHVzZXIuZW1haWwpfWA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoZGlhbG9nT3B0aW9uc1trZXldICl9YDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYCR7ZW5kcG9pbnR9PyR7ZW5jb2RlZE9wdGlvbnN9YDtcbn1cblxuZXhwb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCwgZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/api.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/baseclient.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/baseclient.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: () => (/* binding */ BaseClient),\n/* harmony export */   addEventProcessor: () => (/* binding */ addEventProcessor)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api.js */ \"(rsc)/./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./envelope.js */ \"(rsc)/./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _metrics_envelope_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics/envelope.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/envelope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);\n    } else {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_3__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.checkOrSetAlreadyCaught)(exception)) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const eventMessage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isParameterizedString)(message) ? message : String(message);\n\n    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPrimitive)(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.checkOrSetAlreadyCaught)(hint.originalException)) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_6__.updateSession)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.resolvedSyncPromise)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegrationById(integrationId) {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.setupIntegration)(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.afterSetupIntegrations)(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_9__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.addItemToEnvelope)(\n        env,\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.createAttachmentEnvelopeItem)(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_9__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureAggregateMetrics(metricBucketItems) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = (0,_metrics_envelope_js__WEBPACK_IMPORTED_MODULE_11__.createMetricEnvelope)(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.setupIntegrations)(this, integrations);\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.afterSetupIntegrations)(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_6__.updateSession)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_12__.getIsolationScope)(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_13__.prepareEvent)(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_14__.getDynamicSamplingContextFromClient)(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(sentryError.message);\n          } else {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.rejectedSyncPromise)(\n        new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Error while sending event:', reason);\n      });\n    } else {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPlainObject)(event) && event !== null) {\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {\n    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nfunction addEventProcessor(callback) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_16__.getClient)();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/baseclient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/checkin.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/checkin.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckInEnvelope: () => (/* binding */ createCheckInEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createEnvelope)(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n\n\n//# sourceMappingURL=checkin.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jaGVja2luLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0U7O0FBRS9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQiwwREFBVztBQUM3Qjs7QUFFQTtBQUNBLG9CQUFvQixnRUFBaUI7QUFDckM7O0FBRUE7QUFDQSxTQUFTLDZEQUFjO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2NoZWNraW4uanM/YzhkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkc25Ub1N0cmluZywgZHJvcFVuZGVmaW5lZEtleXMsIGNyZWF0ZUVudmVsb3BlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIGVudmVsb3BlIGZyb20gY2hlY2sgaW4gaXRlbS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2hlY2tJbkVudmVsb3BlKFxuICBjaGVja0luLFxuICBkeW5hbWljU2FtcGxpbmdDb250ZXh0LFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuICBkc24sXG4pIHtcbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICBzZW50X2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIH07XG5cbiAgaWYgKG1ldGFkYXRhICYmIG1ldGFkYXRhLnNkaykge1xuICAgIGhlYWRlcnMuc2RrID0ge1xuICAgICAgbmFtZTogbWV0YWRhdGEuc2RrLm5hbWUsXG4gICAgICB2ZXJzaW9uOiBtZXRhZGF0YS5zZGsudmVyc2lvbixcbiAgICB9O1xuICB9XG5cbiAgaWYgKCEhdHVubmVsICYmICEhZHNuKSB7XG4gICAgaGVhZGVycy5kc24gPSBkc25Ub1N0cmluZyhkc24pO1xuICB9XG5cbiAgaWYgKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpIHtcbiAgICBoZWFkZXJzLnRyYWNlID0gZHJvcFVuZGVmaW5lZEtleXMoZHluYW1pY1NhbXBsaW5nQ29udGV4dCkgO1xuICB9XG5cbiAgY29uc3QgaXRlbSA9IGNyZWF0ZUNoZWNrSW5FbnZlbG9wZUl0ZW0oY2hlY2tJbik7XG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShoZWFkZXJzLCBbaXRlbV0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDaGVja0luRW52ZWxvcGVJdGVtKGNoZWNrSW4pIHtcbiAgY29uc3QgY2hlY2tJbkhlYWRlcnMgPSB7XG4gICAgdHlwZTogJ2NoZWNrX2luJyxcbiAgfTtcbiAgcmV0dXJuIFtjaGVja0luSGVhZGVycywgY2hlY2tJbl07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUNoZWNrSW5FbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/checkin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ENVIRONMENT: () => (/* binding */ DEFAULT_ENVIRONMENT)\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vY29uc3RhbnRzLmpzPzczNGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgREVGQVVMVF9FTlZJUk9OTUVOVCA9ICdwcm9kdWN0aW9uJztcblxuZXhwb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/debug-build.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/debug-build.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9kZWJ1Zy1idWlsZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZGVidWctYnVpbGQuanM/OTFhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnQgeyBERUJVR19CVUlMRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/envelope.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/envelope.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEventEnvelope: () => (/* binding */ createEventEnvelope),\n/* harmony export */   createSessionEnvelope: () => (/* binding */ createSessionEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlIOztBQUV6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOEVBQStCO0FBQ2pEO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQyw2QkFBNkIsS0FBSywwREFBVyxPQUFPO0FBQ3BEOztBQUVBO0FBQ0EsaUNBQWlDLGtCQUFrQixnQkFBZ0IsaUJBQWlCOztBQUVwRixTQUFTLDZEQUFjO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4RUFBK0I7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsMEJBQTBCLHlFQUEwQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsaUJBQWlCO0FBQ3hDLFNBQVMsNkRBQWM7QUFDdkI7O0FBRXNEO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcz9lYjU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIsIGRzblRvU3RyaW5nLCBjcmVhdGVFbnZlbG9wZSwgY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBBcHBseSBTZGtJbmZvIChuYW1lLCB2ZXJzaW9uLCBwYWNrYWdlcywgaW50ZWdyYXRpb25zKSB0byB0aGUgY29ycmVzcG9uZGluZyBldmVudCBrZXkuXG4gKiBNZXJnZSB3aXRoIGV4aXN0aW5nIGRhdGEgaWYgYW55LlxuICoqL1xuZnVuY3Rpb24gZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIHNka0luZm8pIHtcbiAgaWYgKCFzZGtJbmZvKSB7XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG4gIGV2ZW50LnNkayA9IGV2ZW50LnNkayB8fCB7fTtcbiAgZXZlbnQuc2RrLm5hbWUgPSBldmVudC5zZGsubmFtZSB8fCBzZGtJbmZvLm5hbWU7XG4gIGV2ZW50LnNkay52ZXJzaW9uID0gZXZlbnQuc2RrLnZlcnNpb24gfHwgc2RrSW5mby52ZXJzaW9uO1xuICBldmVudC5zZGsuaW50ZWdyYXRpb25zID0gWy4uLihldmVudC5zZGsuaW50ZWdyYXRpb25zIHx8IFtdKSwgLi4uKHNka0luZm8uaW50ZWdyYXRpb25zIHx8IFtdKV07XG4gIGV2ZW50LnNkay5wYWNrYWdlcyA9IFsuLi4oZXZlbnQuc2RrLnBhY2thZ2VzIHx8IFtdKSwgLi4uKHNka0luZm8ucGFja2FnZXMgfHwgW10pXTtcbiAgcmV0dXJuIGV2ZW50O1xufVxuXG4vKiogQ3JlYXRlcyBhbiBlbnZlbG9wZSBmcm9tIGEgU2Vzc2lvbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2Vzc2lvbkVudmVsb3BlKFxuICBzZXNzaW9uLFxuICBkc24sXG4gIG1ldGFkYXRhLFxuICB0dW5uZWwsXG4pIHtcbiAgY29uc3Qgc2RrSW5mbyA9IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIobWV0YWRhdGEpO1xuICBjb25zdCBlbnZlbG9wZUhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIC4uLihzZGtJbmZvICYmIHsgc2RrOiBzZGtJbmZvIH0pLFxuICAgIC4uLighIXR1bm5lbCAmJiBkc24gJiYgeyBkc246IGRzblRvU3RyaW5nKGRzbikgfSksXG4gIH07XG5cbiAgY29uc3QgZW52ZWxvcGVJdGVtID1cbiAgICAnYWdncmVnYXRlcycgaW4gc2Vzc2lvbiA/IFt7IHR5cGU6ICdzZXNzaW9ucycgfSwgc2Vzc2lvbl0gOiBbeyB0eXBlOiAnc2Vzc2lvbicgfSwgc2Vzc2lvbi50b0pTT04oKV07XG5cbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2VudmVsb3BlSXRlbV0pO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBFbnZlbG9wZSBmcm9tIGFuIGV2ZW50LlxuICovXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVudmVsb3BlKFxuICBldmVudCxcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IHNka0luZm8gPSBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyKG1ldGFkYXRhKTtcblxuICAvKlxuICAgIE5vdGU6IER1ZSB0byBUUywgZXZlbnQudHlwZSBtYXkgYmUgYHJlcGxheV9ldmVudGAsIHRoZW9yZXRpY2FsbHkuXG4gICAgSW4gcHJhY3RpY2UsIHdlIG5ldmVyIGNhbGwgYGNyZWF0ZUV2ZW50RW52ZWxvcGVgIHdpdGggYHJlcGxheV9ldmVudGAgdHlwZSxcbiAgICBhbmQgd2UnZCBoYXZlIHRvIGFkanV0IGEgbG9vb3Qgb2YgdHlwZXMgdG8gbWFrZSB0aGlzIHdvcmsgcHJvcGVybHkuXG4gICAgV2Ugd2FudCB0byBhdm9pZCBjYXN0aW5nIHRoaXMgYXJvdW5kLCBhcyB0aGF0IGNvdWxkIGxlYWQgdG8gYnVncyAoZS5nLiB3aGVuIHdlIGFkZCBhbm90aGVyIHR5cGUpXG4gICAgU28gdGhlIHNhZmUgY2hvaWNlIGlzIHRvIHJlYWxseSBndWFyZCBhZ2FpbnN0IHRoZSByZXBsYXlfZXZlbnQgdHlwZSBoZXJlLlxuICAqL1xuICBjb25zdCBldmVudFR5cGUgPSBldmVudC50eXBlICYmIGV2ZW50LnR5cGUgIT09ICdyZXBsYXlfZXZlbnQnID8gZXZlbnQudHlwZSA6ICdldmVudCc7XG5cbiAgZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIG1ldGFkYXRhICYmIG1ldGFkYXRhLnNkayk7XG5cbiAgY29uc3QgZW52ZWxvcGVIZWFkZXJzID0gY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMoZXZlbnQsIHNka0luZm8sIHR1bm5lbCwgZHNuKTtcblxuICAvLyBQcmV2ZW50IHRoaXMgZGF0YSAod2hpY2gsIGlmIGl0IGV4aXN0cywgd2FzIHVzZWQgaW4gZWFybGllciBzdGVwcyBpbiB0aGUgcHJvY2Vzc2luZyBwaXBlbGluZSkgZnJvbSBiZWluZyBzZW50IHRvXG4gIC8vIHNlbnRyeS4gKE5vdGU6IE91ciB1c2Ugb2YgdGhpcyBwcm9wZXJ0eSBjb21lcyBhbmQgZ29lcyB3aXRoIHdoYXRldmVyIHdlIG1pZ2h0IGJlIGRlYnVnZ2luZywgd2hhdGV2ZXIgaGFja3Mgd2UgbWF5XG4gIC8vIGhhdmUgdGVtcG9yYXJpbHkgYWRkZWQsIGV0Yy4gRXZlbiBpZiB3ZSBkb24ndCBoYXBwZW4gdG8gYmUgdXNpbmcgaXQgYXQgc29tZSBwb2ludCBpbiB0aGUgZnV0dXJlLCBsZXQncyBub3QgZ2V0IHJpZFxuICAvLyBvZiB0aGlzIGBkZWxldGVgLCBsZXN0IHdlIG1pc3MgcHV0dGluZyBpdCBiYWNrIGluIHRoZSBuZXh0IHRpbWUgdGhlIHByb3BlcnR5IGlzIGluIHVzZS4pXG4gIGRlbGV0ZSBldmVudC5zZGtQcm9jZXNzaW5nTWV0YWRhdGE7XG5cbiAgY29uc3QgZXZlbnRJdGVtID0gW3sgdHlwZTogZXZlbnRUeXBlIH0sIGV2ZW50XTtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2V2ZW50SXRlbV0pO1xufVxuXG5leHBvcnQgeyBjcmVhdGVFdmVudEVudmVsb3BlLCBjcmVhdGVTZXNzaW9uRW52ZWxvcGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudmVsb3BlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/envelope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/eventProcessors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalEventProcessor: () => (/* binding */ addGlobalEventProcessor),\n/* harmony export */   getGlobalEventProcessors: () => (/* binding */ getGlobalEventProcessors),\n/* harmony export */   notifyEventProcessors: () => (/* binding */ notifyEventProcessors)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nfunction addGlobalEventProcessor(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && processor.id && result === null && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\n\n//# sourceMappingURL=eventProcessors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9ldmVudFByb2Nlc3NvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0Y7QUFDckM7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlFQUFrQjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0RBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGlDQUFpQyxVQUFVOztBQUUzQyxNQUFNLHdEQUFXLHVDQUF1QyxpREFBTSx5QkFBeUIsYUFBYTs7QUFFcEcsVUFBVSx5REFBVTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFb0Y7QUFDcEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2V2ZW50UHJvY2Vzc29ycy5qcz9iOTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5bmNQcm9taXNlLCBsb2dnZXIsIGlzVGhlbmFibGUsIGdldEdsb2JhbFNpbmdsZXRvbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBnbG9iYWwgZXZlbnQgcHJvY2Vzc29ycy5cbiAqIEBkZXByZWNhdGVkIEdsb2JhbCBldmVudCBwcm9jZXNzb3JzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC5cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsRXZlbnRQcm9jZXNzb3JzKCkge1xuICByZXR1cm4gZ2V0R2xvYmFsU2luZ2xldG9uKCdnbG9iYWxFdmVudFByb2Nlc3NvcnMnLCAoKSA9PiBbXSk7XG59XG5cbi8qKlxuICogQWRkIGEgRXZlbnRQcm9jZXNzb3IgdG8gYmUga2VwdCBnbG9iYWxseS5cbiAqIEBkZXByZWNhdGVkIFVzZSBgYWRkRXZlbnRQcm9jZXNzb3JgIGluc3RlYWQuIEdsb2JhbCBldmVudCBwcm9jZXNzb3JzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IoY2FsbGJhY2spIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGdldEdsb2JhbEV2ZW50UHJvY2Vzc29ycygpLnB1c2goY2FsbGJhY2spO1xufVxuXG4vKipcbiAqIFByb2Nlc3MgYW4gYXJyYXkgb2YgZXZlbnQgcHJvY2Vzc29ycywgcmV0dXJuaW5nIHRoZSBwcm9jZXNzZWQgZXZlbnQgKG9yIGBudWxsYCBpZiB0aGUgZXZlbnQgd2FzIGRyb3BwZWQpLlxuICovXG5mdW5jdGlvbiBub3RpZnlFdmVudFByb2Nlc3NvcnMoXG4gIHByb2Nlc3NvcnMsXG4gIGV2ZW50LFxuICBoaW50LFxuICBpbmRleCA9IDAsXG4pIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcHJvY2Vzc29yID0gcHJvY2Vzc29yc1tpbmRleF07XG4gICAgaWYgKGV2ZW50ID09PSBudWxsIHx8IHR5cGVvZiBwcm9jZXNzb3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlc29sdmUoZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBwcm9jZXNzb3IoeyAuLi5ldmVudCB9LCBoaW50KSA7XG5cbiAgICAgIERFQlVHX0JVSUxEICYmIHByb2Nlc3Nvci5pZCAmJiByZXN1bHQgPT09IG51bGwgJiYgbG9nZ2VyLmxvZyhgRXZlbnQgcHJvY2Vzc29yIFwiJHtwcm9jZXNzb3IuaWR9XCIgZHJvcHBlZCBldmVudGApO1xuXG4gICAgICBpZiAoaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgIHZvaWQgcmVzdWx0XG4gICAgICAgICAgLnRoZW4oZmluYWwgPT4gbm90aWZ5RXZlbnRQcm9jZXNzb3JzKHByb2Nlc3NvcnMsIGZpbmFsLCBoaW50LCBpbmRleCArIDEpLnRoZW4ocmVzb2x2ZSkpXG4gICAgICAgICAgLnRoZW4obnVsbCwgcmVqZWN0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZvaWQgbm90aWZ5RXZlbnRQcm9jZXNzb3JzKHByb2Nlc3NvcnMsIHJlc3VsdCwgaGludCwgaW5kZXggKyAxKVxuICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgLnRoZW4obnVsbCwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyBhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0R2xvYmFsRXZlbnRQcm9jZXNzb3JzLCBub3RpZnlFdmVudFByb2Nlc3NvcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50UHJvY2Vzc29ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBreadcrumb: () => (/* binding */ addBreadcrumb),\n/* harmony export */   captureCheckIn: () => (/* binding */ captureCheckIn),\n/* harmony export */   captureEvent: () => (/* binding */ captureEvent),\n/* harmony export */   captureException: () => (/* binding */ captureException),\n/* harmony export */   captureMessage: () => (/* binding */ captureMessage),\n/* harmony export */   captureSession: () => (/* binding */ captureSession),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configureScope: () => (/* binding */ configureScope),\n/* harmony export */   endSession: () => (/* binding */ endSession),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   getCurrentScope: () => (/* binding */ getCurrentScope),\n/* harmony export */   isInitialized: () => (/* binding */ isInitialized),\n/* harmony export */   lastEventId: () => (/* binding */ lastEventId),\n/* harmony export */   setContext: () => (/* binding */ setContext),\n/* harmony export */   setExtra: () => (/* binding */ setExtra),\n/* harmony export */   setExtras: () => (/* binding */ setExtras),\n/* harmony export */   setTag: () => (/* binding */ setTag),\n/* harmony export */   setTags: () => (/* binding */ setTags),\n/* harmony export */   setUser: () => (/* binding */ setUser),\n/* harmony export */   startSession: () => (/* binding */ startSession),\n/* harmony export */   startTransaction: () => (/* binding */ startTransaction),\n/* harmony export */   withActiveSpan: () => (/* binding */ withActiveSpan),\n/* harmony export */   withIsolationScope: () => (/* binding */ withIsolationScope),\n/* harmony export */   withMonitor: () => (/* binding */ withMonitor),\n/* harmony export */   withScope: () => (/* binding */ withScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__.parseEventHintOrCaptureContext)(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction configureScope(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction addBreadcrumb(breadcrumb, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nfunction setContext(name, context) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtras(extras) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtra(key, extra) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTags(tags) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTag(key, value) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setUser(user) {\n  // eslint-disable-next-line deprecation/deprecation\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope ;\n      return callback(scope );\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nfunction withIsolationScope(callback) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n    return callback((0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n * @deprecated This function will be removed in the next major version of the Sentry SDK.\n */\nfunction lastEventId() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.GLOBAL_OBJ.navigator || {};\n\n  const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.makeSession)({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.updateSession)(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.closeSession)(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/hub.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/hub.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   Hub: () => (/* binding */ Hub),\n/* harmony export */   ensureHubOnCarrier: () => (/* binding */ ensureHubOnCarrier),\n/* harmony export */   getCurrentHub: () => (/* binding */ getCurrentHub),\n/* harmony export */   getHubFromCarrier: () => (/* binding */ getHubFromCarrier),\n/* harmony export */   getIsolationScope: () => (/* binding */ getIsolationScope),\n/* harmony export */   getMainCarrier: () => (/* binding */ getMainCarrier),\n/* harmony export */   makeMain: () => (/* binding */ makeMain),\n/* harmony export */   runWithAsyncContext: () => (/* binding */ runWithAsyncContext),\n/* harmony export */   setAsyncContextStrategy: () => (/* binding */ setAsyncContextStrategy),\n/* harmony export */   setHubOnCarrier: () => (/* binding */ setHubOnCarrier)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ \"(rsc)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/@sentry/core/esm/version.js\");\n\n\n\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = parseFloat(_version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n   constructor(\n    client,\n    scope,\n    isolationScope,\n      _version = API_VERSION,\n  ) {this._version = _version;\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n   bindClient(client) {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   popScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n   withScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isThenable)(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n   getClient() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n   getScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n   getStack() {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dateTimestampInSeconds)();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n   setUser(user) {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n   setTags(tags) {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n   setExtras(extras) {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n   setTag(key, value) {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n   setExtra(key, extra) {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n   configureScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   run(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n   endSession() {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.closeSession)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n   startSession(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.navigator || {};\n\n    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.makeSession)({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.updateSession)(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n   shouldSendDefaultPii() {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nfunction getIsolationScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getHubFromCarrier(carrier) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.getGlobalSingleton)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/hub.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: () => (/* reexport safe */ _baseclient_js__WEBPACK_IMPORTED_MODULE_19__.BaseClient),\n/* harmony export */   DEFAULT_ENVIRONMENT: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_38__.DEFAULT_ENVIRONMENT),\n/* harmony export */   FunctionToString: () => (/* reexport safe */ _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_42__.FunctionToString),\n/* harmony export */   Hub: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.Hub),\n/* harmony export */   IdleTransaction: () => (/* reexport safe */ _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__.IdleTransaction),\n/* harmony export */   InboundFilters: () => (/* reexport safe */ _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_41__.InboundFilters),\n/* harmony export */   Integrations: () => (/* binding */ Integrations),\n/* harmony export */   LinkedErrors: () => (/* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_43__.LinkedErrors),\n/* harmony export */   ModuleMetadata: () => (/* reexport safe */ _integrations_metadata_js__WEBPACK_IMPORTED_MODULE_39__.ModuleMetadata),\n/* harmony export */   RequestData: () => (/* reexport safe */ _integrations_requestdata_js__WEBPACK_IMPORTED_MODULE_40__.RequestData),\n/* harmony export */   SDK_VERSION: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_25__.SDK_VERSION),\n/* harmony export */   SEMANTIC_ATTRIBUTE_PROFILE_ID: () => (/* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__.SEMANTIC_ATTRIBUTE_PROFILE_ID),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_OP: () => (/* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__.SEMANTIC_ATTRIBUTE_SENTRY_OP),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => (/* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => (/* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => (/* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE),\n/* harmony export */   Scope: () => (/* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_16__.Scope),\n/* harmony export */   ServerRuntimeClient: () => (/* reexport safe */ _server_runtime_client_js__WEBPACK_IMPORTED_MODULE_20__.ServerRuntimeClient),\n/* harmony export */   SessionFlusher: () => (/* reexport safe */ _sessionflusher_js__WEBPACK_IMPORTED_MODULE_15__.SessionFlusher),\n/* harmony export */   Span: () => (/* reexport safe */ _tracing_span_js__WEBPACK_IMPORTED_MODULE_2__.Span),\n/* harmony export */   SpanStatus: () => (/* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.SpanStatus),\n/* harmony export */   TRACING_DEFAULTS: () => (/* reexport safe */ _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__.TRACING_DEFAULTS),\n/* harmony export */   Transaction: () => (/* reexport safe */ _tracing_transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction),\n/* harmony export */   addBreadcrumb: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.addBreadcrumb),\n/* harmony export */   addEventProcessor: () => (/* reexport safe */ _baseclient_js__WEBPACK_IMPORTED_MODULE_19__.addEventProcessor),\n/* harmony export */   addGlobalEventProcessor: () => (/* reexport safe */ _eventProcessors_js__WEBPACK_IMPORTED_MODULE_17__.addGlobalEventProcessor),\n/* harmony export */   addIntegration: () => (/* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_26__.addIntegration),\n/* harmony export */   addTracingExtensions: () => (/* reexport safe */ _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions),\n/* harmony export */   applyScopeDataToEvent: () => (/* reexport safe */ _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_27__.applyScopeDataToEvent),\n/* harmony export */   applySdkMetadata: () => (/* reexport safe */ _utils_sdkMetadata_js__WEBPACK_IMPORTED_MODULE_37__.applySdkMetadata),\n/* harmony export */   captureCheckIn: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.captureCheckIn),\n/* harmony export */   captureEvent: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.captureEvent),\n/* harmony export */   captureException: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.captureException),\n/* harmony export */   captureMessage: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.captureMessage),\n/* harmony export */   captureSession: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.captureSession),\n/* harmony export */   close: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.close),\n/* harmony export */   closeSession: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_14__.closeSession),\n/* harmony export */   configureScope: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.configureScope),\n/* harmony export */   continueTrace: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.continueTrace),\n/* harmony export */   convertIntegrationFnToClass: () => (/* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_26__.convertIntegrationFnToClass),\n/* harmony export */   createCheckInEnvelope: () => (/* reexport safe */ _checkin_js__WEBPACK_IMPORTED_MODULE_29__.createCheckInEnvelope),\n/* harmony export */   createEventEnvelope: () => (/* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_11__.createEventEnvelope),\n/* harmony export */   createSessionEnvelope: () => (/* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_11__.createSessionEnvelope),\n/* harmony export */   createSpanEnvelope: () => (/* reexport safe */ _span_js__WEBPACK_IMPORTED_MODULE_30__.createSpanEnvelope),\n/* harmony export */   createTransport: () => (/* reexport safe */ _transports_base_js__WEBPACK_IMPORTED_MODULE_22__.createTransport),\n/* harmony export */   defineIntegration: () => (/* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_26__.defineIntegration),\n/* harmony export */   endSession: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.endSession),\n/* harmony export */   ensureHubOnCarrier: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.ensureHubOnCarrier),\n/* harmony export */   extractTraceparentData: () => (/* reexport safe */ _tracing_utils_js__WEBPACK_IMPORTED_MODULE_4__.extractTraceparentData),\n/* harmony export */   flush: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.flush),\n/* harmony export */   functionToStringIntegration: () => (/* reexport safe */ _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_42__.functionToStringIntegration),\n/* harmony export */   getActiveSpan: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.getActiveSpan),\n/* harmony export */   getActiveTransaction: () => (/* reexport safe */ _tracing_utils_js__WEBPACK_IMPORTED_MODULE_4__.getActiveTransaction),\n/* harmony export */   getClient: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.getClient),\n/* harmony export */   getCurrentHub: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.getCurrentHub),\n/* harmony export */   getCurrentScope: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.getCurrentScope),\n/* harmony export */   getDynamicSamplingContextFromClient: () => (/* reexport safe */ _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__.getDynamicSamplingContextFromClient),\n/* harmony export */   getDynamicSamplingContextFromSpan: () => (/* reexport safe */ _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__.getDynamicSamplingContextFromSpan),\n/* harmony export */   getEnvelopeEndpointWithUrlEncodedAuth: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_18__.getEnvelopeEndpointWithUrlEncodedAuth),\n/* harmony export */   getGlobalScope: () => (/* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_16__.getGlobalScope),\n/* harmony export */   getHubFromCarrier: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.getHubFromCarrier),\n/* harmony export */   getIntegrationsToSetup: () => (/* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_26__.getIntegrationsToSetup),\n/* harmony export */   getIsolationScope: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.getIsolationScope),\n/* harmony export */   getMainCarrier: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.getMainCarrier),\n/* harmony export */   getReportDialogEndpoint: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_18__.getReportDialogEndpoint),\n/* harmony export */   getRootSpan: () => (/* reexport safe */ _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_36__.getRootSpan),\n/* harmony export */   getSpanStatusFromHttpCode: () => (/* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.getSpanStatusFromHttpCode),\n/* harmony export */   handleCallbackErrors: () => (/* reexport safe */ _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_33__.handleCallbackErrors),\n/* harmony export */   hasTracingEnabled: () => (/* reexport safe */ _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_31__.hasTracingEnabled),\n/* harmony export */   inboundFiltersIntegration: () => (/* reexport safe */ _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_41__.inboundFiltersIntegration),\n/* harmony export */   initAndBind: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.initAndBind),\n/* harmony export */   isInitialized: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.isInitialized),\n/* harmony export */   isSentryRequestUrl: () => (/* reexport safe */ _utils_isSentryRequestUrl_js__WEBPACK_IMPORTED_MODULE_32__.isSentryRequestUrl),\n/* harmony export */   isValidSampleRate: () => (/* reexport safe */ _tracing_sampling_js__WEBPACK_IMPORTED_MODULE_9__.isValidSampleRate),\n/* harmony export */   lastEventId: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.lastEventId),\n/* harmony export */   linkedErrorsIntegration: () => (/* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_43__.linkedErrorsIntegration),\n/* harmony export */   makeMain: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.makeMain),\n/* harmony export */   makeMultiplexedTransport: () => (/* reexport safe */ _transports_multiplexed_js__WEBPACK_IMPORTED_MODULE_24__.makeMultiplexedTransport),\n/* harmony export */   makeOfflineTransport: () => (/* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_23__.makeOfflineTransport),\n/* harmony export */   makeSession: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_14__.makeSession),\n/* harmony export */   mergeScopeData: () => (/* reexport safe */ _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_27__.mergeScopeData),\n/* harmony export */   metrics: () => (/* reexport safe */ _metrics_exports_js__WEBPACK_IMPORTED_MODULE_44__.metrics),\n/* harmony export */   moduleMetadataIntegration: () => (/* reexport safe */ _integrations_metadata_js__WEBPACK_IMPORTED_MODULE_39__.moduleMetadataIntegration),\n/* harmony export */   notifyEventProcessors: () => (/* reexport safe */ _eventProcessors_js__WEBPACK_IMPORTED_MODULE_17__.notifyEventProcessors),\n/* harmony export */   parameterize: () => (/* reexport safe */ _utils_parameterize_js__WEBPACK_IMPORTED_MODULE_34__.parameterize),\n/* harmony export */   prepareEvent: () => (/* reexport safe */ _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_28__.prepareEvent),\n/* harmony export */   requestDataIntegration: () => (/* reexport safe */ _integrations_requestdata_js__WEBPACK_IMPORTED_MODULE_40__.requestDataIntegration),\n/* harmony export */   runWithAsyncContext: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.runWithAsyncContext),\n/* harmony export */   setAsyncContextStrategy: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.setAsyncContextStrategy),\n/* harmony export */   setContext: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setContext),\n/* harmony export */   setCurrentClient: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.setCurrentClient),\n/* harmony export */   setExtra: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setExtra),\n/* harmony export */   setExtras: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setExtras),\n/* harmony export */   setGlobalScope: () => (/* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_16__.setGlobalScope),\n/* harmony export */   setHttpStatus: () => (/* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.setHttpStatus),\n/* harmony export */   setHubOnCarrier: () => (/* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_13__.setHubOnCarrier),\n/* harmony export */   setMeasurement: () => (/* reexport safe */ _tracing_measurement_js__WEBPACK_IMPORTED_MODULE_8__.setMeasurement),\n/* harmony export */   setTag: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setTag),\n/* harmony export */   setTags: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setTags),\n/* harmony export */   setUser: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.setUser),\n/* harmony export */   spanIsSampled: () => (/* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_35__.spanIsSampled),\n/* harmony export */   spanStatusfromHttpCode: () => (/* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.spanStatusfromHttpCode),\n/* harmony export */   spanToJSON: () => (/* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_35__.spanToJSON),\n/* harmony export */   spanToTraceContext: () => (/* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_35__.spanToTraceContext),\n/* harmony export */   spanToTraceHeader: () => (/* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_35__.spanToTraceHeader),\n/* harmony export */   startActiveSpan: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.startActiveSpan),\n/* harmony export */   startIdleTransaction: () => (/* reexport safe */ _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.startIdleTransaction),\n/* harmony export */   startInactiveSpan: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.startInactiveSpan),\n/* harmony export */   startSession: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.startSession),\n/* harmony export */   startSpan: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.startSpan),\n/* harmony export */   startSpanManual: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.startSpanManual),\n/* harmony export */   startTransaction: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.startTransaction),\n/* harmony export */   trace: () => (/* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__.trace),\n/* harmony export */   updateSession: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_14__.updateSession),\n/* harmony export */   withActiveSpan: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.withActiveSpan),\n/* harmony export */   withIsolationScope: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.withIsolationScope),\n/* harmony export */   withMonitor: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.withMonitor),\n/* harmony export */   withScope: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_12__.withScope)\n/* harmony export */ });\n/* harmony import */ var _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracing/hubextensions.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/idletransaction.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _tracing_span_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/span.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _tracing_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/transaction.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/transaction.js\");\n/* harmony import */ var _tracing_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tracing/utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/spanstatus.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tracing/trace.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _tracing_measurement_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/measurement.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/measurement.js\");\n/* harmony import */ var _tracing_sampling_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tracing/sampling.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/sampling.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./semanticAttributes.js */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./envelope.js */ \"(rsc)/./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./sessionflusher.js */ \"(rsc)/./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scope.js */ \"(rsc)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./eventProcessors.js */ \"(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./api.js */ \"(rsc)/./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./baseclient.js */ \"(rsc)/./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _server_runtime_client_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./server-runtime-client.js */ \"(rsc)/./node_modules/@sentry/core/esm/server-runtime-client.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sdk.js */ \"(rsc)/./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _transports_base_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./transports/base.js */ \"(rsc)/./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./transports/offline.js */ \"(rsc)/./node_modules/@sentry/core/esm/transports/offline.js\");\n/* harmony import */ var _transports_multiplexed_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./transports/multiplexed.js */ \"(rsc)/./node_modules/@sentry/core/esm/transports/multiplexed.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/applyScopeDataToEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n/* harmony import */ var _checkin_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./checkin.js */ \"(rsc)/./node_modules/@sentry/core/esm/checkin.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./span.js */ \"(rsc)/./node_modules/@sentry/core/esm/span.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./utils/hasTracingEnabled.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_isSentryRequestUrl_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./utils/isSentryRequestUrl.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./utils/handleCallbackErrors.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _utils_parameterize_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./utils/parameterize.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/parameterize.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./utils/getRootSpan.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _utils_sdkMetadata_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./utils/sdkMetadata.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/sdkMetadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _integrations_metadata_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./integrations/metadata.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/metadata.js\");\n/* harmony import */ var _integrations_requestdata_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./integrations/requestdata.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js\");\n/* harmony import */ var _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./integrations/inboundfilters.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./integrations/functiontostring.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./integrations/index.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/index.js\");\n/* harmony import */ var _metrics_exports_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./metrics/exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/exports.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @deprecated Import the integration function directly, e.g. `inboundFiltersIntegration()` instead of `new Integrations.InboundFilter(). */\nconst Integrations = _integrations_index_js__WEBPACK_IMPORTED_MODULE_45__;\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RjtBQUNQO0FBQ3hDO0FBQ2M7QUFDMkI7QUFDcUM7QUFDa0I7QUFDWjtBQUNuRTtBQUNBO0FBQ3VKO0FBQ3RJO0FBQzJTO0FBQ3JMO0FBQ3pIO0FBQ25CO0FBQ2M7QUFDbUI7QUFDSTtBQUMxQjtBQUNDO0FBQ1I7QUFDRjtBQUNRO0FBQ1E7QUFDNUI7QUFDK0U7QUFDakM7QUFDbEM7QUFDRjtBQUNOO0FBQ2tCO0FBQ0U7QUFDSTtBQUNoQjtBQUNpRDtBQUNuRDtBQUNLO0FBQ0w7QUFDa0M7QUFDSDtBQUNTO0FBQ007QUFDWjtBQUN0QztBQUNGOztBQUUvQztBQUNBLHFCQUFxQixvREFBSzs7QUFFRjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW5kZXguanM/MDlmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgc3RhcnRJZGxlVHJhbnNhY3Rpb24gfSBmcm9tICcuL3RyYWNpbmcvaHViZXh0ZW5zaW9ucy5qcyc7XG5leHBvcnQgeyBJZGxlVHJhbnNhY3Rpb24sIFRSQUNJTkdfREVGQVVMVFMgfSBmcm9tICcuL3RyYWNpbmcvaWRsZXRyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCB7IFNwYW4gfSBmcm9tICcuL3RyYWNpbmcvc3Bhbi5qcyc7XG5leHBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gJy4vdHJhY2luZy90cmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgeyBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBnZXRBY3RpdmVUcmFuc2FjdGlvbiB9IGZyb20gJy4vdHJhY2luZy91dGlscy5qcyc7XG5leHBvcnQgeyBTcGFuU3RhdHVzLCBnZXRTcGFuU3RhdHVzRnJvbUh0dHBDb2RlLCBzZXRIdHRwU3RhdHVzLCBzcGFuU3RhdHVzZnJvbUh0dHBDb2RlIH0gZnJvbSAnLi90cmFjaW5nL3NwYW5zdGF0dXMuanMnO1xuZXhwb3J0IHsgY29udGludWVUcmFjZSwgZ2V0QWN0aXZlU3Bhbiwgc3RhcnRBY3RpdmVTcGFuLCBzdGFydEluYWN0aXZlU3Bhbiwgc3RhcnRTcGFuLCBzdGFydFNwYW5NYW51YWwsIHRyYWNlIH0gZnJvbSAnLi90cmFjaW5nL3RyYWNlLmpzJztcbmV4cG9ydCB7IGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50LCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4gfSBmcm9tICcuL3RyYWNpbmcvZHluYW1pY1NhbXBsaW5nQ29udGV4dC5qcyc7XG5leHBvcnQgeyBzZXRNZWFzdXJlbWVudCB9IGZyb20gJy4vdHJhY2luZy9tZWFzdXJlbWVudC5qcyc7XG5leHBvcnQgeyBpc1ZhbGlkU2FtcGxlUmF0ZSB9IGZyb20gJy4vdHJhY2luZy9zYW1wbGluZy5qcyc7XG5leHBvcnQgeyBTRU1BTlRJQ19BVFRSSUJVVEVfUFJPRklMRV9JRCwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU0FNUExFX1JBVEUsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFIH0gZnJvbSAnLi9zZW1hbnRpY0F0dHJpYnV0ZXMuanMnO1xuZXhwb3J0IHsgY3JlYXRlRXZlbnRFbnZlbG9wZSwgY3JlYXRlU2Vzc2lvbkVudmVsb3BlIH0gZnJvbSAnLi9lbnZlbG9wZS5qcyc7XG5leHBvcnQgeyBhZGRCcmVhZGNydW1iLCBjYXB0dXJlQ2hlY2tJbiwgY2FwdHVyZUV2ZW50LCBjYXB0dXJlRXhjZXB0aW9uLCBjYXB0dXJlTWVzc2FnZSwgY2FwdHVyZVNlc3Npb24sIGNsb3NlLCBjb25maWd1cmVTY29wZSwgZW5kU2Vzc2lvbiwgZmx1c2gsIGdldENsaWVudCwgZ2V0Q3VycmVudFNjb3BlLCBpc0luaXRpYWxpemVkLCBsYXN0RXZlbnRJZCwgc2V0Q29udGV4dCwgc2V0RXh0cmEsIHNldEV4dHJhcywgc2V0VGFnLCBzZXRUYWdzLCBzZXRVc2VyLCBzdGFydFNlc3Npb24sIHN0YXJ0VHJhbnNhY3Rpb24sIHdpdGhBY3RpdmVTcGFuLCB3aXRoSXNvbGF0aW9uU2NvcGUsIHdpdGhNb25pdG9yLCB3aXRoU2NvcGUgfSBmcm9tICcuL2V4cG9ydHMuanMnO1xuZXhwb3J0IHsgSHViLCBlbnN1cmVIdWJPbkNhcnJpZXIsIGdldEN1cnJlbnRIdWIsIGdldEh1YkZyb21DYXJyaWVyLCBnZXRJc29sYXRpb25TY29wZSwgZ2V0TWFpbkNhcnJpZXIsIG1ha2VNYWluLCBydW5XaXRoQXN5bmNDb250ZXh0LCBzZXRBc3luY0NvbnRleHRTdHJhdGVneSwgc2V0SHViT25DYXJyaWVyIH0gZnJvbSAnLi9odWIuanMnO1xuZXhwb3J0IHsgY2xvc2VTZXNzaW9uLCBtYWtlU2Vzc2lvbiwgdXBkYXRlU2Vzc2lvbiB9IGZyb20gJy4vc2Vzc2lvbi5qcyc7XG5leHBvcnQgeyBTZXNzaW9uRmx1c2hlciB9IGZyb20gJy4vc2Vzc2lvbmZsdXNoZXIuanMnO1xuZXhwb3J0IHsgU2NvcGUsIGdldEdsb2JhbFNjb3BlLCBzZXRHbG9iYWxTY29wZSB9IGZyb20gJy4vc2NvcGUuanMnO1xuZXhwb3J0IHsgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIG5vdGlmeUV2ZW50UHJvY2Vzc29ycyB9IGZyb20gJy4vZXZlbnRQcm9jZXNzb3JzLmpzJztcbmV4cG9ydCB7IGdldEVudmVsb3BlRW5kcG9pbnRXaXRoVXJsRW5jb2RlZEF1dGgsIGdldFJlcG9ydERpYWxvZ0VuZHBvaW50IH0gZnJvbSAnLi9hcGkuanMnO1xuZXhwb3J0IHsgQmFzZUNsaWVudCwgYWRkRXZlbnRQcm9jZXNzb3IgfSBmcm9tICcuL2Jhc2VjbGllbnQuanMnO1xuZXhwb3J0IHsgU2VydmVyUnVudGltZUNsaWVudCB9IGZyb20gJy4vc2VydmVyLXJ1bnRpbWUtY2xpZW50LmpzJztcbmV4cG9ydCB7IGluaXRBbmRCaW5kLCBzZXRDdXJyZW50Q2xpZW50IH0gZnJvbSAnLi9zZGsuanMnO1xuZXhwb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2Jhc2UuanMnO1xuZXhwb3J0IHsgbWFrZU9mZmxpbmVUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMvb2ZmbGluZS5qcyc7XG5leHBvcnQgeyBtYWtlTXVsdGlwbGV4ZWRUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMvbXVsdGlwbGV4ZWQuanMnO1xuZXhwb3J0IHsgU0RLX1ZFUlNJT04gfSBmcm9tICcuL3ZlcnNpb24uanMnO1xuZXhwb3J0IHsgYWRkSW50ZWdyYXRpb24sIGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcywgZGVmaW5lSW50ZWdyYXRpb24sIGdldEludGVncmF0aW9uc1RvU2V0dXAgfSBmcm9tICcuL2ludGVncmF0aW9uLmpzJztcbmV4cG9ydCB7IGFwcGx5U2NvcGVEYXRhVG9FdmVudCwgbWVyZ2VTY29wZURhdGEgfSBmcm9tICcuL3V0aWxzL2FwcGx5U2NvcGVEYXRhVG9FdmVudC5qcyc7XG5leHBvcnQgeyBwcmVwYXJlRXZlbnQgfSBmcm9tICcuL3V0aWxzL3ByZXBhcmVFdmVudC5qcyc7XG5leHBvcnQgeyBjcmVhdGVDaGVja0luRW52ZWxvcGUgfSBmcm9tICcuL2NoZWNraW4uanMnO1xuZXhwb3J0IHsgY3JlYXRlU3BhbkVudmVsb3BlIH0gZnJvbSAnLi9zcGFuLmpzJztcbmV4cG9ydCB7IGhhc1RyYWNpbmdFbmFibGVkIH0gZnJvbSAnLi91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcyc7XG5leHBvcnQgeyBpc1NlbnRyeVJlcXVlc3RVcmwgfSBmcm9tICcuL3V0aWxzL2lzU2VudHJ5UmVxdWVzdFVybC5qcyc7XG5leHBvcnQgeyBoYW5kbGVDYWxsYmFja0Vycm9ycyB9IGZyb20gJy4vdXRpbHMvaGFuZGxlQ2FsbGJhY2tFcnJvcnMuanMnO1xuZXhwb3J0IHsgcGFyYW1ldGVyaXplIH0gZnJvbSAnLi91dGlscy9wYXJhbWV0ZXJpemUuanMnO1xuZXhwb3J0IHsgc3BhbklzU2FtcGxlZCwgc3BhblRvSlNPTiwgc3BhblRvVHJhY2VDb250ZXh0LCBzcGFuVG9UcmFjZUhlYWRlciB9IGZyb20gJy4vdXRpbHMvc3BhblV0aWxzLmpzJztcbmV4cG9ydCB7IGdldFJvb3RTcGFuIH0gZnJvbSAnLi91dGlscy9nZXRSb290U3Bhbi5qcyc7XG5leHBvcnQgeyBhcHBseVNka01ldGFkYXRhIH0gZnJvbSAnLi91dGlscy9zZGtNZXRhZGF0YS5qcyc7XG5leHBvcnQgeyBERUZBVUxUX0VOVklST05NRU5UIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0IHsgTW9kdWxlTWV0YWRhdGEsIG1vZHVsZU1ldGFkYXRhSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9tZXRhZGF0YS5qcyc7XG5leHBvcnQgeyBSZXF1ZXN0RGF0YSwgcmVxdWVzdERhdGFJbnRlZ3JhdGlvbiB9IGZyb20gJy4vaW50ZWdyYXRpb25zL3JlcXVlc3RkYXRhLmpzJztcbmV4cG9ydCB7IEluYm91bmRGaWx0ZXJzLCBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaW5ib3VuZGZpbHRlcnMuanMnO1xuZXhwb3J0IHsgRnVuY3Rpb25Ub1N0cmluZywgZnVuY3Rpb25Ub1N0cmluZ0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvZnVuY3Rpb250b3N0cmluZy5qcyc7XG5leHBvcnQgeyBMaW5rZWRFcnJvcnMsIGxpbmtlZEVycm9yc0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzJztcbmltcG9ydCAqIGFzIGluZGV4IGZyb20gJy4vaW50ZWdyYXRpb25zL2luZGV4LmpzJztcbmV4cG9ydCB7IG1ldHJpY3MgfSBmcm9tICcuL21ldHJpY3MvZXhwb3J0cy5qcyc7XG5cbi8qKiBAZGVwcmVjYXRlZCBJbXBvcnQgdGhlIGludGVncmF0aW9uIGZ1bmN0aW9uIGRpcmVjdGx5LCBlLmcuIGBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uKClgIGluc3RlYWQgb2YgYG5ldyBJbnRlZ3JhdGlvbnMuSW5ib3VuZEZpbHRlcigpLiAqL1xuY29uc3QgSW50ZWdyYXRpb25zID0gaW5kZXg7XG5cbmV4cG9ydCB7IEludGVncmF0aW9ucyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integration.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integration.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addIntegration: () => (/* binding */ addIntegration),\n/* harmony export */   afterSetupIntegrations: () => (/* binding */ afterSetupIntegrations),\n/* harmony export */   convertIntegrationFnToClass: () => (/* binding */ convertIntegrationFnToClass),\n/* harmony export */   defineIntegration: () => (/* binding */ defineIntegration),\n/* harmony export */   getIntegrationsToSetup: () => (/* binding */ getIntegrationsToSetup),\n/* harmony export */   installedIntegrations: () => (/* binding */ installedIntegrations),\n/* harmony export */   setupIntegration: () => (/* binding */ setupIntegration),\n/* harmony export */   setupIntegrations: () => (/* binding */ setupIntegrations)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventProcessors.js */ \"(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n\n\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__.addGlobalEventProcessor, _hub_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_5__.getClient)();\n\n  if (!client || !client.addIntegration) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nfunction convertIntegrationFnToClass(\n  name,\n  fn,\n) {\n  return Object.assign(\n    function ConvertedIntegration(...args) {\n      return fn(...args);\n    },\n    { id: name },\n  ) ;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/functiontostring.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionToString: () => (/* binding */ FunctionToString),\n/* harmony export */   functionToStringIntegration: () => (/* binding */ functionToStringIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this);\n          const context =\n            SETUP_CLIENTS.has((0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getClient)() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst FunctionToString = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\n\n//# sourceMappingURL=functiontostring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZnVuY3Rpb250b3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRDtBQUNWO0FBQ3lDOztBQUVuRjs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrRUFBbUI7QUFDdEQ7QUFDQSw4QkFBOEIsc0RBQVM7QUFDdkM7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLG9DQUFvQyxrRUFBaUI7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0RUFBMkI7QUFDcEQ7QUFDQTtBQUNBOztBQUVBOztBQUV5RDtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL2Z1bmN0aW9udG9zdHJpbmcuanM/ODNiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcmlnaW5hbEZ1bmN0aW9uIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuLi9leHBvcnRzLmpzJztcbmltcG9ydCB7IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcywgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmxldCBvcmlnaW5hbEZ1bmN0aW9uVG9TdHJpbmc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnRnVuY3Rpb25Ub1N0cmluZyc7XG5cbmNvbnN0IFNFVFVQX0NMSUVOVFMgPSBuZXcgV2Vha01hcCgpO1xuXG5jb25zdCBfZnVuY3Rpb25Ub1N0cmluZ0ludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbiAgICAgIG9yaWdpbmFsRnVuY3Rpb25Ub1N0cmluZyA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztcblxuICAgICAgLy8gaW50cmluc2ljcyAobGlrZSBGdW5jdGlvbi5wcm90b3R5cGUpIG1pZ2h0IGJlIGltbXV0YWJsZSBpbiBzb21lIGVudmlyb25tZW50c1xuICAgICAgLy8gZS5nLiBOb2RlIHdpdGggLS1mcm96ZW4taW50cmluc2ljcywgWFMgKGFuIGVtYmVkZGVkIEphdmFTY3JpcHQgZW5naW5lKSBvciBTRVMgKGEgSmF2YVNjcmlwdCBwcm9wb3NhbClcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgIEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICggLi4uYXJncykge1xuICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRnVuY3Rpb24gPSBnZXRPcmlnaW5hbEZ1bmN0aW9uKHRoaXMpO1xuICAgICAgICAgIGNvbnN0IGNvbnRleHQgPVxuICAgICAgICAgICAgU0VUVVBfQ0xJRU5UUy5oYXMoZ2V0Q2xpZW50KCkgKSAmJiBvcmlnaW5hbEZ1bmN0aW9uICE9PSB1bmRlZmluZWQgPyBvcmlnaW5hbEZ1bmN0aW9uIDogdGhpcztcbiAgICAgICAgICByZXR1cm4gb3JpZ2luYWxGdW5jdGlvblRvU3RyaW5nLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpZ25vcmUgZXJyb3JzIGhlcmUsIGp1c3QgZG9uJ3QgcGF0Y2ggdGhpc1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBTRVRVUF9DTElFTlRTLnNldChjbGllbnQsIHRydWUpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogUGF0Y2ggdG9TdHJpbmcgY2FsbHMgdG8gcmV0dXJuIHByb3BlciBuYW1lIGZvciB3cmFwcGVkIGZ1bmN0aW9ucy5cbiAqXG4gKiBgYGBqc1xuICogU2VudHJ5LmluaXQoe1xuICogICBpbnRlZ3JhdGlvbnM6IFtcbiAqICAgICBmdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24oKSxcbiAqICAgXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmNvbnN0IGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9mdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIFBhdGNoIHRvU3RyaW5nIGNhbGxzIHRvIHJldHVybiBwcm9wZXIgbmFtZSBmb3Igd3JhcHBlZCBmdW5jdGlvbnMuXG4gKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBmdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBGdW5jdGlvblRvU3RyaW5nID0gY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzKFxuICBJTlRFR1JBVElPTl9OQU1FLFxuICBmdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24sXG4pIDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5cbmV4cG9ydCB7IEZ1bmN0aW9uVG9TdHJpbmcsIGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb250b3N0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/inboundfilters.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InboundFilters: () => (/* binding */ InboundFilters),\n/* harmony export */   inboundFiltersIntegration: () => (/* binding */ inboundFiltersIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst InboundFilters = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n)\n\n;\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && possibleMessages.length === 0) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Could not extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionToString: () => (/* reexport safe */ _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__.FunctionToString),\n/* harmony export */   InboundFilters: () => (/* reexport safe */ _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__.InboundFilters),\n/* harmony export */   LinkedErrors: () => (/* reexport safe */ _linkederrors_js__WEBPACK_IMPORTED_MODULE_2__.LinkedErrors)\n/* harmony export */ });\n/* harmony import */ var _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functiontostring.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inboundfilters.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _linkederrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linkederrors.js */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js\");\n\n\n\n\n/* eslint-disable deprecation/deprecation */\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlEO0FBQ0o7QUFDSjs7QUFFakQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL2luZGV4LmpzP2U4NzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgRnVuY3Rpb25Ub1N0cmluZyB9IGZyb20gJy4vZnVuY3Rpb250b3N0cmluZy5qcyc7XG5leHBvcnQgeyBJbmJvdW5kRmlsdGVycyB9IGZyb20gJy4vaW5ib3VuZGZpbHRlcnMuanMnO1xuZXhwb3J0IHsgTGlua2VkRXJyb3JzIH0gZnJvbSAnLi9saW5rZWRlcnJvcnMuanMnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvbiAqL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/linkederrors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinkedErrors: () => (/* binding */ LinkedErrors),\n/* harmony export */   linkedErrorsIntegration: () => (/* binding */ linkedErrorsIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/aggregate-errors.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/eventbuilder.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_linkedErrorsIntegration);\n\n/**\n * Adds SDK info to an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LinkedErrors = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, linkedErrorsIntegration)\n\n;\n\n\n//# sourceMappingURL=linkederrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdGO0FBQ0c7O0FBRW5GO0FBQ0E7O0FBRUE7O0FBRUEsK0NBQStDO0FBQy9DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7O0FBRUEsTUFBTSwwRUFBMkI7QUFDakMsUUFBUSw2REFBa0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELGdDQUFnQyxrRUFBaUI7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNEVBQTJCOztBQUVoRDs7QUFFaUQ7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9saW5rZWRlcnJvcnMuanM/NDFmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcHBseUFnZ3JlZ2F0ZUVycm9yc1RvRXZlbnQsIGV4Y2VwdGlvbkZyb21FcnJvciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzLCBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcblxuY29uc3QgREVGQVVMVF9LRVkgPSAnY2F1c2UnO1xuY29uc3QgREVGQVVMVF9MSU1JVCA9IDU7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnTGlua2VkRXJyb3JzJztcblxuY29uc3QgX2xpbmtlZEVycm9yc0ludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3QgbGltaXQgPSBvcHRpb25zLmxpbWl0IHx8IERFRkFVTFRfTElNSVQ7XG4gIGNvbnN0IGtleSA9IG9wdGlvbnMua2V5IHx8IERFRkFVTFRfS0VZO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAvLyBUT0RPIHY4OiBSZW1vdmUgdGhpc1xuICAgIHNldHVwT25jZSgpIHt9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIHByZXByb2Nlc3NFdmVudChldmVudCwgaGludCwgY2xpZW50KSB7XG4gICAgICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICAgICAgYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50KFxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3IsXG4gICAgICAgIG9wdGlvbnMuc3RhY2tQYXJzZXIsXG4gICAgICAgIG9wdGlvbnMubWF4VmFsdWVMZW5ndGgsXG4gICAgICAgIGtleSxcbiAgICAgICAgbGltaXQsXG4gICAgICAgIGV2ZW50LFxuICAgICAgICBoaW50LFxuICAgICAgKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9saW5rZWRFcnJvcnNJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogQWRkcyBTREsgaW5mbyB0byBhbiBldmVudC5cbiAqIEBkZXByZWNhdGVkIFVzZSBgbGlua2VkRXJyb3JzSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBMaW5rZWRFcnJvcnMgPSBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MoSU5URUdSQVRJT05fTkFNRSwgbGlua2VkRXJyb3JzSW50ZWdyYXRpb24pXG5cbjtcblxuZXhwb3J0IHsgTGlua2VkRXJyb3JzLCBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlua2VkZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/metadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/metadata.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModuleMetadata: () => (/* binding */ ModuleMetadata),\n/* harmony export */   moduleMetadataIntegration: () => (/* binding */ moduleMetadataIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../metadata.js */ \"(rsc)/./node_modules/@sentry/core/esm/metadata.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'ModuleMetadata';\n\nconst _moduleMetadataIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (typeof client.on !== 'function') {\n        return;\n      }\n\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      client.on('beforeEnvelope', envelope => {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item )[1] : undefined;\n\n            if (event) {\n              (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.stripMetadataFromStackFrames)(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n    },\n\n    processEvent(event, _hint, client) {\n      const stackParser = client.getOptions().stackParser;\n      (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.addMetadataToStackFrames)(stackParser, event);\n      return event;\n    },\n  };\n}) ;\n\nconst moduleMetadataIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_moduleMetadataIntegration);\n\n/**\n * Adds module metadata to stack frames.\n *\n * Metadata can be injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n *\n * When this integration is added, the metadata passed to the bundler plugin is added to the stack frames of all events\n * under the `module_metadata` property. This can be used to help in tagging or routing of events from different teams\n * our sources\n *\n * @deprecated Use `moduleMetadataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ModuleMetadata = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  moduleMetadataIntegration,\n)\n\n;\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0Q7QUFDK0I7QUFDSzs7QUFFeEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVEsa0VBQW1CO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLDBFQUE0QjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7O0FBRUw7QUFDQTtBQUNBLE1BQU0sc0VBQXdCO0FBQzlCO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxrQ0FBa0Msa0VBQWlCOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNEVBQTJCO0FBQ2xEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFcUQ7QUFDckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9tZXRhZGF0YS5qcz9hOTlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvckVhY2hFbnZlbG9wZUl0ZW0gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcywgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5pbXBvcnQgeyBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzLCBhZGRNZXRhZGF0YVRvU3RhY2tGcmFtZXMgfSBmcm9tICcuLi9tZXRhZGF0YS5qcyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnTW9kdWxlTWV0YWRhdGEnO1xuXG5jb25zdCBfbW9kdWxlTWV0YWRhdGFJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAvLyBUT0RPIHY4OiBSZW1vdmUgdGhpc1xuICAgIHNldHVwT25jZSgpIHt9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgaWYgKHR5cGVvZiBjbGllbnQub24gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBXZSBuZWVkIHRvIHN0cmlwIG1ldGFkYXRhIGZyb20gc3RhY2sgZnJhbWVzIGJlZm9yZSBzZW5kaW5nIHRoZW0gdG8gU2VudHJ5IHNpbmNlIHRoZXNlIGFyZSBjbGllbnQgc2lkZSBvbmx5LlxuICAgICAgY2xpZW50Lm9uKCdiZWZvcmVFbnZlbG9wZScsIGVudmVsb3BlID0+IHtcbiAgICAgICAgZm9yRWFjaEVudmVsb3BlSXRlbShlbnZlbG9wZSwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICAgICAgICBpZiAodHlwZSA9PT0gJ2V2ZW50Jykge1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBBcnJheS5pc0FycmF5KGl0ZW0pID8gKGl0ZW0gKVsxXSA6IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgICAgIHN0cmlwTWV0YWRhdGFGcm9tU3RhY2tGcmFtZXMoZXZlbnQpO1xuICAgICAgICAgICAgICBpdGVtWzFdID0gZXZlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBwcm9jZXNzRXZlbnQoZXZlbnQsIF9oaW50LCBjbGllbnQpIHtcbiAgICAgIGNvbnN0IHN0YWNrUGFyc2VyID0gY2xpZW50LmdldE9wdGlvbnMoKS5zdGFja1BhcnNlcjtcbiAgICAgIGFkZE1ldGFkYXRhVG9TdGFja0ZyYW1lcyhzdGFja1BhcnNlciwgZXZlbnQpO1xuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IG1vZHVsZU1ldGFkYXRhSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfbW9kdWxlTWV0YWRhdGFJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogQWRkcyBtb2R1bGUgbWV0YWRhdGEgdG8gc3RhY2sgZnJhbWVzLlxuICpcbiAqIE1ldGFkYXRhIGNhbiBiZSBpbmplY3RlZCBieSB0aGUgU2VudHJ5IGJ1bmRsZXIgcGx1Z2lucyB1c2luZyB0aGUgYF9leHBlcmltZW50cy5tb2R1bGVNZXRhZGF0YWAgY29uZmlnIG9wdGlvbi5cbiAqXG4gKiBXaGVuIHRoaXMgaW50ZWdyYXRpb24gaXMgYWRkZWQsIHRoZSBtZXRhZGF0YSBwYXNzZWQgdG8gdGhlIGJ1bmRsZXIgcGx1Z2luIGlzIGFkZGVkIHRvIHRoZSBzdGFjayBmcmFtZXMgb2YgYWxsIGV2ZW50c1xuICogdW5kZXIgdGhlIGBtb2R1bGVfbWV0YWRhdGFgIHByb3BlcnR5LiBUaGlzIGNhbiBiZSB1c2VkIHRvIGhlbHAgaW4gdGFnZ2luZyBvciByb3V0aW5nIG9mIGV2ZW50cyBmcm9tIGRpZmZlcmVudCB0ZWFtc1xuICogb3VyIHNvdXJjZXNcbiAqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYG1vZHVsZU1ldGFkYXRhSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBNb2R1bGVNZXRhZGF0YSA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgbW9kdWxlTWV0YWRhdGFJbnRlZ3JhdGlvbixcbilcblxuO1xuXG5leHBvcnQgeyBNb2R1bGVNZXRhZGF0YSwgbW9kdWxlTWV0YWRhdGFJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YWRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/metadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/requestdata.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestData: () => (/* binding */ RequestData),\n/* harmony export */   requestDataIntegration: () => (/* binding */ requestDataIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\nconst INTEGRATION_NAME = 'RequestData';\n\nconst _requestDataIntegration = ((options = {}) => {\n  const _addRequestData = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent;\n  const _options = {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    include: {\n      // @ts-expect-error It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n      // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n      method: true,\n      ...DEFAULT_OPTIONS.include,\n      ...options.include,\n      user:\n        options.include && typeof options.include.user === 'boolean'\n          ? options.include.user\n          : {\n              ...DEFAULT_OPTIONS.include.user,\n              // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n              ...((options.include || {}).user ),\n            },\n    },\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n      // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n      // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n      // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n      const { transactionNamingScheme } = _options;\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      if (!req) {\n        return event;\n      }\n\n      // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n      // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n      // integration, so that all of this passing and conversion isn't necessary\n      const addRequestDataOptions =\n        sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n        sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n        convertReqDataIntegrationOptsToAddReqDataOpts(_options);\n\n      const processedEvent = _addRequestData(event, req, addRequestDataOptions);\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req ;\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        const name = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(transaction).description || '';\n\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(client) === 'sentry.javascript.nextjs'\n            ? name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractPathForTransaction)(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    },\n  };\n}) ;\n\nconst requestDataIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_requestDataIntegration);\n\n/**\n * Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`.\n * @deprecated Use `requestDataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst RequestData = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, requestDataIntegration)\n\n;\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions,\n) {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(client) {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return client.getOptions()._metadata.sdk.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvcmVxdWVzdGRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUY7QUFDRTtBQUNoQzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBLDhDQUE4QztBQUM5QywwQkFBMEIsZ0VBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QyxhQUFhO0FBQ2IsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxjQUFjLDBCQUEwQjs7QUFFeEMsY0FBYyw2QkFBNkI7QUFDM0M7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyx3RUFBeUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCwrQkFBK0Isa0VBQWlCOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQTJCOztBQUUvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkJBQTZCO0FBQzVDLElBQUk7O0FBRUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFK0M7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9yZXF1ZXN0ZGF0YS5qcz9mY2U2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb24sIGFkZFJlcXVlc3REYXRhVG9FdmVudCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzLCBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcbmltcG9ydCB7IHNwYW5Ub0pTT04gfSBmcm9tICcuLi91dGlscy9zcGFuVXRpbHMuanMnO1xuXG5jb25zdCBERUZBVUxUX09QVElPTlMgPSB7XG4gIGluY2x1ZGU6IHtcbiAgICBjb29raWVzOiB0cnVlLFxuICAgIGRhdGE6IHRydWUsXG4gICAgaGVhZGVyczogdHJ1ZSxcbiAgICBpcDogZmFsc2UsXG4gICAgcXVlcnlfc3RyaW5nOiB0cnVlLFxuICAgIHVybDogdHJ1ZSxcbiAgICB1c2VyOiB7XG4gICAgICBpZDogdHJ1ZSxcbiAgICAgIHVzZXJuYW1lOiB0cnVlLFxuICAgICAgZW1haWw6IHRydWUsXG4gICAgfSxcbiAgfSxcbiAgdHJhbnNhY3Rpb25OYW1pbmdTY2hlbWU6ICdtZXRob2RQYXRoJyxcbn07XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnUmVxdWVzdERhdGEnO1xuXG5jb25zdCBfcmVxdWVzdERhdGFJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IF9hZGRSZXF1ZXN0RGF0YSA9IGFkZFJlcXVlc3REYXRhVG9FdmVudDtcbiAgY29uc3QgX29wdGlvbnMgPSB7XG4gICAgLi4uREVGQVVMVF9PUFRJT05TLFxuICAgIC4uLm9wdGlvbnMsXG4gICAgaW5jbHVkZToge1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBJdCdzIG1hZCBiZWNhdXNlIGBtZXRob2RgIGlzbid0IGEga25vd24gYGluY2x1ZGVgIGtleS4gKEl0J3Mgb25seSBoZXJlIGFuZCBub3Qgc2V0IGJ5IGRlZmF1bHQgaW5cbiAgICAgIC8vIGBhZGRSZXF1ZXN0RGF0YVRvRXZlbnRgIGZvciBsZWdhY3kgcmVhc29ucy4gVE9ETyAodjgpOiBDaGFuZ2UgdGhhdC4pXG4gICAgICBtZXRob2Q6IHRydWUsXG4gICAgICAuLi5ERUZBVUxUX09QVElPTlMuaW5jbHVkZSxcbiAgICAgIC4uLm9wdGlvbnMuaW5jbHVkZSxcbiAgICAgIHVzZXI6XG4gICAgICAgIG9wdGlvbnMuaW5jbHVkZSAmJiB0eXBlb2Ygb3B0aW9ucy5pbmNsdWRlLnVzZXIgPT09ICdib29sZWFuJ1xuICAgICAgICAgID8gb3B0aW9ucy5pbmNsdWRlLnVzZXJcbiAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgLi4uREVGQVVMVF9PUFRJT05TLmluY2x1ZGUudXNlcixcbiAgICAgICAgICAgICAgLy8gVW5jbGVhciB3aHkgVFMgc3RpbGwgdGhpbmtzIGBvcHRpb25zLmluY2x1ZGUudXNlcmAgY291bGQgYmUgYSBib29sZWFuIGF0IHRoaXMgcG9pbnRcbiAgICAgICAgICAgICAgLi4uKChvcHRpb25zLmluY2x1ZGUgfHwge30pLnVzZXIgKSxcbiAgICAgICAgICAgIH0sXG4gICAgfSxcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgLy8gVE9ETyB2ODogUmVtb3ZlIHRoaXNcbiAgICBzZXR1cE9uY2UoKSB7fSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICBwcm9jZXNzRXZlbnQoZXZlbnQsIF9oaW50LCBjbGllbnQpIHtcbiAgICAgIC8vIE5vdGU6IEluIHRoZSBsb25nIHJ1biwgbW9zdCBvZiB0aGUgbG9naWMgaGVyZSBzaG91bGQgcHJvYmFibHkgbW92ZSBpbnRvIHRoZSByZXF1ZXN0IGRhdGEgdXRpbGl0eSBmdW5jdGlvbnMuIEZvclxuICAgICAgLy8gdGhlIG1vbWVudCBpdCBsaXZlcyBoZXJlLCB0aG91Z2gsIHVudGlsIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU3MTggaXMgYWRkcmVzc2VkLlxuICAgICAgLy8gKFRMO0RSOiBUaG9zZSBmdW5jdGlvbnMgdG91Y2ggbWFueSBwYXJ0cyBvZiB0aGUgcmVwbyBpbiBtYW55IGRpZmZlcmVudCB3YXlzLCBhbmQgbmVlZCB0byBiZSBjbGVuZWQgdXAuIE9uY2VcbiAgICAgIC8vIHRoYXQncyBoYXBwZW5lZCwgaXQgd2lsbCBiZSBlYXNpZXIgdG8gYWRkIHRoaXMgbG9naWMgaW4gd2l0aG91dCB3b3JyeWluZyBhYm91dCB1bmV4cGVjdGVkIHNpZGUgZWZmZWN0cy4pXG4gICAgICBjb25zdCB7IHRyYW5zYWN0aW9uTmFtaW5nU2NoZW1lIH0gPSBfb3B0aW9ucztcblxuICAgICAgY29uc3QgeyBzZGtQcm9jZXNzaW5nTWV0YWRhdGEgPSB7fSB9ID0gZXZlbnQ7XG4gICAgICBjb25zdCByZXEgPSBzZGtQcm9jZXNzaW5nTWV0YWRhdGEucmVxdWVzdDtcblxuICAgICAgaWYgKCFyZXEpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgfVxuXG4gICAgICAvLyBUaGUgRXhwcmVzcyByZXF1ZXN0IGhhbmRsZXIgdGFrZXMgYSBzaW1pbGFyIGBpbmNsdWRlYCBvcHRpb24gdG8gdGhhdCB3aGljaCBjYW4gYmUgcGFzc2VkIHRvIHRoaXMgaW50ZWdyYXRpb24uXG4gICAgICAvLyBJZiBwYXNzZWQgdGhlcmUsIHdlIHN0b3JlIGl0IGluIGBzZGtQcm9jZXNzaW5nTWV0YWRhdGFgLiBUT0RPKHY4KTogRm9yY2UgZXhwcmVzcyBhbmQgR0NQIHBlb3BsZSB0byB1c2UgdGhpc1xuICAgICAgLy8gaW50ZWdyYXRpb24sIHNvIHRoYXQgYWxsIG9mIHRoaXMgcGFzc2luZyBhbmQgY29udmVyc2lvbiBpc24ndCBuZWNlc3NhcnlcbiAgICAgIGNvbnN0IGFkZFJlcXVlc3REYXRhT3B0aW9ucyA9XG4gICAgICAgIHNka1Byb2Nlc3NpbmdNZXRhZGF0YS5yZXF1ZXN0RGF0YU9wdGlvbnNGcm9tRXhwcmVzc0hhbmRsZXIgfHxcbiAgICAgICAgc2RrUHJvY2Vzc2luZ01ldGFkYXRhLnJlcXVlc3REYXRhT3B0aW9uc0Zyb21HQ1BXcmFwcGVyIHx8XG4gICAgICAgIGNvbnZlcnRSZXFEYXRhSW50ZWdyYXRpb25PcHRzVG9BZGRSZXFEYXRhT3B0cyhfb3B0aW9ucyk7XG5cbiAgICAgIGNvbnN0IHByb2Nlc3NlZEV2ZW50ID0gX2FkZFJlcXVlc3REYXRhKGV2ZW50LCByZXEsIGFkZFJlcXVlc3REYXRhT3B0aW9ucyk7XG5cbiAgICAgIC8vIFRyYW5zYWN0aW9uIGV2ZW50cyBhbHJlYWR5IGhhdmUgdGhlIHJpZ2h0IGB0cmFuc2FjdGlvbmAgdmFsdWVcbiAgICAgIGlmIChldmVudC50eXBlID09PSAndHJhbnNhY3Rpb24nIHx8IHRyYW5zYWN0aW9uTmFtaW5nU2NoZW1lID09PSAnaGFuZGxlcicpIHtcbiAgICAgICAgcmV0dXJuIHByb2Nlc3NlZEV2ZW50O1xuICAgICAgfVxuXG4gICAgICAvLyBJbiBhbGwgb3RoZXIgY2FzZXMsIHVzZSB0aGUgcmVxdWVzdCdzIGFzc29jaWF0ZWQgdHJhbnNhY3Rpb24gKGlmIGFueSkgdG8gb3ZlcndyaXRlIHRoZSBldmVudCdzIGB0cmFuc2FjdGlvbmBcbiAgICAgIC8vIHZhbHVlIHdpdGggYSBoaWdoLXF1YWxpdHkgb25lXG4gICAgICBjb25zdCByZXFXaXRoVHJhbnNhY3Rpb24gPSByZXEgO1xuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSByZXFXaXRoVHJhbnNhY3Rpb24uX3NlbnRyeVRyYW5zYWN0aW9uO1xuICAgICAgaWYgKHRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBzcGFuVG9KU09OKHRyYW5zYWN0aW9uKS5kZXNjcmlwdGlvbiB8fCAnJztcblxuICAgICAgICAvLyBUT0RPICh2OCk6IFJlbW92ZSB0aGUgbmV4dGpzIGNoZWNrIGFuZCBqdXN0IGJhc2UgaXQgb24gYHRyYW5zYWN0aW9uTmFtaW5nU2NoZW1lYCBmb3IgYWxsIFNES3MuIChXZSBoYXZlIHRvXG4gICAgICAgIC8vIGtlZXAgaXQgdGhlIHdheSBpdCBpcyBmb3IgdGhlIG1vbWVudCwgYmVjYXVzZSBjaGFuZ2luZyB0aGUgbmFtZXMgb2YgdHJhbnNhY3Rpb25zIGluIFNlbnRyeSBoYXMgdGhlIHBvdGVudGlhbFxuICAgICAgICAvLyB0byBicmVhayB0aGluZ3MgbGlrZSBhbGVydCBydWxlcy4pXG4gICAgICAgIGNvbnN0IHNob3VsZEluY2x1ZGVNZXRob2RJblRyYW5zYWN0aW9uTmFtZSA9XG4gICAgICAgICAgZ2V0U0RLTmFtZShjbGllbnQpID09PSAnc2VudHJ5LmphdmFzY3JpcHQubmV4dGpzJ1xuICAgICAgICAgICAgPyBuYW1lLnN0YXJ0c1dpdGgoJy9hcGknKVxuICAgICAgICAgICAgOiB0cmFuc2FjdGlvbk5hbWluZ1NjaGVtZSAhPT0gJ3BhdGgnO1xuXG4gICAgICAgIGNvbnN0IFt0cmFuc2FjdGlvblZhbHVlXSA9IGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb24ocmVxLCB7XG4gICAgICAgICAgcGF0aDogdHJ1ZSxcbiAgICAgICAgICBtZXRob2Q6IHNob3VsZEluY2x1ZGVNZXRob2RJblRyYW5zYWN0aW9uTmFtZSxcbiAgICAgICAgICBjdXN0b21Sb3V0ZTogbmFtZSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcHJvY2Vzc2VkRXZlbnQudHJhbnNhY3Rpb24gPSB0cmFuc2FjdGlvblZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvY2Vzc2VkRXZlbnQ7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuY29uc3QgcmVxdWVzdERhdGFJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9yZXF1ZXN0RGF0YUludGVncmF0aW9uKTtcblxuLyoqXG4gKiBBZGQgZGF0YSBhYm91dCBhIHJlcXVlc3QgdG8gYW4gZXZlbnQuIFByaW1hcmlseSBmb3IgdXNlIGluIE5vZGUtYmFzZWQgU0RLcywgYnV0IGluY2x1ZGVkIGluIGBAc2VudHJ5L2ludGVncmF0aW9uc2BcbiAqIHNvIGl0IGNhbiBiZSB1c2VkIGluIGNyb3NzLXBsYXRmb3JtIFNES3MgbGlrZSBgQHNlbnRyeS9uZXh0anNgLlxuICogQGRlcHJlY2F0ZWQgVXNlIGByZXF1ZXN0RGF0YUludGVncmF0aW9uKClgIGluc3RlYWQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgUmVxdWVzdERhdGEgPSBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MoSU5URUdSQVRJT05fTkFNRSwgcmVxdWVzdERhdGFJbnRlZ3JhdGlvbilcblxuO1xuXG4vKiogQ29udmVydCB0aGlzIGludGVncmF0aW9uJ3Mgb3B0aW9ucyB0byBtYXRjaCB3aGF0IGBhZGRSZXF1ZXN0RGF0YVRvRXZlbnRgIGV4cGVjdHMgKi9cbi8qKiBUT0RPOiBDYW4gcG9zc2libHkgYmUgZGVsZXRlZCBvbmNlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU3MTggaXMgZml4ZWQgKi9cbmZ1bmN0aW9uIGNvbnZlcnRSZXFEYXRhSW50ZWdyYXRpb25PcHRzVG9BZGRSZXFEYXRhT3B0cyhcbiAgaW50ZWdyYXRpb25PcHRpb25zLFxuKSB7XG4gIGNvbnN0IHtcbiAgICB0cmFuc2FjdGlvbk5hbWluZ1NjaGVtZSxcbiAgICBpbmNsdWRlOiB7IGlwLCB1c2VyLCAuLi5yZXF1ZXN0T3B0aW9ucyB9LFxuICB9ID0gaW50ZWdyYXRpb25PcHRpb25zO1xuXG4gIGNvbnN0IHJlcXVlc3RJbmNsdWRlS2V5cyA9IFtdO1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhyZXF1ZXN0T3B0aW9ucykpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHJlcXVlc3RJbmNsdWRlS2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICB9XG5cbiAgbGV0IGFkZFJlcURhdGFVc2VyT3B0O1xuICBpZiAodXNlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYWRkUmVxRGF0YVVzZXJPcHQgPSB0cnVlO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB1c2VyID09PSAnYm9vbGVhbicpIHtcbiAgICBhZGRSZXFEYXRhVXNlck9wdCA9IHVzZXI7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdXNlckluY2x1ZGVLZXlzID0gW107XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXModXNlcikpIHtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICB1c2VySW5jbHVkZUtleXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBhZGRSZXFEYXRhVXNlck9wdCA9IHVzZXJJbmNsdWRlS2V5cztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5jbHVkZToge1xuICAgICAgaXAsXG4gICAgICB1c2VyOiBhZGRSZXFEYXRhVXNlck9wdCxcbiAgICAgIHJlcXVlc3Q6IHJlcXVlc3RJbmNsdWRlS2V5cy5sZW5ndGggIT09IDAgPyByZXF1ZXN0SW5jbHVkZUtleXMgOiB1bmRlZmluZWQsXG4gICAgICB0cmFuc2FjdGlvbjogdHJhbnNhY3Rpb25OYW1pbmdTY2hlbWUsXG4gICAgfSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0U0RLTmFtZShjbGllbnQpIHtcbiAgdHJ5IHtcbiAgICAvLyBGb3IgYSBsb25nIGNoYWluIGxpa2UgdGhpcywgaXQncyBmZXdlciBieXRlcyB0byBjb21iaW5lIGEgdHJ5LWNhdGNoIHdpdGggYXNzdW1pbmcgZXZlcnl0aGluZyBpcyB0aGVyZSB0aGFuIHRvXG4gICAgLy8gd3JpdGUgb3V0IGEgbG9uZyBjaGFpbiBvZiBgYSAmJiBhLmIgJiYgYS5iLmMgJiYgLi4uYFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgcmV0dXJuIGNsaWVudC5nZXRPcHRpb25zKCkuX21ldGFkYXRhLnNkay5uYW1lO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBJbiB0aGVvcnkgd2Ugc2hvdWxkIG5ldmVyIGdldCBoZXJlXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnQgeyBSZXF1ZXN0RGF0YSwgcmVxdWVzdERhdGFJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdGRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metadata.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metadata.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMetadataToStackFrames: () => (/* binding */ addMetadataToStackFrames),\n/* harmony export */   getMetadataForUrl: () => (/* binding */ getMetadataForUrl),\n/* harmony export */   stripMetadataFromStackFrames: () => (/* binding */ stripMetadataFromStackFrames)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set();\n\nfunction ensureMetadataStacksAreParsed(parser) {\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getMetadataForUrl(parser, filename) {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nfunction addMetadataToStackFrames(parser, event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nfunction stripMetadataFromStackFrames(event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxxREFBVTtBQUNqQjtBQUNBOztBQUVBLGtDQUFrQyxxREFBVTtBQUM1QyxxQkFBcUIscURBQVU7O0FBRS9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0YWRhdGEuanM/ZjJlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBLZXlzIGFyZSBzb3VyY2UgZmlsZW5hbWUvdXJsLCB2YWx1ZXMgYXJlIG1ldGFkYXRhIG9iamVjdHMuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuY29uc3QgZmlsZW5hbWVNZXRhZGF0YU1hcCA9IG5ldyBNYXAoKTtcbi8qKiBTZXQgb2Ygc3RhY2sgc3RyaW5ncyB0aGF0IGhhdmUgYWxyZWFkeSBiZWVuIHBhcnNlZC4gKi9cbmNvbnN0IHBhcnNlZFN0YWNrcyA9IG5ldyBTZXQoKTtcblxuZnVuY3Rpb24gZW5zdXJlTWV0YWRhdGFTdGFja3NBcmVQYXJzZWQocGFyc2VyKSB7XG4gIGlmICghR0xPQkFMX09CSi5fc2VudHJ5TW9kdWxlTWV0YWRhdGEpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKGNvbnN0IHN0YWNrIG9mIE9iamVjdC5rZXlzKEdMT0JBTF9PQkouX3NlbnRyeU1vZHVsZU1ldGFkYXRhKSkge1xuICAgIGNvbnN0IG1ldGFkYXRhID0gR0xPQkFMX09CSi5fc2VudHJ5TW9kdWxlTWV0YWRhdGFbc3RhY2tdO1xuXG4gICAgaWYgKHBhcnNlZFN0YWNrcy5oYXMoc3RhY2spKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgdGhpcyBzdGFjayBkb2Vzbid0IGdldCBwYXJzZWQgYWdhaW5cbiAgICBwYXJzZWRTdGFja3MuYWRkKHN0YWNrKTtcblxuICAgIGNvbnN0IGZyYW1lcyA9IHBhcnNlcihzdGFjayk7XG5cbiAgICAvLyBHbyB0aHJvdWdoIHRoZSBmcmFtZXMgc3RhcnRpbmcgZnJvbSB0aGUgdG9wIG9mIHRoZSBzdGFjayBhbmQgZmluZCB0aGUgZmlyc3Qgb25lIHdpdGggYSBmaWxlbmFtZVxuICAgIGZvciAoY29uc3QgZnJhbWUgb2YgZnJhbWVzLnJldmVyc2UoKSkge1xuICAgICAgaWYgKGZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICAgIC8vIFNhdmUgdGhlIG1ldGFkYXRhIGZvciB0aGlzIGZpbGVuYW1lXG4gICAgICAgIGZpbGVuYW1lTWV0YWRhdGFNYXAuc2V0KGZyYW1lLmZpbGVuYW1lLCBtZXRhZGF0YSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFJldHJpZXZlIG1ldGFkYXRhIGZvciBhIHNwZWNpZmljIEphdmFTY3JpcHQgZmlsZSBVUkwuXG4gKlxuICogTWV0YWRhdGEgaXMgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBnZXRNZXRhZGF0YUZvclVybChwYXJzZXIsIGZpbGVuYW1lKSB7XG4gIGVuc3VyZU1ldGFkYXRhU3RhY2tzQXJlUGFyc2VkKHBhcnNlcik7XG4gIHJldHVybiBmaWxlbmFtZU1ldGFkYXRhTWFwLmdldChmaWxlbmFtZSk7XG59XG5cbi8qKlxuICogQWRkcyBtZXRhZGF0YSB0byBzdGFjayBmcmFtZXMuXG4gKlxuICogTWV0YWRhdGEgaXMgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKi9cbmZ1bmN0aW9uIGFkZE1ldGFkYXRhVG9TdGFja0ZyYW1lcyhwYXJzZXIsIGV2ZW50KSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmZvckVhY2goZXhjZXB0aW9uID0+IHtcbiAgICAgIGlmICghZXhjZXB0aW9uLnN0YWNrdHJhY2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGZyYW1lIG9mIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcyB8fCBbXSkge1xuICAgICAgICBpZiAoIWZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhRm9yVXJsKHBhcnNlciwgZnJhbWUuZmlsZW5hbWUpO1xuXG4gICAgICAgIGlmIChtZXRhZGF0YSkge1xuICAgICAgICAgIGZyYW1lLm1vZHVsZV9tZXRhZGF0YSA9IG1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0gY2F0Y2ggKF8pIHtcbiAgICAvLyBUbyBzYXZlIGJ1bmRsZSBzaXplIHdlJ3JlIGp1c3QgdHJ5IGNhdGNoaW5nIGhlcmUgaW5zdGVhZCBvZiBjaGVja2luZyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhbGwgdGhlIGRpZmZlcmVudCBvYmplY3RzLlxuICB9XG59XG5cbi8qKlxuICogU3RyaXBzIG1ldGFkYXRhIGZyb20gc3RhY2sgZnJhbWVzLlxuICovXG5mdW5jdGlvbiBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzKGV2ZW50KSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmZvckVhY2goZXhjZXB0aW9uID0+IHtcbiAgICAgIGlmICghZXhjZXB0aW9uLnN0YWNrdHJhY2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGZyYW1lIG9mIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcyB8fCBbXSkge1xuICAgICAgICBkZWxldGUgZnJhbWUubW9kdWxlX21ldGFkYXRhO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGNhdGNoIChfKSB7XG4gICAgLy8gVG8gc2F2ZSBidW5kbGUgc2l6ZSB3ZSdyZSBqdXN0IHRyeSBjYXRjaGluZyBoZXJlIGluc3RlYWQgb2YgY2hlY2tpbmcgZm9yIHRoZSBleGlzdGVuY2Ugb2YgYWxsIHRoZSBkaWZmZXJlbnQgb2JqZWN0cy5cbiAgfVxufVxuXG5leHBvcnQgeyBhZGRNZXRhZGF0YVRvU3RhY2tGcmFtZXMsIGdldE1ldGFkYXRhRm9yVXJsLCBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/aggregator.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/aggregator.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetricsAggregator: () => (/* binding */ MetricsAggregator)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instance.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/instance.js\");\n/* harmony import */ var _metric_summary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./metric-summary.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n\n\n\n/**\n * A metrics aggregator that aggregates metrics in memory and flushes them periodically.\n */\nclass MetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n  // Different metrics have different weights. We use this to limit the number of metrics\n  // that we store in memory.\n\n  // Cast to any so that it can use Node.js timeout\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  // SDKs are required to shift the flush interval by random() * rollup_in_seconds.\n  // That shift is determined once per startup to create jittering.\n\n  // An SDK is required to perform force flushing ahead of scheduled time if the memory\n  // pressure is too high. There is no rule for this other than that SDKs should be tracking\n  // abstract aggregation complexity (eg: a counter only carries a single float, whereas a\n  // distribution is a float per emission).\n  //\n  // Force flush is used on either shutdown, flush() or when we exceed the max weight.\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._bucketsTotalWeight = 0;\n\n    this._interval = setInterval(() => this._flush(), _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL) ;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (this._interval.unref) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      this._interval.unref();\n    }\n\n    this._flushShift = Math.floor((Math.random() * _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL) / 1000);\n    this._forceFlush = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeMetricKey)(unsanitizedName);\n    const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeTags)(unsanitizedTags);\n    const unit = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeUnit)(unsanitizedUnit );\n\n    const bucketKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getBucketKey)(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === _constants_js__WEBPACK_IMPORTED_MODULE_0__.SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new _instance_js__WEBPACK_IMPORTED_MODULE_3__.METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    (0,_metric_summary_js__WEBPACK_IMPORTED_MODULE_4__.updateMetricSummaryOnActiveSpan)(metricType, name, val, unit, unsanitizedTags, bucketKey);\n\n    // We need to keep track of the total weight of the buckets so that we can\n    // flush them when we exceed the max weight.\n    this._bucketsTotalWeight += bucketItem.metric.weight;\n\n    if (this._bucketsTotalWeight >= _constants_js__WEBPACK_IMPORTED_MODULE_0__.MAX_WEIGHT) {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flushes the current metrics to the transport via the transport.\n   */\n   flush() {\n    this._forceFlush = true;\n    this._flush();\n  }\n\n  /**\n   * Shuts down metrics aggregator and clears all metrics.\n   */\n   close() {\n    this._forceFlush = true;\n    clearInterval(this._interval);\n    this._flush();\n  }\n\n  /**\n   * Flushes the buckets according to the internal state of the aggregator.\n   * If it is a force flush, which happens on shutdown, it will flush all buckets.\n   * Otherwise, it will only flush buckets that are older than the flush interval,\n   * and according to the flush shift.\n   *\n   * This function mutates `_forceFlush` and `_bucketsTotalWeight` properties.\n   */\n   _flush() {\n    // TODO(@anonrig): Add Atomics for locking to avoid having force flush and regular flush\n    // running at the same time.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\n\n    // This path eliminates the need for checking for timestamps since we're forcing a flush.\n    // Remember to reset the flag, or it will always flush all metrics.\n    if (this._forceFlush) {\n      this._forceFlush = false;\n      this._bucketsTotalWeight = 0;\n      this._captureMetrics(this._buckets);\n      this._buckets.clear();\n      return;\n    }\n    const cutoffSeconds = Math.floor((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)()) - _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL / 1000 - this._flushShift;\n    // TODO(@anonrig): Optimization opportunity.\n    // Convert this map to an array and store key in the bucketItem.\n    const flushedBuckets = new Map();\n    for (const [key, bucket] of this._buckets) {\n      if (bucket.timestamp <= cutoffSeconds) {\n        flushedBuckets.set(key, bucket);\n        this._bucketsTotalWeight -= bucket.metric.weight;\n      }\n    }\n\n    for (const [key] of flushedBuckets) {\n      this._buckets.delete(key);\n    }\n\n    this._captureMetrics(flushedBuckets);\n  }\n\n  /**\n   * Only captures a subset of the buckets passed to this function.\n   * @param flushedBuckets\n   */\n   _captureMetrics(flushedBuckets) {\n    if (flushedBuckets.size > 0 && this._client.captureAggregateMetrics) {\n      // TODO(@anonrig): Optimization opportunity.\n      // This copy operation can be avoided if we store the key in the bucketItem.\n      const buckets = Array.from(flushedBuckets).map(([, bucketItem]) => bucketItem);\n      this._client.captureAggregateMetrics(buckets);\n    }\n  }\n}\n\n\n//# sourceMappingURL=aggregator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/aggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/browser-aggregator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/browser-aggregator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserMetricsAggregator: () => (/* binding */ BrowserMetricsAggregator)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instance.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/instance.js\");\n/* harmony import */ var _metric_summary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./metric-summary.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n\n\n\n/**\n * A simple metrics aggregator that aggregates metrics in memory and flushes them periodically.\n * Default flush interval is 5 seconds.\n *\n * @experimental This API is experimental and might change in the future.\n */\nclass BrowserMetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._interval = setInterval(() => this.flush(), _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_BROWSER_FLUSH_INTERVAL);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeMetricKey)(unsanitizedName);\n    const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeTags)(unsanitizedTags);\n    const unit = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeUnit)(unsanitizedUnit );\n\n    const bucketKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getBucketKey)(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === _constants_js__WEBPACK_IMPORTED_MODULE_0__.SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new _instance_js__WEBPACK_IMPORTED_MODULE_3__.METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    (0,_metric_summary_js__WEBPACK_IMPORTED_MODULE_4__.updateMetricSummaryOnActiveSpan)(metricType, name, val, unit, unsanitizedTags, bucketKey);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush() {\n    // short circuit if buckets are empty.\n    if (this._buckets.size === 0) {\n      return;\n    }\n\n    if (this._client.captureAggregateMetrics) {\n      // TODO(@anonrig): Use Object.values() when we support ES6+\n      const metricBuckets = Array.from(this._buckets).map(([, bucketItem]) => bucketItem);\n      this._client.captureAggregateMetrics(metricBuckets);\n    }\n\n    this._buckets.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close() {\n    clearInterval(this._interval);\n    this.flush();\n  }\n}\n\n\n//# sourceMappingURL=browser-aggregator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2Jyb3dzZXItYWdncmVnYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUQ7QUFDOEI7QUFDdEM7QUFDMkI7QUFDbUI7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBLHFEQUFxRCx5RUFBOEI7QUFDbkY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiwwQkFBMEIsaUVBQWtCO0FBQzVDO0FBQ0E7QUFDQSxpQkFBaUIsNERBQWlCO0FBQ2xDLGlCQUFpQix1REFBWTtBQUM3QixpQkFBaUIsdURBQVk7O0FBRTdCLHNCQUFzQix1REFBWTs7QUFFbEM7QUFDQTtBQUNBLHdEQUF3RCwwREFBZTs7QUFFdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxvQkFBb0Isb0RBQVU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxtRkFBK0I7QUFDbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL21ldHJpY3MvYnJvd3Nlci1hZ2dyZWdhdG9yLmpzPzc5OTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUZBVUxUX0JST1dTRVJfRkxVU0hfSU5URVJWQUwsIFNFVF9NRVRSSUNfVFlQRSB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IE1FVFJJQ19NQVAgfSBmcm9tICcuL2luc3RhbmNlLmpzJztcbmltcG9ydCB7IHVwZGF0ZU1ldHJpY1N1bW1hcnlPbkFjdGl2ZVNwYW4gfSBmcm9tICcuL21ldHJpYy1zdW1tYXJ5LmpzJztcbmltcG9ydCB7IHNhbml0aXplTWV0cmljS2V5LCBzYW5pdGl6ZVRhZ3MsIHNhbml0aXplVW5pdCwgZ2V0QnVja2V0S2V5IH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogQSBzaW1wbGUgbWV0cmljcyBhZ2dyZWdhdG9yIHRoYXQgYWdncmVnYXRlcyBtZXRyaWNzIGluIG1lbW9yeSBhbmQgZmx1c2hlcyB0aGVtIHBlcmlvZGljYWxseS5cbiAqIERlZmF1bHQgZmx1c2ggaW50ZXJ2YWwgaXMgNSBzZWNvbmRzLlxuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBBUEkgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuY2xhc3MgQnJvd3Nlck1ldHJpY3NBZ2dyZWdhdG9yICB7XG4gIC8vIFRPRE8oQGFub25yaWcpOiBVc2UgRmluYWxpemF0aW9uUmVnaXN0cnkgdG8gaGF2ZSBhIHByb3BlciB3YXkgb2YgZmx1c2hpbmcgdGhlIGJ1Y2tldHNcbiAgLy8gd2hlbiB0aGUgYWdncmVnYXRvciBpcyBnYXJiYWdlIGNvbGxlY3RlZC5cbiAgLy8gUmVmOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9GaW5hbGl6YXRpb25SZWdpc3RyeVxuXG4gICBjb25zdHJ1Y3RvciggIF9jbGllbnQpIHt0aGlzLl9jbGllbnQgPSBfY2xpZW50O1xuICAgIHRoaXMuX2J1Y2tldHMgPSBuZXcgTWFwKCk7XG4gICAgdGhpcy5faW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLmZsdXNoKCksIERFRkFVTFRfQlJPV1NFUl9GTFVTSF9JTlRFUlZBTCk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBhZGQoXG4gICAgbWV0cmljVHlwZSxcbiAgICB1bnNhbml0aXplZE5hbWUsXG4gICAgdmFsdWUsXG4gICAgdW5zYW5pdGl6ZWRVbml0ID0gJ25vbmUnLFxuICAgIHVuc2FuaXRpemVkVGFncyA9IHt9LFxuICAgIG1heWJlRmxvYXRUaW1lc3RhbXAgPSB0aW1lc3RhbXBJblNlY29uZHMoKSxcbiAgKSB7XG4gICAgY29uc3QgdGltZXN0YW1wID0gTWF0aC5mbG9vcihtYXliZUZsb2F0VGltZXN0YW1wKTtcbiAgICBjb25zdCBuYW1lID0gc2FuaXRpemVNZXRyaWNLZXkodW5zYW5pdGl6ZWROYW1lKTtcbiAgICBjb25zdCB0YWdzID0gc2FuaXRpemVUYWdzKHVuc2FuaXRpemVkVGFncyk7XG4gICAgY29uc3QgdW5pdCA9IHNhbml0aXplVW5pdCh1bnNhbml0aXplZFVuaXQgKTtcblxuICAgIGNvbnN0IGJ1Y2tldEtleSA9IGdldEJ1Y2tldEtleShtZXRyaWNUeXBlLCBuYW1lLCB1bml0LCB0YWdzKTtcblxuICAgIGxldCBidWNrZXRJdGVtID0gdGhpcy5fYnVja2V0cy5nZXQoYnVja2V0S2V5KTtcbiAgICAvLyBJZiB0aGlzIGlzIGEgc2V0IG1ldHJpYywgd2UgbmVlZCB0byBjYWxjdWxhdGUgdGhlIGRlbHRhIGZyb20gdGhlIHByZXZpb3VzIHdlaWdodC5cbiAgICBjb25zdCBwcmV2aW91c1dlaWdodCA9IGJ1Y2tldEl0ZW0gJiYgbWV0cmljVHlwZSA9PT0gU0VUX01FVFJJQ19UWVBFID8gYnVja2V0SXRlbS5tZXRyaWMud2VpZ2h0IDogMDtcblxuICAgIGlmIChidWNrZXRJdGVtKSB7XG4gICAgICBidWNrZXRJdGVtLm1ldHJpYy5hZGQodmFsdWUpO1xuICAgICAgLy8gVE9ETyhhYmhpKTogRG8gd2UgbmVlZCB0aGlzIGNoZWNrP1xuICAgICAgaWYgKGJ1Y2tldEl0ZW0udGltZXN0YW1wIDwgdGltZXN0YW1wKSB7XG4gICAgICAgIGJ1Y2tldEl0ZW0udGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBidWNrZXRJdGVtID0ge1xuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHdlIGRvbid0IG5lZWQgdG8gbmFycm93IGRvd24gdGhlIHR5cGUgb2YgdmFsdWUgaGVyZSwgc2F2ZXMgYnVuZGxlIHNpemUuXG4gICAgICAgIG1ldHJpYzogbmV3IE1FVFJJQ19NQVBbbWV0cmljVHlwZV0odmFsdWUpLFxuICAgICAgICB0aW1lc3RhbXAsXG4gICAgICAgIG1ldHJpY1R5cGUsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHVuaXQsXG4gICAgICAgIHRhZ3MsXG4gICAgICB9O1xuICAgICAgdGhpcy5fYnVja2V0cy5zZXQoYnVja2V0S2V5LCBidWNrZXRJdGVtKTtcbiAgICB9XG5cbiAgICAvLyBJZiB2YWx1ZSBpcyBhIHN0cmluZywgaXQncyBhIHNldCBtZXRyaWMgc28gY2FsY3VsYXRlIHRoZSBkZWx0YSBmcm9tIHRoZSBwcmV2aW91cyB3ZWlnaHQuXG4gICAgY29uc3QgdmFsID0gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IGJ1Y2tldEl0ZW0ubWV0cmljLndlaWdodCAtIHByZXZpb3VzV2VpZ2h0IDogdmFsdWU7XG4gICAgdXBkYXRlTWV0cmljU3VtbWFyeU9uQWN0aXZlU3BhbihtZXRyaWNUeXBlLCBuYW1lLCB2YWwsIHVuaXQsIHVuc2FuaXRpemVkVGFncywgYnVja2V0S2V5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGZsdXNoKCkge1xuICAgIC8vIHNob3J0IGNpcmN1aXQgaWYgYnVja2V0cyBhcmUgZW1wdHkuXG4gICAgaWYgKHRoaXMuX2J1Y2tldHMuc2l6ZSA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9jbGllbnQuY2FwdHVyZUFnZ3JlZ2F0ZU1ldHJpY3MpIHtcbiAgICAgIC8vIFRPRE8oQGFub25yaWcpOiBVc2UgT2JqZWN0LnZhbHVlcygpIHdoZW4gd2Ugc3VwcG9ydCBFUzYrXG4gICAgICBjb25zdCBtZXRyaWNCdWNrZXRzID0gQXJyYXkuZnJvbSh0aGlzLl9idWNrZXRzKS5tYXAoKFssIGJ1Y2tldEl0ZW1dKSA9PiBidWNrZXRJdGVtKTtcbiAgICAgIHRoaXMuX2NsaWVudC5jYXB0dXJlQWdncmVnYXRlTWV0cmljcyhtZXRyaWNCdWNrZXRzKTtcbiAgICB9XG5cbiAgICB0aGlzLl9idWNrZXRzLmNsZWFyKCk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjbG9zZSgpIHtcbiAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsKTtcbiAgICB0aGlzLmZsdXNoKCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQnJvd3Nlck1ldHJpY3NBZ2dyZWdhdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1icm93c2VyLWFnZ3JlZ2F0b3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/browser-aggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COUNTER_METRIC_TYPE: () => (/* binding */ COUNTER_METRIC_TYPE),\n/* harmony export */   DEFAULT_BROWSER_FLUSH_INTERVAL: () => (/* binding */ DEFAULT_BROWSER_FLUSH_INTERVAL),\n/* harmony export */   DEFAULT_FLUSH_INTERVAL: () => (/* binding */ DEFAULT_FLUSH_INTERVAL),\n/* harmony export */   DISTRIBUTION_METRIC_TYPE: () => (/* binding */ DISTRIBUTION_METRIC_TYPE),\n/* harmony export */   GAUGE_METRIC_TYPE: () => (/* binding */ GAUGE_METRIC_TYPE),\n/* harmony export */   MAX_WEIGHT: () => (/* binding */ MAX_WEIGHT),\n/* harmony export */   SET_METRIC_TYPE: () => (/* binding */ SET_METRIC_TYPE)\n/* harmony export */ });\nconst COUNTER_METRIC_TYPE = 'c' ;\nconst GAUGE_METRIC_TYPE = 'g' ;\nconst SET_METRIC_TYPE = 's' ;\nconst DISTRIBUTION_METRIC_TYPE = 'd' ;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nconst DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nconst DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nconst MAX_WEIGHT = 10000;\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVpSztBQUNqSyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9jb25zdGFudHMuanM/YzM2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDT1VOVEVSX01FVFJJQ19UWVBFID0gJ2MnIDtcbmNvbnN0IEdBVUdFX01FVFJJQ19UWVBFID0gJ2cnIDtcbmNvbnN0IFNFVF9NRVRSSUNfVFlQRSA9ICdzJyA7XG5jb25zdCBESVNUUklCVVRJT05fTUVUUklDX1RZUEUgPSAnZCcgO1xuXG4vKipcbiAqIFRoaXMgZG9lcyBub3QgbWF0Y2ggc3BlYyBpbiBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvbWV0cmljc1xuICogYnV0IHdhcyBjaG9zZW4gdG8gb3B0aW1pemUgZm9yIHRoZSBtb3N0IGNvbW1vbiBjYXNlIGluIGJyb3dzZXIgZW52aXJvbm1lbnRzLlxuICovXG5jb25zdCBERUZBVUxUX0JST1dTRVJfRkxVU0hfSU5URVJWQUwgPSA1MDAwO1xuXG4vKipcbiAqIFNES3MgYXJlIHJlcXVpcmVkIHRvIGJ1Y2tldCBpbnRvIDEwIHNlY29uZCBpbnRlcnZhbHMgKHJvbGx1cCBpbiBzZWNvbmRzKVxuICogd2hpY2ggaXMgdGhlIGN1cnJlbnQgbG93ZXIgYm91bmQgb2YgbWV0cmljIGFjY3VyYWN5LlxuICovXG5jb25zdCBERUZBVUxUX0ZMVVNIX0lOVEVSVkFMID0gMTAwMDA7XG5cbi8qKlxuICogVGhlIG1heGltdW0gbnVtYmVyIG9mIG1ldHJpY3MgdGhhdCBzaG91bGQgYmUgc3RvcmVkIGluIG1lbW9yeS5cbiAqL1xuY29uc3QgTUFYX1dFSUdIVCA9IDEwMDAwO1xuXG5leHBvcnQgeyBDT1VOVEVSX01FVFJJQ19UWVBFLCBERUZBVUxUX0JST1dTRVJfRkxVU0hfSU5URVJWQUwsIERFRkFVTFRfRkxVU0hfSU5URVJWQUwsIERJU1RSSUJVVElPTl9NRVRSSUNfVFlQRSwgR0FVR0VfTUVUUklDX1RZUEUsIE1BWF9XRUlHSFQsIFNFVF9NRVRSSUNfVFlQRSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/envelope.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/envelope.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMetricEnvelope: () => (/* binding */ createMetricEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.serializeMetricBuckets)(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2VudmVsb3BlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEQ7QUFDUjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQiwwREFBVztBQUM3Qjs7QUFFQTtBQUNBLFNBQVMsNkRBQWM7QUFDdkI7O0FBRUE7QUFDQSxrQkFBa0IsaUVBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL21ldHJpY3MvZW52ZWxvcGUuanM/OTcxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkc25Ub1N0cmluZywgY3JlYXRlRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHNlcmlhbGl6ZU1ldHJpY0J1Y2tldHMgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgZW52ZWxvcGUgZnJvbSBhIG1ldHJpYyBhZ2dyZWdhdGUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU1ldHJpY0VudmVsb3BlKFxuICBtZXRyaWNCdWNrZXRJdGVtcyxcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICB9O1xuXG4gIGlmIChtZXRhZGF0YSAmJiBtZXRhZGF0YS5zZGspIHtcbiAgICBoZWFkZXJzLnNkayA9IHtcbiAgICAgIG5hbWU6IG1ldGFkYXRhLnNkay5uYW1lLFxuICAgICAgdmVyc2lvbjogbWV0YWRhdGEuc2RrLnZlcnNpb24sXG4gICAgfTtcbiAgfVxuXG4gIGlmICghIXR1bm5lbCAmJiBkc24pIHtcbiAgICBoZWFkZXJzLmRzbiA9IGRzblRvU3RyaW5nKGRzbik7XG4gIH1cblxuICBjb25zdCBpdGVtID0gY3JlYXRlTWV0cmljRW52ZWxvcGVJdGVtKG1ldHJpY0J1Y2tldEl0ZW1zKTtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGhlYWRlcnMsIFtpdGVtXSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1ldHJpY0VudmVsb3BlSXRlbShtZXRyaWNCdWNrZXRJdGVtcykge1xuICBjb25zdCBwYXlsb2FkID0gc2VyaWFsaXplTWV0cmljQnVja2V0cyhtZXRyaWNCdWNrZXRJdGVtcyk7XG4gIGNvbnN0IG1ldHJpY0hlYWRlcnMgPSB7XG4gICAgdHlwZTogJ3N0YXRzZCcsXG4gICAgbGVuZ3RoOiBwYXlsb2FkLmxlbmd0aCxcbiAgfTtcbiAgcmV0dXJuIFttZXRyaWNIZWFkZXJzLCBwYXlsb2FkXTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTWV0cmljRW52ZWxvcGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudmVsb3BlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/envelope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/exports.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/exports.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   distribution: () => (/* binding */ distribution),\n/* harmony export */   gauge: () => (/* binding */ gauge),\n/* harmony export */   increment: () => (/* binding */ increment),\n/* harmony export */   metrics: () => (/* binding */ metrics),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/integration.js\");\n\n\n\n\n\n\n\nfunction addToMetricsAggregator(\n  metricType,\n  name,\n  value,\n  data = {},\n) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const scope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  if (client) {\n    if (!client.metricsAggregator) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('No metrics aggregator enabled. Please add the MetricsAggregator integration to use metrics APIs');\n      return;\n    }\n    const { unit, tags, timestamp } = data;\n    const { release, environment } = client.getOptions();\n    // eslint-disable-next-line deprecation/deprecation\n    const transaction = scope.getTransaction();\n    const metricTags = {};\n    if (release) {\n      metricTags.release = release;\n    }\n    if (environment) {\n      metricTags.environment = environment;\n    }\n    if (transaction) {\n      metricTags.transaction = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(transaction).description || '';\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Adding value of ${value} to ${metricType} metric ${name}`);\n    client.metricsAggregator.add(metricType, name, value, unit, { ...metricTags, ...tags }, timestamp);\n  }\n}\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction increment(name, value = 1, data) {\n  addToMetricsAggregator(_constants_js__WEBPACK_IMPORTED_MODULE_4__.COUNTER_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction distribution(name, value, data) {\n  addToMetricsAggregator(_constants_js__WEBPACK_IMPORTED_MODULE_4__.DISTRIBUTION_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction set(name, value, data) {\n  addToMetricsAggregator(_constants_js__WEBPACK_IMPORTED_MODULE_4__.SET_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction gauge(name, value, data) {\n  addToMetricsAggregator(_constants_js__WEBPACK_IMPORTED_MODULE_4__.GAUGE_METRIC_TYPE, name, value, data);\n}\n\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  /** @deprecated Use `metrics.metricsAggregratorIntegration()` instead. */\n  // eslint-disable-next-line deprecation/deprecation\n  MetricsAggregator: _integration_js__WEBPACK_IMPORTED_MODULE_5__.MetricsAggregator,\n  metricsAggregatorIntegration: _integration_js__WEBPACK_IMPORTED_MODULE_5__.metricsAggregatorIntegration,\n};\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2V4cG9ydHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDUztBQUNXO0FBQ1I7QUFDZ0U7QUFDaEM7O0FBRW5GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsaUJBQWlCLHNEQUFTO0FBQzFCLGdCQUFnQiw0REFBZTtBQUMvQjtBQUNBO0FBQ0EsTUFBTSx3REFBVztBQUNqQixRQUFRLGlEQUFNO0FBQ2Q7QUFDQTtBQUNBLFlBQVksd0JBQXdCO0FBQ3BDLFlBQVksdUJBQXVCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLCtEQUFVO0FBQ3pDOztBQUVBLElBQUksd0RBQVcsSUFBSSxpREFBTSx3QkFBd0IsT0FBTyxLQUFLLFlBQVksU0FBUyxLQUFLO0FBQ3ZGLGtFQUFrRSx3QkFBd0I7QUFDMUY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOERBQW1CO0FBQzVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixtRUFBd0I7QUFDakQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDBEQUFlO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0REFBaUI7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsOEJBQThCO0FBQzlCOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9leHBvcnRzLmpzPzAwMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IGdldENsaWVudCwgZ2V0Q3VycmVudFNjb3BlIH0gZnJvbSAnLi4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgeyBzcGFuVG9KU09OIH0gZnJvbSAnLi4vdXRpbHMvc3BhblV0aWxzLmpzJztcbmltcG9ydCB7IENPVU5URVJfTUVUUklDX1RZUEUsIERJU1RSSUJVVElPTl9NRVRSSUNfVFlQRSwgU0VUX01FVFJJQ19UWVBFLCBHQVVHRV9NRVRSSUNfVFlQRSB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IE1ldHJpY3NBZ2dyZWdhdG9yLCBtZXRyaWNzQWdncmVnYXRvckludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmZ1bmN0aW9uIGFkZFRvTWV0cmljc0FnZ3JlZ2F0b3IoXG4gIG1ldHJpY1R5cGUsXG4gIG5hbWUsXG4gIHZhbHVlLFxuICBkYXRhID0ge30sXG4pIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gIGNvbnN0IHNjb3BlID0gZ2V0Q3VycmVudFNjb3BlKCk7XG4gIGlmIChjbGllbnQpIHtcbiAgICBpZiAoIWNsaWVudC5tZXRyaWNzQWdncmVnYXRvcikge1xuICAgICAgREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLndhcm4oJ05vIG1ldHJpY3MgYWdncmVnYXRvciBlbmFibGVkLiBQbGVhc2UgYWRkIHRoZSBNZXRyaWNzQWdncmVnYXRvciBpbnRlZ3JhdGlvbiB0byB1c2UgbWV0cmljcyBBUElzJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgdW5pdCwgdGFncywgdGltZXN0YW1wIH0gPSBkYXRhO1xuICAgIGNvbnN0IHsgcmVsZWFzZSwgZW52aXJvbm1lbnQgfSA9IGNsaWVudC5nZXRPcHRpb25zKCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBzY29wZS5nZXRUcmFuc2FjdGlvbigpO1xuICAgIGNvbnN0IG1ldHJpY1RhZ3MgPSB7fTtcbiAgICBpZiAocmVsZWFzZSkge1xuICAgICAgbWV0cmljVGFncy5yZWxlYXNlID0gcmVsZWFzZTtcbiAgICB9XG4gICAgaWYgKGVudmlyb25tZW50KSB7XG4gICAgICBtZXRyaWNUYWdzLmVudmlyb25tZW50ID0gZW52aXJvbm1lbnQ7XG4gICAgfVxuICAgIGlmICh0cmFuc2FjdGlvbikge1xuICAgICAgbWV0cmljVGFncy50cmFuc2FjdGlvbiA9IHNwYW5Ub0pTT04odHJhbnNhY3Rpb24pLmRlc2NyaXB0aW9uIHx8ICcnO1xuICAgIH1cblxuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5sb2coYEFkZGluZyB2YWx1ZSBvZiAke3ZhbHVlfSB0byAke21ldHJpY1R5cGV9IG1ldHJpYyAke25hbWV9YCk7XG4gICAgY2xpZW50Lm1ldHJpY3NBZ2dyZWdhdG9yLmFkZChtZXRyaWNUeXBlLCBuYW1lLCB2YWx1ZSwgdW5pdCwgeyAuLi5tZXRyaWNUYWdzLCAuLi50YWdzIH0sIHRpbWVzdGFtcCk7XG4gIH1cbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBjb3VudGVyIG1ldHJpY1xuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBBUEkgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBoYXZlIGJyZWFraW5nIGNoYW5nZXMgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuZnVuY3Rpb24gaW5jcmVtZW50KG5hbWUsIHZhbHVlID0gMSwgZGF0YSkge1xuICBhZGRUb01ldHJpY3NBZ2dyZWdhdG9yKENPVU5URVJfTUVUUklDX1RZUEUsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBkaXN0cmlidXRpb24gbWV0cmljXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGhhdmUgYnJlYWtpbmcgY2hhbmdlcyBpbiB0aGUgZnV0dXJlLlxuICovXG5mdW5jdGlvbiBkaXN0cmlidXRpb24obmFtZSwgdmFsdWUsIGRhdGEpIHtcbiAgYWRkVG9NZXRyaWNzQWdncmVnYXRvcihESVNUUklCVVRJT05fTUVUUklDX1RZUEUsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBzZXQgbWV0cmljLiBWYWx1ZSBtdXN0IGJlIGEgc3RyaW5nIG9yIGludGVnZXIuXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGhhdmUgYnJlYWtpbmcgY2hhbmdlcyBpbiB0aGUgZnV0dXJlLlxuICovXG5mdW5jdGlvbiBzZXQobmFtZSwgdmFsdWUsIGRhdGEpIHtcbiAgYWRkVG9NZXRyaWNzQWdncmVnYXRvcihTRVRfTUVUUklDX1RZUEUsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBnYXVnZSBtZXRyaWNcbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cbmZ1bmN0aW9uIGdhdWdlKG5hbWUsIHZhbHVlLCBkYXRhKSB7XG4gIGFkZFRvTWV0cmljc0FnZ3JlZ2F0b3IoR0FVR0VfTUVUUklDX1RZUEUsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuY29uc3QgbWV0cmljcyA9IHtcbiAgaW5jcmVtZW50LFxuICBkaXN0cmlidXRpb24sXG4gIHNldCxcbiAgZ2F1Z2UsXG4gIC8qKiBAZGVwcmVjYXRlZCBVc2UgYG1ldHJpY3MubWV0cmljc0FnZ3JlZ3JhdG9ySW50ZWdyYXRpb24oKWAgaW5zdGVhZC4gKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIE1ldHJpY3NBZ2dyZWdhdG9yLFxuICBtZXRyaWNzQWdncmVnYXRvckludGVncmF0aW9uLFxufTtcblxuZXhwb3J0IHsgZGlzdHJpYnV0aW9uLCBnYXVnZSwgaW5jcmVtZW50LCBtZXRyaWNzLCBzZXQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9ydHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/instance.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/instance.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CounterMetric: () => (/* binding */ CounterMetric),\n/* harmony export */   DistributionMetric: () => (/* binding */ DistributionMetric),\n/* harmony export */   GaugeMetric: () => (/* binding */ GaugeMetric),\n/* harmony export */   METRIC_MAP: () => (/* binding */ METRIC_MAP),\n/* harmony export */   SetMetric: () => (/* binding */ SetMetric)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n/**\n * A metric instance representing a counter.\n */\nclass CounterMetric  {\n   constructor( _value) {this._value = _value;}\n\n  /** @inheritDoc */\n   get weight() {\n    return 1;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nclass GaugeMetric  {\n\n   constructor(value) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return 5;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nclass DistributionMetric  {\n\n   constructor(first) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nclass SetMetric  {\n\n   constructor( first) {this.first = first;\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.simpleHash)(val) : val))\n      .join(':');\n  }\n}\n\nconst METRIC_MAP = {\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.COUNTER_METRIC_TYPE]: CounterMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.GAUGE_METRIC_TYPE]: GaugeMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.SET_METRIC_TYPE]: SetMetric,\n};\n\n\n//# sourceMappingURL=instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2luc3RhbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUg7QUFDM0U7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxZQUFZO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsR0FBRyxVQUFVLEdBQUcsVUFBVSxHQUFHLFVBQVUsR0FBRyxZQUFZO0FBQy9FO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHFEQUFVO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUcsOERBQW1CO0FBQ3RCLEdBQUcsNERBQWlCO0FBQ3BCLEdBQUcsbUVBQXdCO0FBQzNCLEdBQUcsMERBQWU7QUFDbEI7O0FBRWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2luc3RhbmNlLmpzPzdiYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09VTlRFUl9NRVRSSUNfVFlQRSwgR0FVR0VfTUVUUklDX1RZUEUsIERJU1RSSUJVVElPTl9NRVRSSUNfVFlQRSwgU0VUX01FVFJJQ19UWVBFIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgc2ltcGxlSGFzaCB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG4vKipcbiAqIEEgbWV0cmljIGluc3RhbmNlIHJlcHJlc2VudGluZyBhIGNvdW50ZXIuXG4gKi9cbmNsYXNzIENvdW50ZXJNZXRyaWMgIHtcbiAgIGNvbnN0cnVjdG9yKCBfdmFsdWUpIHt0aGlzLl92YWx1ZSA9IF92YWx1ZTt9XG5cbiAgLyoqIEBpbmhlcml0RG9jICovXG4gICBnZXQgd2VpZ2h0KCkge1xuICAgIHJldHVybiAxO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBhZGQodmFsdWUpIHtcbiAgICB0aGlzLl92YWx1ZSArPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuX3ZhbHVlfWA7XG4gIH1cbn1cblxuLyoqXG4gKiBBIG1ldHJpYyBpbnN0YW5jZSByZXByZXNlbnRpbmcgYSBnYXVnZS5cbiAqL1xuY2xhc3MgR2F1Z2VNZXRyaWMgIHtcblxuICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICB0aGlzLl9sYXN0ID0gdmFsdWU7XG4gICAgdGhpcy5fbWluID0gdmFsdWU7XG4gICAgdGhpcy5fbWF4ID0gdmFsdWU7XG4gICAgdGhpcy5fc3VtID0gdmFsdWU7XG4gICAgdGhpcy5fY291bnQgPSAxO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0RG9jICovXG4gICBnZXQgd2VpZ2h0KCkge1xuICAgIHJldHVybiA1O1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBhZGQodmFsdWUpIHtcbiAgICB0aGlzLl9sYXN0ID0gdmFsdWU7XG4gICAgaWYgKHZhbHVlIDwgdGhpcy5fbWluKSB7XG4gICAgICB0aGlzLl9taW4gPSB2YWx1ZTtcbiAgICB9XG4gICAgaWYgKHZhbHVlID4gdGhpcy5fbWF4KSB7XG4gICAgICB0aGlzLl9tYXggPSB2YWx1ZTtcbiAgICB9XG4gICAgdGhpcy5fc3VtICs9IHZhbHVlO1xuICAgIHRoaXMuX2NvdW50Kys7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBgJHt0aGlzLl9sYXN0fToke3RoaXMuX21pbn06JHt0aGlzLl9tYXh9OiR7dGhpcy5fc3VtfToke3RoaXMuX2NvdW50fWA7XG4gIH1cbn1cblxuLyoqXG4gKiBBIG1ldHJpYyBpbnN0YW5jZSByZXByZXNlbnRpbmcgYSBkaXN0cmlidXRpb24uXG4gKi9cbmNsYXNzIERpc3RyaWJ1dGlvbk1ldHJpYyAge1xuXG4gICBjb25zdHJ1Y3RvcihmaXJzdCkge1xuICAgIHRoaXMuX3ZhbHVlID0gW2ZpcnN0XTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgZ2V0IHdlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWUubGVuZ3RoO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBhZGQodmFsdWUpIHtcbiAgICB0aGlzLl92YWx1ZS5wdXNoKHZhbHVlKTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlLmpvaW4oJzonKTtcbiAgfVxufVxuXG4vKipcbiAqIEEgbWV0cmljIGluc3RhbmNlIHJlcHJlc2VudGluZyBhIHNldC5cbiAqL1xuY2xhc3MgU2V0TWV0cmljICB7XG5cbiAgIGNvbnN0cnVjdG9yKCBmaXJzdCkge3RoaXMuZmlyc3QgPSBmaXJzdDtcbiAgICB0aGlzLl92YWx1ZSA9IG5ldyBTZXQoW2ZpcnN0XSk7XG4gIH1cblxuICAvKiogQGluaGVyaXREb2MgKi9cbiAgIGdldCB3ZWlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlLnNpemU7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIGFkZCh2YWx1ZSkge1xuICAgIHRoaXMuX3ZhbHVlLmFkZCh2YWx1ZSk7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX3ZhbHVlKVxuICAgICAgLm1hcCh2YWwgPT4gKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnID8gc2ltcGxlSGFzaCh2YWwpIDogdmFsKSlcbiAgICAgIC5qb2luKCc6Jyk7XG4gIH1cbn1cblxuY29uc3QgTUVUUklDX01BUCA9IHtcbiAgW0NPVU5URVJfTUVUUklDX1RZUEVdOiBDb3VudGVyTWV0cmljLFxuICBbR0FVR0VfTUVUUklDX1RZUEVdOiBHYXVnZU1ldHJpYyxcbiAgW0RJU1RSSUJVVElPTl9NRVRSSUNfVFlQRV06IERpc3RyaWJ1dGlvbk1ldHJpYyxcbiAgW1NFVF9NRVRSSUNfVFlQRV06IFNldE1ldHJpYyxcbn07XG5cbmV4cG9ydCB7IENvdW50ZXJNZXRyaWMsIERpc3RyaWJ1dGlvbk1ldHJpYywgR2F1Z2VNZXRyaWMsIE1FVFJJQ19NQVAsIFNldE1ldHJpYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdGFuY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/instance.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/integration.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/integration.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetricsAggregator: () => (/* binding */ MetricsAggregator),\n/* harmony export */   metricsAggregatorIntegration: () => (/* binding */ metricsAggregatorIntegration)\n/* harmony export */ });\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _browser_aggregator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser-aggregator.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/browser-aggregator.js\");\n\n\n\nconst INTEGRATION_NAME = 'MetricsAggregator';\n\nconst _metricsAggregatorIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      client.metricsAggregator = new _browser_aggregator_js__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator(client);\n    },\n  };\n}) ;\n\nconst metricsAggregatorIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_metricsAggregatorIntegration);\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n * @deprecated Use `metricsAggegratorIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst MetricsAggregator = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  metricsAggregatorIntegration,\n) ;\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2ludGVncmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUY7QUFDaEI7O0FBRW5FOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0EscUNBQXFDLDRFQUF3QjtBQUM3RCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELHFDQUFxQyxrRUFBaUI7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDRFQUEyQjtBQUNyRDtBQUNBO0FBQ0E7O0FBRTJEO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2ludGVncmF0aW9uLmpzPzg5MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzLCBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcbmltcG9ydCB7IEJyb3dzZXJNZXRyaWNzQWdncmVnYXRvciB9IGZyb20gJy4vYnJvd3Nlci1hZ2dyZWdhdG9yLmpzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdNZXRyaWNzQWdncmVnYXRvcic7XG5cbmNvbnN0IF9tZXRyaWNzQWdncmVnYXRvckludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIC8vIFRPRE8gdjg6IFJlbW92ZSB0aGlzXG4gICAgc2V0dXBPbmNlKCkge30sIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBjbGllbnQubWV0cmljc0FnZ3JlZ2F0b3IgPSBuZXcgQnJvd3Nlck1ldHJpY3NBZ2dyZWdhdG9yKGNsaWVudCk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuY29uc3QgbWV0cmljc0FnZ3JlZ2F0b3JJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9tZXRyaWNzQWdncmVnYXRvckludGVncmF0aW9uKTtcblxuLyoqXG4gKiBFbmFibGVzIFNlbnRyeSBtZXRyaWNzIG1vbml0b3JpbmcuXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGhhdmluZyBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKiBAZGVwcmVjYXRlZCBVc2UgYG1ldHJpY3NBZ2dlZ3JhdG9ySW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBNZXRyaWNzQWdncmVnYXRvciA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgbWV0cmljc0FnZ3JlZ2F0b3JJbnRlZ3JhdGlvbixcbikgO1xuXG5leHBvcnQgeyBNZXRyaWNzQWdncmVnYXRvciwgbWV0cmljc0FnZ3JlZ2F0b3JJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/integration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/metric-summary.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMetricSummaryJsonForSpan: () => (/* binding */ getMetricSummaryJsonForSpan),\n/* harmony export */   updateMetricSummaryOnActiveSpan: () => (/* binding */ updateMetricSummaryOnActiveSpan)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tracing/trace.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n\n\n\n\n\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\n\nlet SPAN_METRIC_SUMMARY;\n\nfunction getMetricStorageForSpan(span) {\n  return SPAN_METRIC_SUMMARY ? SPAN_METRIC_SUMMARY.get(span) : undefined;\n}\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nfunction getMetricSummaryJsonForSpan(span) {\n  const storage = getMetricStorageForSpan(span);\n\n  if (!storage) {\n    return undefined;\n  }\n  const output = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    if (!output[exportKey]) {\n      output[exportKey] = [];\n    }\n\n    output[exportKey].push((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nfunction updateMetricSummaryOnActiveSpan(\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const span = (0,_tracing_trace_js__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan)();\n  if (span) {\n    const storage = getMetricStorageForSpan(span) || new Map();\n\n    const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n    const bucketItem = storage.get(bucketKey);\n\n    if (bucketItem) {\n      const [, summary] = bucketItem;\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: Math.min(summary.min, value),\n          max: Math.max(summary.max, value),\n          count: (summary.count += 1),\n          sum: (summary.sum += value),\n          tags: summary.tags,\n        },\n      ]);\n    } else {\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: value,\n          max: value,\n          count: 1,\n          sum: value,\n          tags,\n        },\n      ]);\n    }\n\n    if (!SPAN_METRIC_SUMMARY) {\n      SPAN_METRIC_SUMMARY = new WeakMap();\n    }\n\n    SPAN_METRIC_SUMMARY.set(span, storage);\n  }\n}\n\n\n//# sourceMappingURL=metric-summary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL21ldHJpYy1zdW1tYXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDdkI7QUFDRztBQUNJO0FBQ2tCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkIsZ0VBQWlCO0FBQzVDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0VBQWE7QUFDNUI7QUFDQTs7QUFFQSx5QkFBeUIsV0FBVyxHQUFHLGNBQWMsR0FBRyxLQUFLO0FBQzdEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUV3RTtBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9tZXRyaWMtc3VtbWFyeS5qcz8yNDc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCAnLi4vdHJhY2luZy9lcnJvcnMuanMnO1xuaW1wb3J0ICcuLi90cmFjaW5nL3NwYW5zdGF0dXMuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlU3BhbiB9IGZyb20gJy4uL3RyYWNpbmcvdHJhY2UuanMnO1xuXG4vKipcbiAqIGtleTogYnVja2V0S2V5XG4gKiB2YWx1ZTogW2V4cG9ydEtleSwgTWV0cmljU3VtbWFyeV1cbiAqL1xuXG5sZXQgU1BBTl9NRVRSSUNfU1VNTUFSWTtcblxuZnVuY3Rpb24gZ2V0TWV0cmljU3RvcmFnZUZvclNwYW4oc3Bhbikge1xuICByZXR1cm4gU1BBTl9NRVRSSUNfU1VNTUFSWSA/IFNQQU5fTUVUUklDX1NVTU1BUlkuZ2V0KHNwYW4pIDogdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIEZldGNoZXMgdGhlIG1ldHJpYyBzdW1tYXJ5IGlmIGl0IGV4aXN0cyBmb3IgdGhlIHBhc3NlZCBzcGFuXG4gKi9cbmZ1bmN0aW9uIGdldE1ldHJpY1N1bW1hcnlKc29uRm9yU3BhbihzcGFuKSB7XG4gIGNvbnN0IHN0b3JhZ2UgPSBnZXRNZXRyaWNTdG9yYWdlRm9yU3BhbihzcGFuKTtcblxuICBpZiAoIXN0b3JhZ2UpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIGNvbnN0IG91dHB1dCA9IHt9O1xuXG4gIGZvciAoY29uc3QgWywgW2V4cG9ydEtleSwgc3VtbWFyeV1dIG9mIHN0b3JhZ2UpIHtcbiAgICBpZiAoIW91dHB1dFtleHBvcnRLZXldKSB7XG4gICAgICBvdXRwdXRbZXhwb3J0S2V5XSA9IFtdO1xuICAgIH1cblxuICAgIG91dHB1dFtleHBvcnRLZXldLnB1c2goZHJvcFVuZGVmaW5lZEtleXMoc3VtbWFyeSkpO1xuICB9XG5cbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuLyoqXG4gKiBVcGRhdGVzIHRoZSBtZXRyaWMgc3VtbWFyeSBvbiB0aGUgY3VycmVudGx5IGFjdGl2ZSBzcGFuXG4gKi9cbmZ1bmN0aW9uIHVwZGF0ZU1ldHJpY1N1bW1hcnlPbkFjdGl2ZVNwYW4oXG4gIG1ldHJpY1R5cGUsXG4gIHNhbml0aXplZE5hbWUsXG4gIHZhbHVlLFxuICB1bml0LFxuICB0YWdzLFxuICBidWNrZXRLZXksXG4pIHtcbiAgY29uc3Qgc3BhbiA9IGdldEFjdGl2ZVNwYW4oKTtcbiAgaWYgKHNwYW4pIHtcbiAgICBjb25zdCBzdG9yYWdlID0gZ2V0TWV0cmljU3RvcmFnZUZvclNwYW4oc3BhbikgfHwgbmV3IE1hcCgpO1xuXG4gICAgY29uc3QgZXhwb3J0S2V5ID0gYCR7bWV0cmljVHlwZX06JHtzYW5pdGl6ZWROYW1lfUAke3VuaXR9YDtcbiAgICBjb25zdCBidWNrZXRJdGVtID0gc3RvcmFnZS5nZXQoYnVja2V0S2V5KTtcblxuICAgIGlmIChidWNrZXRJdGVtKSB7XG4gICAgICBjb25zdCBbLCBzdW1tYXJ5XSA9IGJ1Y2tldEl0ZW07XG4gICAgICBzdG9yYWdlLnNldChidWNrZXRLZXksIFtcbiAgICAgICAgZXhwb3J0S2V5LFxuICAgICAgICB7XG4gICAgICAgICAgbWluOiBNYXRoLm1pbihzdW1tYXJ5Lm1pbiwgdmFsdWUpLFxuICAgICAgICAgIG1heDogTWF0aC5tYXgoc3VtbWFyeS5tYXgsIHZhbHVlKSxcbiAgICAgICAgICBjb3VudDogKHN1bW1hcnkuY291bnQgKz0gMSksXG4gICAgICAgICAgc3VtOiAoc3VtbWFyeS5zdW0gKz0gdmFsdWUpLFxuICAgICAgICAgIHRhZ3M6IHN1bW1hcnkudGFncyxcbiAgICAgICAgfSxcbiAgICAgIF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdG9yYWdlLnNldChidWNrZXRLZXksIFtcbiAgICAgICAgZXhwb3J0S2V5LFxuICAgICAgICB7XG4gICAgICAgICAgbWluOiB2YWx1ZSxcbiAgICAgICAgICBtYXg6IHZhbHVlLFxuICAgICAgICAgIGNvdW50OiAxLFxuICAgICAgICAgIHN1bTogdmFsdWUsXG4gICAgICAgICAgdGFncyxcbiAgICAgICAgfSxcbiAgICAgIF0pO1xuICAgIH1cblxuICAgIGlmICghU1BBTl9NRVRSSUNfU1VNTUFSWSkge1xuICAgICAgU1BBTl9NRVRSSUNfU1VNTUFSWSA9IG5ldyBXZWFrTWFwKCk7XG4gICAgfVxuXG4gICAgU1BBTl9NRVRSSUNfU1VNTUFSWS5zZXQoc3Bhbiwgc3RvcmFnZSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgZ2V0TWV0cmljU3VtbWFyeUpzb25Gb3JTcGFuLCB1cGRhdGVNZXRyaWNTdW1tYXJ5T25BY3RpdmVTcGFuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRyaWMtc3VtbWFyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBucketKey: () => (/* binding */ getBucketKey),\n/* harmony export */   sanitizeMetricKey: () => (/* binding */ sanitizeMetricKey),\n/* harmony export */   sanitizeTags: () => (/* binding */ sanitizeTags),\n/* harmony export */   sanitizeUnit: () => (/* binding */ sanitizeUnit),\n/* harmony export */   serializeMetricBuckets: () => (/* binding */ serializeMetricBuckets),\n/* harmony export */   simpleHash: () => (/* binding */ simpleHash)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nfunction sanitizeUnit(unit) {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nfunction sanitizeMetricKey(key) {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key) {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input) {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value) {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxnRUFBaUI7QUFDMUQsWUFBWSxXQUFXLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxnQkFBZ0I7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELG9DQUFvQyxJQUFJLEdBQUcsTUFBTSxhQUFhO0FBQ2pILGNBQWMsVUFBVSxHQUFHLFVBQVUsR0FBRyxZQUFZLEdBQUcsZ0JBQWdCLEVBQUUsVUFBVSxJQUFJLGVBQWU7QUFDdEc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxHQUFHO0FBQ2hCLGFBQWEsR0FBRztBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJHO0FBQzNHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL3V0aWxzLmpzPzZmYzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBHZW5lcmF0ZSBidWNrZXQga2V5IGZyb20gbWV0cmljIHByb3BlcnRpZXMuXG4gKi9cbmZ1bmN0aW9uIGdldEJ1Y2tldEtleShcbiAgbWV0cmljVHlwZSxcbiAgbmFtZSxcbiAgdW5pdCxcbiAgdGFncyxcbikge1xuICBjb25zdCBzdHJpbmdpZmllZFRhZ3MgPSBPYmplY3QuZW50cmllcyhkcm9wVW5kZWZpbmVkS2V5cyh0YWdzKSkuc29ydCgoYSwgYikgPT4gYVswXS5sb2NhbGVDb21wYXJlKGJbMF0pKTtcbiAgcmV0dXJuIGAke21ldHJpY1R5cGV9JHtuYW1lfSR7dW5pdH0ke3N0cmluZ2lmaWVkVGFnc31gO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG4vKipcbiAqIFNpbXBsZSBoYXNoIGZ1bmN0aW9uIGZvciBzdHJpbmdzLlxuICovXG5mdW5jdGlvbiBzaW1wbGVIYXNoKHMpIHtcbiAgbGV0IHJ2ID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYyA9IHMuY2hhckNvZGVBdChpKTtcbiAgICBydiA9IChydiA8PCA1KSAtIHJ2ICsgYztcbiAgICBydiAmPSBydjtcbiAgfVxuICByZXR1cm4gcnYgPj4+IDA7XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBTZXJpYWxpemUgbWV0cmljcyBidWNrZXRzIGludG8gYSBzdHJpbmcgYmFzZWQgb24gc3RhdHNkIGZvcm1hdC5cbiAqXG4gKiBFeGFtcGxlIG9mIGZvcm1hdDpcbiAqIG1ldHJpYy5uYW1lQHNlY29uZDoxOjEuMnxkfCNhOnZhbHVlLGI6YW5vdGhlcnZhbHVlfFQxMjM0NTY3N1xuICogU2VnbWVudHM6XG4gKiBuYW1lOiBtZXRyaWMubmFtZVxuICogdW5pdDogc2Vjb25kXG4gKiB2YWx1ZTogWzEsIDEuMl1cbiAqIHR5cGUgb2YgbWV0cmljOiBkIChkaXN0cmlidXRpb24pXG4gKiB0YWdzOiB7IGE6IHZhbHVlLCBiOiBhbm90aGVydmFsdWUgfVxuICogdGltZXN0YW1wOiAxMjM0NTY3N1xuICovXG5mdW5jdGlvbiBzZXJpYWxpemVNZXRyaWNCdWNrZXRzKG1ldHJpY0J1Y2tldEl0ZW1zKSB7XG4gIGxldCBvdXQgPSAnJztcbiAgZm9yIChjb25zdCBpdGVtIG9mIG1ldHJpY0J1Y2tldEl0ZW1zKSB7XG4gICAgY29uc3QgdGFnRW50cmllcyA9IE9iamVjdC5lbnRyaWVzKGl0ZW0udGFncyk7XG4gICAgY29uc3QgbWF5YmVUYWdzID0gdGFnRW50cmllcy5sZW5ndGggPiAwID8gYHwjJHt0YWdFbnRyaWVzLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBgJHtrZXl9OiR7dmFsdWV9YCkuam9pbignLCcpfWAgOiAnJztcbiAgICBvdXQgKz0gYCR7aXRlbS5uYW1lfUAke2l0ZW0udW5pdH06JHtpdGVtLm1ldHJpY318JHtpdGVtLm1ldHJpY1R5cGV9JHttYXliZVRhZ3N9fFQke2l0ZW0udGltZXN0YW1wfVxcbmA7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cblxuLyoqIFNhbml0aXplcyB1bml0cyAqL1xuZnVuY3Rpb24gc2FuaXRpemVVbml0KHVuaXQpIHtcbiAgcmV0dXJuIHVuaXQucmVwbGFjZSgvW15cXHddKy9naSwgJ18nKTtcbn1cblxuLyoqIFNhbml0aXplcyBtZXRyaWMga2V5cyAqL1xuZnVuY3Rpb24gc2FuaXRpemVNZXRyaWNLZXkoa2V5KSB7XG4gIHJldHVybiBrZXkucmVwbGFjZSgvW15cXHdcXC0uXSsvZ2ksICdfJyk7XG59XG5cbmZ1bmN0aW9uIHNhbml0aXplVGFnS2V5KGtleSkge1xuICByZXR1cm4ga2V5LnJlcGxhY2UoL1teXFx3XFwtLi9dKy9naSwgJycpO1xufVxuXG5jb25zdCB0YWdWYWx1ZVJlcGxhY2VtZW50cyA9IFtcbiAgWydcXG4nLCAnXFxcXG4nXSxcbiAgWydcXHInLCAnXFxcXHInXSxcbiAgWydcXHQnLCAnXFxcXHQnXSxcbiAgWydcXFxcJywgJ1xcXFxcXFxcJ10sXG4gIFsnfCcsICdcXFxcdXs3Y30nXSxcbiAgWycsJywgJ1xcXFx1ezJjfSddLFxuXTtcblxuZnVuY3Rpb24gZ2V0Q2hhck9yUmVwbGFjZW1lbnQoaW5wdXQpIHtcbiAgZm9yIChjb25zdCBbc2VhcmNoLCByZXBsYWNlbWVudF0gb2YgdGFnVmFsdWVSZXBsYWNlbWVudHMpIHtcbiAgICBpZiAoaW5wdXQgPT09IHNlYXJjaCkge1xuICAgICAgcmV0dXJuIHJlcGxhY2VtZW50O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpbnB1dDtcbn1cblxuZnVuY3Rpb24gc2FuaXRpemVUYWdWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gWy4uLnZhbHVlXS5yZWR1Y2UoKGFjYywgY2hhcikgPT4gYWNjICsgZ2V0Q2hhck9yUmVwbGFjZW1lbnQoY2hhciksICcnKTtcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgdGFncy5cbiAqL1xuZnVuY3Rpb24gc2FuaXRpemVUYWdzKHVuc2FuaXRpemVkVGFncykge1xuICBjb25zdCB0YWdzID0ge307XG4gIGZvciAoY29uc3Qga2V5IGluIHVuc2FuaXRpemVkVGFncykge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodW5zYW5pdGl6ZWRUYWdzLCBrZXkpKSB7XG4gICAgICBjb25zdCBzYW5pdGl6ZWRLZXkgPSBzYW5pdGl6ZVRhZ0tleShrZXkpO1xuICAgICAgdGFnc1tzYW5pdGl6ZWRLZXldID0gc2FuaXRpemVUYWdWYWx1ZShTdHJpbmcodW5zYW5pdGl6ZWRUYWdzW2tleV0pKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhZ3M7XG59XG5cbmV4cG9ydCB7IGdldEJ1Y2tldEtleSwgc2FuaXRpemVNZXRyaWNLZXksIHNhbml0aXplVGFncywgc2FuaXRpemVVbml0LCBzZXJpYWxpemVNZXRyaWNCdWNrZXRzLCBzaW1wbGVIYXNoIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/metrics/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scope: () => (/* binding */ Scope),\n/* harmony export */   getGlobalScope: () => (/* binding */ getGlobalScope),\n/* harmony export */   setGlobalScope: () => (/* binding */ setGlobalScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventProcessors.js */ \"(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/applyScopeDataToEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n\n\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /**\n   * Transaction Name\n   */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  /** The client on this scope */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n   static clone(scope) {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n   clone() {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n   getClient() {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(scopeToMerge)) {\n      const scopeContext = captureContext ;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n   getAttachments() {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors = [],\n  ) {\n    (0,_utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),\n      ...this._eventProcessors,\n    ];\n\n    return (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nfunction setGlobalScope(scope) {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)(),\n    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)().substring(16),\n  };\n}\n\n\n//# sourceMappingURL=scope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/scope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/sdk.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAndBind: () => (/* binding */ initAndBind),\n/* harmony export */   setCurrentClient: () => (/* binding */ setCurrentClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  initializeClient(client);\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();\n  // eslint-disable-next-line deprecation/deprecation\n  const top = hub.getStackTop();\n  top.client = client;\n  top.scope.setClient(client);\n}\n\n/**\n * Initialize the client for the current scope.\n * Make sure to call this after `setCurrentClient()`.\n */\nfunction initializeClient(client) {\n  if (client.init) {\n    client.init();\n    // TODO v8: Remove this fallback\n    // eslint-disable-next-line deprecation/deprecation\n  } else if (client.setupIntegrations) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.setupIntegrations();\n  }\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVEO0FBQ1I7QUFDQTtBQUNOOztBQUV6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFXO0FBQ25CLE1BQU0saURBQU07QUFDWixNQUFNO0FBQ047QUFDQSxNQUFNLDZEQUFjO0FBQ3BCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQiw0REFBZTtBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFeUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3Nkay5qcz9hNzU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciwgY29uc29sZVNhbmRib3ggfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuL2V4cG9ydHMuanMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudEh1YiB9IGZyb20gJy4vaHViLmpzJztcblxuLyoqIEEgY2xhc3Mgb2JqZWN0IHRoYXQgY2FuIGluc3RhbnRpYXRlIENsaWVudCBvYmplY3RzLiAqL1xuXG4vKipcbiAqIEludGVybmFsIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhIG5ldyBTREsgY2xpZW50IGluc3RhbmNlLiBUaGUgY2xpZW50IGlzXG4gKiBpbnN0YWxsZWQgYW5kIHRoZW4gYm91bmQgdG8gdGhlIGN1cnJlbnQgc2NvcGUuXG4gKlxuICogQHBhcmFtIGNsaWVudENsYXNzIFRoZSBjbGllbnQgY2xhc3MgdG8gaW5zdGFudGlhdGUuXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIHRvIHBhc3MgdG8gdGhlIGNsaWVudC5cbiAqL1xuZnVuY3Rpb24gaW5pdEFuZEJpbmQoXG4gIGNsaWVudENsYXNzLFxuICBvcHRpb25zLFxuKSB7XG4gIGlmIChvcHRpb25zLmRlYnVnID09PSB0cnVlKSB7XG4gICAgaWYgKERFQlVHX0JVSUxEKSB7XG4gICAgICBsb2dnZXIuZW5hYmxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVzZSBgY29uc29sZS53YXJuYCByYXRoZXIgdGhhbiBgbG9nZ2VyLndhcm5gIHNpbmNlIGJ5IG5vbi1kZWJ1ZyBidW5kbGVzIGhhdmUgYWxsIGBsb2dnZXIueGAgc3RhdGVtZW50cyBzdHJpcHBlZFxuICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLndhcm4oJ1tTZW50cnldIENhbm5vdCBpbml0aWFsaXplIFNESyB3aXRoIGBkZWJ1Z2Agb3B0aW9uIHVzaW5nIGEgbm9uLWRlYnVnIGJ1bmRsZS4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICBzY29wZS51cGRhdGUob3B0aW9ucy5pbml0aWFsU2NvcGUpO1xuXG4gIGNvbnN0IGNsaWVudCA9IG5ldyBjbGllbnRDbGFzcyhvcHRpb25zKTtcbiAgc2V0Q3VycmVudENsaWVudChjbGllbnQpO1xuICBpbml0aWFsaXplQ2xpZW50KGNsaWVudCk7XG59XG5cbi8qKlxuICogTWFrZSB0aGUgZ2l2ZW4gY2xpZW50IHRoZSBjdXJyZW50IGNsaWVudC5cbiAqL1xuZnVuY3Rpb24gc2V0Q3VycmVudENsaWVudChjbGllbnQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IGh1YiA9IGdldEN1cnJlbnRIdWIoKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHRvcCA9IGh1Yi5nZXRTdGFja1RvcCgpO1xuICB0b3AuY2xpZW50ID0gY2xpZW50O1xuICB0b3Auc2NvcGUuc2V0Q2xpZW50KGNsaWVudCk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgY2xpZW50IGZvciB0aGUgY3VycmVudCBzY29wZS5cbiAqIE1ha2Ugc3VyZSB0byBjYWxsIHRoaXMgYWZ0ZXIgYHNldEN1cnJlbnRDbGllbnQoKWAuXG4gKi9cbmZ1bmN0aW9uIGluaXRpYWxpemVDbGllbnQoY2xpZW50KSB7XG4gIGlmIChjbGllbnQuaW5pdCkge1xuICAgIGNsaWVudC5pbml0KCk7XG4gICAgLy8gVE9ETyB2ODogUmVtb3ZlIHRoaXMgZmFsbGJhY2tcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgfSBlbHNlIGlmIChjbGllbnQuc2V0dXBJbnRlZ3JhdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICBjbGllbnQuc2V0dXBJbnRlZ3JhdGlvbnMoKTtcbiAgfVxufVxuXG5leHBvcnQgeyBpbml0QW5kQmluZCwgc2V0Q3VycmVudENsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/sdk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/semanticAttributes.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SEMANTIC_ATTRIBUTE_PROFILE_ID: () => (/* binding */ SEMANTIC_ATTRIBUTE_PROFILE_ID),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_OP: () => (/* binding */ SEMANTIC_ATTRIBUTE_SENTRY_OP),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => (/* binding */ SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => (/* binding */ SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => (/* binding */ SEMANTIC_ATTRIBUTE_SENTRY_SOURCE)\n/* harmony export */ });\n/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n\n\n//# sourceMappingURL=semanticAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZW1hbnRpY0F0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtMO0FBQ2xMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZW1hbnRpY0F0dHJpYnV0ZXMuanM/MGMwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSB0aGlzIGF0dHJpYnV0ZSB0byByZXByZXNlbnQgdGhlIHNvdXJjZSBvZiBhIHNwYW4uXG4gKiBTaG91bGQgYmUgb25lIG9mOiBjdXN0b20sIHVybCwgcm91dGUsIHZpZXcsIGNvbXBvbmVudCwgdGFzaywgdW5rbm93blxuICpcbiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0UgPSAnc2VudHJ5LnNvdXJjZSc7XG5cbi8qKlxuICogVXNlIHRoaXMgYXR0cmlidXRlIHRvIHJlcHJlc2VudCB0aGUgc2FtcGxlIHJhdGUgdXNlZCBmb3IgYSBzcGFuLlxuICovXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFID0gJ3NlbnRyeS5zYW1wbGVfcmF0ZSc7XG5cbi8qKlxuICogVXNlIHRoaXMgYXR0cmlidXRlIHRvIHJlcHJlc2VudCB0aGUgb3BlcmF0aW9uIG9mIGEgc3Bhbi5cbiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCA9ICdzZW50cnkub3AnO1xuXG4vKipcbiAqIFVzZSB0aGlzIGF0dHJpYnV0ZSB0byByZXByZXNlbnQgdGhlIG9yaWdpbiBvZiBhIHNwYW4uXG4gKi9cbmNvbnN0IFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOID0gJ3NlbnRyeS5vcmlnaW4nO1xuXG4vKipcbiAqIFRoZSBpZCBvZiB0aGUgcHJvZmlsZSB0aGF0IHRoaXMgc3BhbiBvY2N1cmVkIGluLlxuICovXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfUFJPRklMRV9JRCA9ICdwcm9maWxlX2lkJztcblxuZXhwb3J0IHsgU0VNQU5USUNfQVRUUklCVVRFX1BST0ZJTEVfSUQsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1AsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VtYW50aWNBdHRyaWJ1dGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/server-runtime-client.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/server-runtime-client.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerRuntimeClient: () => (/* binding */ ServerRuntimeClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/eventbuilder.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseclient.js */ \"(rsc)/./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _checkin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./checkin.js */ \"(rsc)/./node_modules/@sentry/core/esm/checkin.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _metrics_aggregator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./metrics/aggregator.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/aggregator.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sessionflusher.js */ \"(rsc)/./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/hubextensions.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/getRootSpan.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends _baseclient_js__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    (0,_tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n    super(options);\n\n    if (options._experiments && options._experiments['metricsAggregator']) {\n      this.metricsAggregator = new _metrics_aggregator_js__WEBPACK_IMPORTED_MODULE_2__.MetricsAggregator(this);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.eventFromUnknownInput)((0,_exports_js__WEBPACK_IMPORTED_MODULE_5__.getClient)(), this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)(\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const requestSession = scope.getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = scope.getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new _sessionflusher_js__WEBPACK_IMPORTED_MODULE_8__.SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = 'checkInId' in checkIn && checkIn.checkInId ? checkIn.checkInId : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.uuid4)();\n    if (!this._isEnabled()) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if ('duration' in checkIn) {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = (0,_checkin_js__WEBPACK_IMPORTED_MODULE_10__.createCheckInEnvelope)(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope,\n  ) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope, isolationScope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const span = scope.getSpan();\n    if (span) {\n      const samplingContext = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_11__.getRootSpan)(span) ? (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_12__.getDynamicSamplingContextFromSpan)(span) : undefined;\n      return [samplingContext, (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_13__.spanToTraceContext)(span)];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [(0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_12__.getDynamicSamplingContextFromClient)(traceId, this, scope), traceContext];\n  }\n}\n\n\n//# sourceMappingURL=server-runtime-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/server-runtime-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeSession: () => (/* binding */ closeSession),\n/* harmony export */   makeSession: () => (/* binding */ makeSession),\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RTs7QUFFN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaUVBQWtCOztBQUV6QztBQUNBLFNBQVMsb0RBQUs7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJDQUEyQyxpRUFBa0I7O0FBRTdEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELG9EQUFLO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsWUFBWTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixJQUFJO0FBQ0osZ0JBQWdCO0FBQ2hCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGdFQUFpQjtBQUMxQixZQUFZLFlBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLFlBQVk7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVvRDtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vc2Vzc2lvbi5qcz82OGU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRpbWVzdGFtcEluU2Vjb25kcywgdXVpZDQsIGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBgU2Vzc2lvbmAgb2JqZWN0IGJ5IHNldHRpbmcgY2VydGFpbiBkZWZhdWx0IHBhcmFtZXRlcnMuIElmIG9wdGlvbmFsIEBwYXJhbSBjb250ZXh0XG4gKiBpcyBwYXNzZWQsIHRoZSBwYXNzZWQgcHJvcGVydGllcyBhcmUgYXBwbGllZCB0byB0aGUgc2Vzc2lvbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIGNvbnRleHQgKG9wdGlvbmFsKSBhZGRpdGlvbmFsIHByb3BlcnRpZXMgdG8gYmUgYXBwbGllZCB0byB0aGUgcmV0dXJuZWQgc2Vzc2lvbiBvYmplY3RcbiAqXG4gKiBAcmV0dXJucyBhIG5ldyBgU2Vzc2lvbmAgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIG1ha2VTZXNzaW9uKGNvbnRleHQpIHtcbiAgLy8gQm90aCB0aW1lc3RhbXAgYW5kIHN0YXJ0ZWQgYXJlIGluIHNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2guXG4gIGNvbnN0IHN0YXJ0aW5nVGltZSA9IHRpbWVzdGFtcEluU2Vjb25kcygpO1xuXG4gIGNvbnN0IHNlc3Npb24gPSB7XG4gICAgc2lkOiB1dWlkNCgpLFxuICAgIGluaXQ6IHRydWUsXG4gICAgdGltZXN0YW1wOiBzdGFydGluZ1RpbWUsXG4gICAgc3RhcnRlZDogc3RhcnRpbmdUaW1lLFxuICAgIGR1cmF0aW9uOiAwLFxuICAgIHN0YXR1czogJ29rJyxcbiAgICBlcnJvcnM6IDAsXG4gICAgaWdub3JlRHVyYXRpb246IGZhbHNlLFxuICAgIHRvSlNPTjogKCkgPT4gc2Vzc2lvblRvSlNPTihzZXNzaW9uKSxcbiAgfTtcblxuICBpZiAoY29udGV4dCkge1xuICAgIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbiwgY29udGV4dCk7XG4gIH1cblxuICByZXR1cm4gc2Vzc2lvbjtcbn1cblxuLyoqXG4gKiBVcGRhdGVzIGEgc2Vzc2lvbiBvYmplY3Qgd2l0aCB0aGUgcHJvcGVydGllcyBwYXNzZWQgaW4gdGhlIGNvbnRleHQuXG4gKlxuICogTm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gbXV0YXRlcyB0aGUgcGFzc2VkIG9iamVjdCBhbmQgcmV0dXJucyB2b2lkLlxuICogKEhhZCB0byBkbyB0aGlzIGluc3RlYWQgb2YgcmV0dXJuaW5nIGEgbmV3IGFuZCB1cGRhdGVkIHNlc3Npb24gYmVjYXVzZSBjbG9zaW5nIGFuZCBzZW5kaW5nIGEgc2Vzc2lvblxuICogbWFrZXMgYW4gdXBkYXRlIHRvIHRoZSBzZXNzaW9uIGFmdGVyIGl0IHdhcyBwYXNzZWQgdG8gdGhlIHNlbmRpbmcgbG9naWMuXG4gKiBAc2VlIEJhc2VDbGllbnQuY2FwdHVyZVNlc3Npb24gKVxuICpcbiAqIEBwYXJhbSBzZXNzaW9uIHRoZSBgU2Vzc2lvbmAgdG8gdXBkYXRlXG4gKiBAcGFyYW0gY29udGV4dCB0aGUgYFNlc3Npb25Db250ZXh0YCBob2xkaW5nIHRoZSBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGJlIHVwZGF0ZWQgaW4gQHBhcmFtIHNlc3Npb25cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbiwgY29udGV4dCA9IHt9KSB7XG4gIGlmIChjb250ZXh0LnVzZXIpIHtcbiAgICBpZiAoIXNlc3Npb24uaXBBZGRyZXNzICYmIGNvbnRleHQudXNlci5pcF9hZGRyZXNzKSB7XG4gICAgICBzZXNzaW9uLmlwQWRkcmVzcyA9IGNvbnRleHQudXNlci5pcF9hZGRyZXNzO1xuICAgIH1cblxuICAgIGlmICghc2Vzc2lvbi5kaWQgJiYgIWNvbnRleHQuZGlkKSB7XG4gICAgICBzZXNzaW9uLmRpZCA9IGNvbnRleHQudXNlci5pZCB8fCBjb250ZXh0LnVzZXIuZW1haWwgfHwgY29udGV4dC51c2VyLnVzZXJuYW1lO1xuICAgIH1cbiAgfVxuXG4gIHNlc3Npb24udGltZXN0YW1wID0gY29udGV4dC50aW1lc3RhbXAgfHwgdGltZXN0YW1wSW5TZWNvbmRzKCk7XG5cbiAgaWYgKGNvbnRleHQuYWJub3JtYWxfbWVjaGFuaXNtKSB7XG4gICAgc2Vzc2lvbi5hYm5vcm1hbF9tZWNoYW5pc20gPSBjb250ZXh0LmFibm9ybWFsX21lY2hhbmlzbTtcbiAgfVxuXG4gIGlmIChjb250ZXh0Lmlnbm9yZUR1cmF0aW9uKSB7XG4gICAgc2Vzc2lvbi5pZ25vcmVEdXJhdGlvbiA9IGNvbnRleHQuaWdub3JlRHVyYXRpb247XG4gIH1cbiAgaWYgKGNvbnRleHQuc2lkKSB7XG4gICAgLy8gR29vZCBlbm91Z2ggdXVpZCB2YWxpZGF0aW9uLiDigJQgS2FtaWxcbiAgICBzZXNzaW9uLnNpZCA9IGNvbnRleHQuc2lkLmxlbmd0aCA9PT0gMzIgPyBjb250ZXh0LnNpZCA6IHV1aWQ0KCk7XG4gIH1cbiAgaWYgKGNvbnRleHQuaW5pdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc2Vzc2lvbi5pbml0ID0gY29udGV4dC5pbml0O1xuICB9XG4gIGlmICghc2Vzc2lvbi5kaWQgJiYgY29udGV4dC5kaWQpIHtcbiAgICBzZXNzaW9uLmRpZCA9IGAke2NvbnRleHQuZGlkfWA7XG4gIH1cbiAgaWYgKHR5cGVvZiBjb250ZXh0LnN0YXJ0ZWQgPT09ICdudW1iZXInKSB7XG4gICAgc2Vzc2lvbi5zdGFydGVkID0gY29udGV4dC5zdGFydGVkO1xuICB9XG4gIGlmIChzZXNzaW9uLmlnbm9yZUR1cmF0aW9uKSB7XG4gICAgc2Vzc2lvbi5kdXJhdGlvbiA9IHVuZGVmaW5lZDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgY29udGV4dC5kdXJhdGlvbiA9PT0gJ251bWJlcicpIHtcbiAgICBzZXNzaW9uLmR1cmF0aW9uID0gY29udGV4dC5kdXJhdGlvbjtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBkdXJhdGlvbiA9IHNlc3Npb24udGltZXN0YW1wIC0gc2Vzc2lvbi5zdGFydGVkO1xuICAgIHNlc3Npb24uZHVyYXRpb24gPSBkdXJhdGlvbiA+PSAwID8gZHVyYXRpb24gOiAwO1xuICB9XG4gIGlmIChjb250ZXh0LnJlbGVhc2UpIHtcbiAgICBzZXNzaW9uLnJlbGVhc2UgPSBjb250ZXh0LnJlbGVhc2U7XG4gIH1cbiAgaWYgKGNvbnRleHQuZW52aXJvbm1lbnQpIHtcbiAgICBzZXNzaW9uLmVudmlyb25tZW50ID0gY29udGV4dC5lbnZpcm9ubWVudDtcbiAgfVxuICBpZiAoIXNlc3Npb24uaXBBZGRyZXNzICYmIGNvbnRleHQuaXBBZGRyZXNzKSB7XG4gICAgc2Vzc2lvbi5pcEFkZHJlc3MgPSBjb250ZXh0LmlwQWRkcmVzcztcbiAgfVxuICBpZiAoIXNlc3Npb24udXNlckFnZW50ICYmIGNvbnRleHQudXNlckFnZW50KSB7XG4gICAgc2Vzc2lvbi51c2VyQWdlbnQgPSBjb250ZXh0LnVzZXJBZ2VudDtcbiAgfVxuICBpZiAodHlwZW9mIGNvbnRleHQuZXJyb3JzID09PSAnbnVtYmVyJykge1xuICAgIHNlc3Npb24uZXJyb3JzID0gY29udGV4dC5lcnJvcnM7XG4gIH1cbiAgaWYgKGNvbnRleHQuc3RhdHVzKSB7XG4gICAgc2Vzc2lvbi5zdGF0dXMgPSBjb250ZXh0LnN0YXR1cztcbiAgfVxufVxuXG4vKipcbiAqIENsb3NlcyBhIHNlc3Npb24gYnkgc2V0dGluZyBpdHMgc3RhdHVzIGFuZCB1cGRhdGluZyB0aGUgc2Vzc2lvbiBvYmplY3Qgd2l0aCBpdC5cbiAqIEludGVybmFsbHkgY2FsbHMgYHVwZGF0ZVNlc3Npb25gIHRvIHVwZGF0ZSB0aGUgcGFzc2VkIHNlc3Npb24gb2JqZWN0LlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIG11dGF0ZXMgdGhlIHBhc3NlZCBzZXNzaW9uIChAc2VlIHVwZGF0ZVNlc3Npb24gZm9yIGV4cGxhbmF0aW9uKS5cbiAqXG4gKiBAcGFyYW0gc2Vzc2lvbiB0aGUgYFNlc3Npb25gIG9iamVjdCB0byBiZSBjbG9zZWRcbiAqIEBwYXJhbSBzdGF0dXMgdGhlIGBTZXNzaW9uU3RhdHVzYCB3aXRoIHdoaWNoIHRoZSBzZXNzaW9uIHdhcyBjbG9zZWQuIElmIHlvdSBkb24ndCBwYXNzIGEgc3RhdHVzLFxuICogICAgICAgICAgICAgICB0aGlzIGZ1bmN0aW9uIHdpbGwga2VlcCB0aGUgcHJldmlvdXNseSBzZXQgc3RhdHVzLCB1bmxlc3MgaXQgd2FzIGAnb2snYCBpbiB3aGljaCBjYXNlXG4gKiAgICAgICAgICAgICAgIGl0IGlzIGNoYW5nZWQgdG8gYCdleGl0ZWQnYC5cbiAqL1xuZnVuY3Rpb24gY2xvc2VTZXNzaW9uKHNlc3Npb24sIHN0YXR1cykge1xuICBsZXQgY29udGV4dCA9IHt9O1xuICBpZiAoc3RhdHVzKSB7XG4gICAgY29udGV4dCA9IHsgc3RhdHVzIH07XG4gIH0gZWxzZSBpZiAoc2Vzc2lvbi5zdGF0dXMgPT09ICdvaycpIHtcbiAgICBjb250ZXh0ID0geyBzdGF0dXM6ICdleGl0ZWQnIH07XG4gIH1cblxuICB1cGRhdGVTZXNzaW9uKHNlc3Npb24sIGNvbnRleHQpO1xufVxuXG4vKipcbiAqIFNlcmlhbGl6ZXMgYSBwYXNzZWQgc2Vzc2lvbiBvYmplY3QgdG8gYSBKU09OIG9iamVjdCB3aXRoIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHN0cnVjdHVyZS5cbiAqIFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2UgdGhlIFNlbnRyeSBiYWNrZW5kIHJlcXVpcmVzIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNjaGVtYSBvZiBhIHNlc3Npb25cbiAqIHRoYW4gdGhlIG9uZSB0aGUgSlMgU0RLcyB1c2UgaW50ZXJuYWxseS5cbiAqXG4gKiBAcGFyYW0gc2Vzc2lvbiB0aGUgc2Vzc2lvbiB0byBiZSBjb252ZXJ0ZWRcbiAqXG4gKiBAcmV0dXJucyBhIEpTT04gb2JqZWN0IG9mIHRoZSBwYXNzZWQgc2Vzc2lvblxuICovXG5mdW5jdGlvbiBzZXNzaW9uVG9KU09OKHNlc3Npb24pIHtcbiAgcmV0dXJuIGRyb3BVbmRlZmluZWRLZXlzKHtcbiAgICBzaWQ6IGAke3Nlc3Npb24uc2lkfWAsXG4gICAgaW5pdDogc2Vzc2lvbi5pbml0LFxuICAgIC8vIE1ha2Ugc3VyZSB0aGF0IHNlYyBpcyBjb252ZXJ0ZWQgdG8gbXMgZm9yIGRhdGUgY29uc3RydWN0b3JcbiAgICBzdGFydGVkOiBuZXcgRGF0ZShzZXNzaW9uLnN0YXJ0ZWQgKiAxMDAwKS50b0lTT1N0cmluZygpLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoc2Vzc2lvbi50aW1lc3RhbXAgKiAxMDAwKS50b0lTT1N0cmluZygpLFxuICAgIHN0YXR1czogc2Vzc2lvbi5zdGF0dXMsXG4gICAgZXJyb3JzOiBzZXNzaW9uLmVycm9ycyxcbiAgICBkaWQ6IHR5cGVvZiBzZXNzaW9uLmRpZCA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHNlc3Npb24uZGlkID09PSAnc3RyaW5nJyA/IGAke3Nlc3Npb24uZGlkfWAgOiB1bmRlZmluZWQsXG4gICAgZHVyYXRpb246IHNlc3Npb24uZHVyYXRpb24sXG4gICAgYWJub3JtYWxfbWVjaGFuaXNtOiBzZXNzaW9uLmFibm9ybWFsX21lY2hhbmlzbSxcbiAgICBhdHRyczoge1xuICAgICAgcmVsZWFzZTogc2Vzc2lvbi5yZWxlYXNlLFxuICAgICAgZW52aXJvbm1lbnQ6IHNlc3Npb24uZW52aXJvbm1lbnQsXG4gICAgICBpcF9hZGRyZXNzOiBzZXNzaW9uLmlwQWRkcmVzcyxcbiAgICAgIHVzZXJfYWdlbnQ6IHNlc3Npb24udXNlckFnZW50LFxuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyBjbG9zZVNlc3Npb24sIG1ha2VTZXNzaW9uLCB1cGRhdGVTZXNzaW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/sessionflusher.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/sessionflusher.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionFlusher: () => (/* binding */ SessionFlusher)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n\n\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n\n  // Cast to any so that it can use Node.js timeout\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = {};\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds.\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (this._intervalId.unref) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      this._intervalId.unref();\n    }\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n    const requestSession = scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      scope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\n\n//# sourceMappingURL=sessionflusher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uZmx1c2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDSDs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBaUI7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0REFBZTtBQUNqQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uZmx1c2hlci5qcz9mYjZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuL2V4cG9ydHMuanMnO1xuXG4vKipcbiAqIEBpbmhlcml0ZG9jXG4gKi9cbmNsYXNzIFNlc3Npb25GbHVzaGVyICB7XG5cbiAgLy8gQ2FzdCB0byBhbnkgc28gdGhhdCBpdCBjYW4gdXNlIE5vZGUuanMgdGltZW91dFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuXG4gICBjb25zdHJ1Y3RvcihjbGllbnQsIGF0dHJzKSB7XG4gICAgdGhpcy5fY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuZmx1c2hUaW1lb3V0ID0gNjA7XG4gICAgdGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXMgPSB7fTtcbiAgICB0aGlzLl9pc0VuYWJsZWQgPSB0cnVlO1xuXG4gICAgLy8gQ2FsbCB0byBzZXRJbnRlcnZhbCwgc28gdGhhdCBmbHVzaCBpcyBjYWxsZWQgZXZlcnkgNjAgc2Vjb25kcy5cbiAgICB0aGlzLl9pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5mbHVzaCgpLCB0aGlzLmZsdXNoVGltZW91dCAqIDEwMDApO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICBpZiAodGhpcy5faW50ZXJ2YWxJZC51bnJlZikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgdGhpcy5faW50ZXJ2YWxJZC51bnJlZigpO1xuICAgIH1cbiAgICB0aGlzLl9zZXNzaW9uQXR0cnMgPSBhdHRycztcbiAgfVxuXG4gIC8qKiBDaGVja3MgaWYgYHBlbmRpbmdBZ2dyZWdhdGVzYCBoYXMgZW50cmllcywgYW5kIGlmIGl0IGRvZXMgZmx1c2hlcyB0aGVtIGJ5IGNhbGxpbmcgYHNlbmRTZXNzaW9uYCAqL1xuICAgZmx1c2goKSB7XG4gICAgY29uc3Qgc2Vzc2lvbkFnZ3JlZ2F0ZXMgPSB0aGlzLmdldFNlc3Npb25BZ2dyZWdhdGVzKCk7XG4gICAgaWYgKHNlc3Npb25BZ2dyZWdhdGVzLmFnZ3JlZ2F0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzID0ge307XG4gICAgdGhpcy5fY2xpZW50LnNlbmRTZXNzaW9uKHNlc3Npb25BZ2dyZWdhdGVzKTtcbiAgfVxuXG4gIC8qKiBNYXNzYWdlcyB0aGUgZW50cmllcyBpbiBgcGVuZGluZ0FnZ3JlZ2F0ZXNgIGFuZCByZXR1cm5zIGFnZ3JlZ2F0ZWQgc2Vzc2lvbnMgKi9cbiAgIGdldFNlc3Npb25BZ2dyZWdhdGVzKCkge1xuICAgIGNvbnN0IGFnZ3JlZ2F0ZXMgPSBPYmplY3Qua2V5cyh0aGlzLl9wZW5kaW5nQWdncmVnYXRlcykubWFwKChrZXkpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9wZW5kaW5nQWdncmVnYXRlc1twYXJzZUludChrZXkpXTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHNlc3Npb25BZ2dyZWdhdGVzID0ge1xuICAgICAgYXR0cnM6IHRoaXMuX3Nlc3Npb25BdHRycyxcbiAgICAgIGFnZ3JlZ2F0ZXMsXG4gICAgfTtcbiAgICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoc2Vzc2lvbkFnZ3JlZ2F0ZXMpO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICBjbG9zZSgpIHtcbiAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsSWQpO1xuICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuZmx1c2goKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcmFwcGVyIGZ1bmN0aW9uIGZvciBfaW5jcmVtZW50U2Vzc2lvblN0YXR1c0NvdW50IHRoYXQgY2hlY2tzIGlmIHRoZSBpbnN0YW5jZSBvZiBTZXNzaW9uRmx1c2hlciBpcyBlbmFibGVkIHRoZW5cbiAgICogZmV0Y2hlcyB0aGUgc2Vzc2lvbiBzdGF0dXMgb2YgdGhlIHJlcXVlc3QgZnJvbSBgU2NvcGUuZ2V0UmVxdWVzdFNlc3Npb24oKS5zdGF0dXNgIG9uIHRoZSBzY29wZSBhbmQgcGFzc2VzIHRoZW0gdG9cbiAgICogYF9pbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnRgIGFsb25nIHdpdGggdGhlIHN0YXJ0IGRhdGVcbiAgICovXG4gICBpbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnQoKSB7XG4gICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc2NvcGUgPSBnZXRDdXJyZW50U2NvcGUoKTtcbiAgICBjb25zdCByZXF1ZXN0U2Vzc2lvbiA9IHNjb3BlLmdldFJlcXVlc3RTZXNzaW9uKCk7XG5cbiAgICBpZiAocmVxdWVzdFNlc3Npb24gJiYgcmVxdWVzdFNlc3Npb24uc3RhdHVzKSB7XG4gICAgICB0aGlzLl9pbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnQocmVxdWVzdFNlc3Npb24uc3RhdHVzLCBuZXcgRGF0ZSgpKTtcbiAgICAgIC8vIFRoaXMgaXMgbm90IGVudGlyZWx5IG5lY2Vzc2FyaWx5IGJ1dCBpcyBhZGRlZCBhcyBhIHNhZmUgZ3VhcmQgdG8gaW5kaWNhdGUgdGhlIGJvdW5kcyBvZiBhIHJlcXVlc3QgYW5kIHNvIGluXG4gICAgICAvLyBjYXNlIGNhcHR1cmVSZXF1ZXN0U2Vzc2lvbiBpcyBjYWxsZWQgbW9yZSB0aGFuIG9uY2UgdG8gcHJldmVudCBkb3VibGUgY291bnRcbiAgICAgIHNjb3BlLnNldFJlcXVlc3RTZXNzaW9uKHVuZGVmaW5lZCk7XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbmNyZW1lbnRzIHN0YXR1cyBidWNrZXQgaW4gcGVuZGluZ0FnZ3JlZ2F0ZXMgYnVmZmVyIChpbnRlcm5hbCBzdGF0ZSkgY29ycmVzcG9uZGluZyB0byBzdGF0dXMgb2ZcbiAgICogdGhlIHNlc3Npb24gcmVjZWl2ZWRcbiAgICovXG4gICBfaW5jcmVtZW50U2Vzc2lvblN0YXR1c0NvdW50KHN0YXR1cywgZGF0ZSkge1xuICAgIC8vIFRydW5jYXRlIG1pbnV0ZXMgYW5kIHNlY29uZHMgb24gU2Vzc2lvbiBTdGFydGVkIGF0dHJpYnV0ZSB0byBoYXZlIG9uZSBtaW51dGUgYnVja2V0IGtleXNcbiAgICBjb25zdCBzZXNzaW9uU3RhcnRlZFRydW5jID0gbmV3IERhdGUoZGF0ZSkuc2V0U2Vjb25kcygwLCAwKTtcbiAgICB0aGlzLl9wZW5kaW5nQWdncmVnYXRlc1tzZXNzaW9uU3RhcnRlZFRydW5jXSA9IHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzW3Nlc3Npb25TdGFydGVkVHJ1bmNdIHx8IHt9O1xuXG4gICAgLy8gY29ycmVzcG9uZHMgdG8gYWdncmVnYXRlZCBzZXNzaW9ucyBpbiBvbmUgc3BlY2lmaWMgbWludXRlIGJ1Y2tldFxuICAgIC8vIGZvciBleGFtcGxlLCB7XCJzdGFydGVkXCI6XCIyMDIxLTAzLTE2VDA4OjAwOjAwLjAwMFpcIixcImV4aXRlZFwiOjQsIFwiZXJyb3JlZFwiOiAxfVxuICAgIGNvbnN0IGFnZ3JlZ2F0aW9uQ291bnRzID0gdGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXNbc2Vzc2lvblN0YXJ0ZWRUcnVuY107XG4gICAgaWYgKCFhZ2dyZWdhdGlvbkNvdW50cy5zdGFydGVkKSB7XG4gICAgICBhZ2dyZWdhdGlvbkNvdW50cy5zdGFydGVkID0gbmV3IERhdGUoc2Vzc2lvblN0YXJ0ZWRUcnVuYykudG9JU09TdHJpbmcoKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgY2FzZSAnZXJyb3JlZCc6XG4gICAgICAgIGFnZ3JlZ2F0aW9uQ291bnRzLmVycm9yZWQgPSAoYWdncmVnYXRpb25Db3VudHMuZXJyb3JlZCB8fCAwKSArIDE7XG4gICAgICAgIHJldHVybiBhZ2dyZWdhdGlvbkNvdW50cy5lcnJvcmVkO1xuICAgICAgY2FzZSAnb2snOlxuICAgICAgICBhZ2dyZWdhdGlvbkNvdW50cy5leGl0ZWQgPSAoYWdncmVnYXRpb25Db3VudHMuZXhpdGVkIHx8IDApICsgMTtcbiAgICAgICAgcmV0dXJuIGFnZ3JlZ2F0aW9uQ291bnRzLmV4aXRlZDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGFnZ3JlZ2F0aW9uQ291bnRzLmNyYXNoZWQgPSAoYWdncmVnYXRpb25Db3VudHMuY3Jhc2hlZCB8fCAwKSArIDE7XG4gICAgICAgIHJldHVybiBhZ2dyZWdhdGlvbkNvdW50cy5jcmFzaGVkO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBTZXNzaW9uRmx1c2hlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvbmZsdXNoZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/sessionflusher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/span.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/core/esm/span.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSpanEnvelope: () => (/* binding */ createSpanEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n\n\n/**\n * Create envelope from Span item.\n */\nfunction createSpanEnvelope(spans, dsn) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  const items = spans.map(createSpanItem);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(headers, items);\n}\n\nfunction createSpanItem(span) {\n  const spanHeaders = {\n    type: 'span',\n  };\n  return [spanHeaders, span];\n}\n\n\n//# sourceMappingURL=span.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zcGFuLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RDs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsMERBQVc7QUFDN0I7O0FBRUE7QUFDQSxTQUFTLDZEQUFjO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3NwYW4uanM/NzczOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkc25Ub1N0cmluZywgY3JlYXRlRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBDcmVhdGUgZW52ZWxvcGUgZnJvbSBTcGFuIGl0ZW0uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVNwYW5FbnZlbG9wZShzcGFucywgZHNuKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICB9O1xuXG4gIGlmIChkc24pIHtcbiAgICBoZWFkZXJzLmRzbiA9IGRzblRvU3RyaW5nKGRzbik7XG4gIH1cblxuICBjb25zdCBpdGVtcyA9IHNwYW5zLm1hcChjcmVhdGVTcGFuSXRlbSk7XG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShoZWFkZXJzLCBpdGVtcyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNwYW5JdGVtKHNwYW4pIHtcbiAgY29uc3Qgc3BhbkhlYWRlcnMgPSB7XG4gICAgdHlwZTogJ3NwYW4nLFxuICB9O1xuICByZXR1cm4gW3NwYW5IZWFkZXJzLCBzcGFuXTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlU3BhbkVudmVsb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/span.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDynamicSamplingContextFromClient: () => (/* binding */ getDynamicSamplingContextFromClient),\n/* harmony export */   getDynamicSamplingContextFromSpan: () => (/* binding */ getDynamicSamplingContextFromSpan)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getRootSpan.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).trace_id || '', client, (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span) ;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanIsSampled)(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n\n//# sourceMappingURL=dynamicSamplingContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRDtBQUNJO0FBQ0s7QUFDTDtBQUNZOztBQUVsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQSxVQUFVLHdCQUF3Qjs7QUFFbEMsY0FBYyxnRUFBaUI7QUFDL0Isd0NBQXdDLDhEQUFtQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzREFBUztBQUMxQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrREFBa0QsK0RBQVUsK0JBQStCLDREQUFlOztBQUUxRztBQUNBLGNBQWMsa0VBQVc7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0NBQXNDO0FBQ2hEO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6Qzs7QUFFQTtBQUNBLG1CQUFtQiwrREFBVTs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGtFQUFhOztBQUVwQzs7QUFFQTtBQUNBOztBQUVrRjtBQUNsRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9keW5hbWljU2FtcGxpbmdDb250ZXh0LmpzPzA5MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFRkFVTFRfRU5WSVJPTk1FTlQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgZ2V0Q2xpZW50LCBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuLi9leHBvcnRzLmpzJztcbmltcG9ydCB7IGdldFJvb3RTcGFuIH0gZnJvbSAnLi4vdXRpbHMvZ2V0Um9vdFNwYW4uanMnO1xuaW1wb3J0IHsgc3BhblRvSlNPTiwgc3BhbklzU2FtcGxlZCB9IGZyb20gJy4uL3V0aWxzL3NwYW5VdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBmcm9tIGEgY2xpZW50LlxuICpcbiAqIERpc3BhdGNoZXMgdGhlIGBjcmVhdGVEc2NgIGxpZmVjeWNsZSBob29rIGFzIGEgc2lkZSBlZmZlY3QuXG4gKi9cbmZ1bmN0aW9uIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50KFxuICB0cmFjZV9pZCxcbiAgY2xpZW50LFxuICBzY29wZSxcbikge1xuICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICBjb25zdCB7IHB1YmxpY0tleTogcHVibGljX2tleSB9ID0gY2xpZW50LmdldERzbigpIHx8IHt9O1xuICAvLyBUT0RPKHY4KTogUmVtb3ZlIHNlZ21lbnQgZnJvbSBVc2VyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB7IHNlZ21lbnQ6IHVzZXJfc2VnbWVudCB9ID0gKHNjb3BlICYmIHNjb3BlLmdldFVzZXIoKSkgfHwge307XG5cbiAgY29uc3QgZHNjID0gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIGVudmlyb25tZW50OiBvcHRpb25zLmVudmlyb25tZW50IHx8IERFRkFVTFRfRU5WSVJPTk1FTlQsXG4gICAgcmVsZWFzZTogb3B0aW9ucy5yZWxlYXNlLFxuICAgIHVzZXJfc2VnbWVudCxcbiAgICBwdWJsaWNfa2V5LFxuICAgIHRyYWNlX2lkLFxuICB9KSA7XG5cbiAgY2xpZW50LmVtaXQgJiYgY2xpZW50LmVtaXQoJ2NyZWF0ZURzYycsIGRzYyk7XG5cbiAgcmV0dXJuIGRzYztcbn1cblxuLyoqXG4gKiBBIFNwYW4gd2l0aCBhIGZyb3plbiBkeW5hbWljIHNhbXBsaW5nIGNvbnRleHQuXG4gKi9cblxuLyoqXG4gKiBDcmVhdGVzIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IGZyb20gYSBzcGFuIChhbmQgY2xpZW50IGFuZCBzY29wZSlcbiAqXG4gKiBAcGFyYW0gc3BhbiB0aGUgc3BhbiBmcm9tIHdoaWNoIGEgZmV3IHZhbHVlcyBsaWtlIHRoZSByb290IHNwYW4gbmFtZSBhbmQgc2FtcGxlIHJhdGUgYXJlIGV4dHJhY3RlZC5cbiAqXG4gKiBAcmV0dXJucyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dFxuICovXG5mdW5jdGlvbiBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4oc3Bhbikge1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgaWYgKCFjbGllbnQpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICAvLyBwYXNzaW5nIGVtaXQ9ZmFsc2UgaGVyZSB0byBvbmx5IGVtaXQgbGF0ZXIgb25jZSB0aGUgRFNDIGlzIGFjdHVhbGx5IHBvcHVsYXRlZFxuICBjb25zdCBkc2MgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudChzcGFuVG9KU09OKHNwYW4pLnRyYWNlX2lkIHx8ICcnLCBjbGllbnQsIGdldEN1cnJlbnRTY29wZSgpKTtcblxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSB2N0Zyb3plbkRzYyBhcyBhIFRyYW5zYWN0aW9uIHdpbGwgbm8gbG9uZ2VyIGhhdmUgX2Zyb3plbkR5bmFtaWNTYW1wbGluZ0NvbnRleHRcbiAgY29uc3QgdHhuID0gZ2V0Um9vdFNwYW4oc3BhbikgO1xuICBpZiAoIXR4bikge1xuICAgIHJldHVybiBkc2M7XG4gIH1cblxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSB2N0Zyb3plbkRzYyBhcyBhIFRyYW5zYWN0aW9uIHdpbGwgbm8gbG9uZ2VyIGhhdmUgX2Zyb3plbkR5bmFtaWNTYW1wbGluZ0NvbnRleHRcbiAgLy8gRm9yIG5vdyB3ZSBuZWVkIHRvIGF2b2lkIGJyZWFraW5nIHVzZXJzIHdobyBkaXJlY3RseSBjcmVhdGVkIGEgdHhuIHdpdGggYSBEU0MsIHdoZXJlIHRoaXMgZmllbGQgaXMgc3RpbGwgc2V0LlxuICAvLyBAc2VlIFRyYW5zYWN0aW9uIGNsYXNzIGNvbnN0cnVjdG9yXG4gIGNvbnN0IHY3RnJvemVuRHNjID0gdHhuICYmIHR4bi5fZnJvemVuRHluYW1pY1NhbXBsaW5nQ29udGV4dDtcbiAgaWYgKHY3RnJvemVuRHNjKSB7XG4gICAgcmV0dXJuIHY3RnJvemVuRHNjO1xuICB9XG5cbiAgLy8gVE9ETyAodjgpOiBSZXBsYWNlIHR4bi5tZXRhZGF0YSB3aXRoIHR4bi5hdHRyaWJ1dGVzW11cbiAgLy8gV2UgY2FuJ3QgZG8gdGhpcyB5ZXQgYmVjYXVzZSBhdHRyaWJ1dGVzIGFyZW4ndCBhbHdheXMgc2V0IHlldC5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHsgc2FtcGxlUmF0ZTogbWF5YmVTYW1wbGVSYXRlLCBzb3VyY2UgfSA9IHR4bi5tZXRhZGF0YTtcbiAgaWYgKG1heWJlU2FtcGxlUmF0ZSAhPSBudWxsKSB7XG4gICAgZHNjLnNhbXBsZV9yYXRlID0gYCR7bWF5YmVTYW1wbGVSYXRlfWA7XG4gIH1cblxuICAvLyBXZSBkb24ndCB3YW50IHRvIGhhdmUgYSB0cmFuc2FjdGlvbiBuYW1lIGluIHRoZSBEU0MgaWYgdGhlIHNvdXJjZSBpcyBcInVybFwiIGJlY2F1c2UgVVJMcyBtaWdodCBjb250YWluIFBJSVxuICBjb25zdCBqc29uU3BhbiA9IHNwYW5Ub0pTT04odHhuKTtcblxuICAvLyBhZnRlciBKU09OIGNvbnZlcnNpb24sIHR4bi5uYW1lIGJlY29tZXMganNvblNwYW4uZGVzY3JpcHRpb25cbiAgaWYgKHNvdXJjZSAmJiBzb3VyY2UgIT09ICd1cmwnKSB7XG4gICAgZHNjLnRyYW5zYWN0aW9uID0ganNvblNwYW4uZGVzY3JpcHRpb247XG4gIH1cblxuICBkc2Muc2FtcGxlZCA9IFN0cmluZyhzcGFuSXNTYW1wbGVkKHR4bikpO1xuXG4gIGNsaWVudC5lbWl0ICYmIGNsaWVudC5lbWl0KCdjcmVhdGVEc2MnLCBkc2MpO1xuXG4gIHJldHVybiBkc2M7XG59XG5cbmV4cG9ydCB7IGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50LCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWR5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/errors.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerErrorInstrumentation: () => (/* binding */ registerErrorInstrumentation)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/globalError.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\");\n\n\n\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addGlobalErrorInstrumentationHandler)(errorCallback);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addGlobalUnhandledRejectionInstrumentationHandler)(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\n\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZ0k7QUFDaEY7QUFDRTs7QUFFbEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFLG1GQUFvQztBQUN0QyxFQUFFLGdHQUFpRDtBQUNuRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtEQUFvQjtBQUNoRDtBQUNBO0FBQ0EsSUFBSSx3REFBVyxJQUFJLGlEQUFNLCtCQUErQixRQUFRO0FBQ2hFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcz9iM2YzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IGdldEFjdGl2ZVRyYW5zYWN0aW9uIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbmxldCBlcnJvcnNJbnN0cnVtZW50ZWQgPSBmYWxzZTtcblxuLyoqXG4gKiBDb25maWd1cmVzIGdsb2JhbCBlcnJvciBsaXN0ZW5lcnNcbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJFcnJvckluc3RydW1lbnRhdGlvbigpIHtcbiAgaWYgKGVycm9yc0luc3RydW1lbnRlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGVycm9yc0luc3RydW1lbnRlZCA9IHRydWU7XG4gIGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlcihlcnJvckNhbGxiYWNrKTtcbiAgYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihlcnJvckNhbGxiYWNrKTtcbn1cblxuLyoqXG4gKiBJZiBhbiBlcnJvciBvciB1bmhhbmRsZWQgcHJvbWlzZSBvY2N1cnMsIHdlIG1hcmsgdGhlIGFjdGl2ZSB0cmFuc2FjdGlvbiBhcyBmYWlsZWRcbiAqL1xuZnVuY3Rpb24gZXJyb3JDYWxsYmFjaygpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IGFjdGl2ZVRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKTtcbiAgaWYgKGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgY29uc3Qgc3RhdHVzID0gJ2ludGVybmFsX2Vycm9yJztcbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKGBbVHJhY2luZ10gVHJhbnNhY3Rpb246ICR7c3RhdHVzfSAtPiBHbG9iYWwgZXJyb3Igb2NjdXJlZGApO1xuICAgIGFjdGl2ZVRyYW5zYWN0aW9uLnNldFN0YXR1cyhzdGF0dXMpO1xuICB9XG59XG5cbi8vIFRoZSBmdW5jdGlvbiBuYW1lIHdpbGwgYmUgbG9zdCB3aGVuIGJ1bmRsaW5nIGJ1dCB3ZSBuZWVkIHRvIGJlIGFibGUgdG8gaWRlbnRpZnkgdGhpcyBsaXN0ZW5lciBsYXRlciB0byBtYWludGFpbiB0aGVcbi8vIG5vZGUuanMgZGVmYXVsdCBleGl0IGJlaGF2aW91clxuZXJyb3JDYWxsYmFjay50YWcgPSAnc2VudHJ5X3RyYWNpbmdFcnJvckNhbGxiYWNrJztcblxuZXhwb3J0IHsgcmVnaXN0ZXJFcnJvckluc3RydW1lbnRhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/hubextensions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTracingExtensions: () => (/* binding */ addTracingExtensions),\n/* harmony export */   startIdleTransaction: () => (/* binding */ startIdleTransaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/errors.js\");\n/* harmony import */ var _idletransaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./idletransaction.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _sampling_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sampling.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/sampling.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\n\n\n\n\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders() {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_0__.spanToTraceHeader)(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n\n  transactionContext,\n  customSamplingContext,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction(transactionContext, this);\n  transaction = (0,_sampling_js__WEBPACK_IMPORTED_MODULE_4__.sampleTransaction)(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n  delayAutoFinishUntilSignal = false,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new _idletransaction_js__WEBPACK_IMPORTED_MODULE_5__.IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = (0,_sampling_js__WEBPACK_IMPORTED_MODULE_4__.sampleTransaction)(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = (0,_hub_js__WEBPACK_IMPORTED_MODULE_6__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  (0,_errors_js__WEBPACK_IMPORTED_MODULE_7__.registerErrorInstrumentation)();\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/idletransaction.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/idletransaction.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdleTransaction: () => (/* binding */ IdleTransaction),\n/* harmony export */   IdleTransactionSpanRecorder: () => (/* binding */ IdleTransactionSpanRecorder),\n/* harmony export */   TRACING_DEFAULTS: () => (/* binding */ TRACING_DEFAULTS)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\n\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if ((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction {\n  // Activities store a list of active spans\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n\n  // We should not use heartbeat if we finished a transaction\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n   constructor(\n    transactionContext,\n    // eslint-disable-next-line deprecation/deprecation\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   end(endTimestamp) {\n    const endTimestampInS = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanTimeInputToSeconds)(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!(0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n   setFinishReason(reason) {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n   sendAutoFinishSignal() {\n    if (!this._autoFinishAllowed) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n\n//# sourceMappingURL=idletransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/idletransaction.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/measurement.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/measurement.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setMeasurement: () => (/* binding */ setMeasurement)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\");\n\n\n/**\n * Adds a measurement to the current active transaction.\n */\nfunction setMeasurement(name, value, unit) {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getActiveTransaction)();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n\n\n//# sourceMappingURL=measurement.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL21lYXN1cmVtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9tZWFzdXJlbWVudC5qcz85ZmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEFjdGl2ZVRyYW5zYWN0aW9uIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogQWRkcyBhIG1lYXN1cmVtZW50IHRvIHRoZSBjdXJyZW50IGFjdGl2ZSB0cmFuc2FjdGlvbi5cbiAqL1xuZnVuY3Rpb24gc2V0TWVhc3VyZW1lbnQobmFtZSwgdmFsdWUsIHVuaXQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKTtcbiAgaWYgKHRyYW5zYWN0aW9uKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgdHJhbnNhY3Rpb24uc2V0TWVhc3VyZW1lbnQobmFtZSwgdmFsdWUsIHVuaXQpO1xuICB9XG59XG5cbmV4cG9ydCB7IHNldE1lYXN1cmVtZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZWFzdXJlbWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/measurement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/sampling.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/sampling.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidSampleRate: () => (/* binding */ isValidSampleRate),\n/* harmony export */   sampleTransaction: () => (/* binding */ sampleTransaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../semanticAttributes.js */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] starting ${transaction.op} transaction - ${(0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isNaN)(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceMappingURL=sampling.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/sampling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/span.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/span.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Span: () => (/* binding */ Span),\n/* harmony export */   SpanRecorder: () => (/* binding */ SpanRecorder)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../metrics/metric-summary.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../semanticAttributes.js */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getRootSpan.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _spanstatus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./spanstatus.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n\n\n\n\n\n\n\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n    this._spanId = spanContext.spanId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);\n    this._startTime = spanContext.startTimestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime !== undefined) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set name(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get description() {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set description(description) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n   get traceId() {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n   set traceId(traceId) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n   get spanId() {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n   set spanId(spanId) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n   set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n   get parentSpanId() {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n   get sampled() {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n   set sampled(sampled) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n   get attributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n   set attributes(attributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get startTimestamp() {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n   set startTimestamp(startTime) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get endTimestamp() {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n   set endTimestamp(endTime) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n   get status() {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n   set status(status) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n   get op() {\n    return this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP] ;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n   set op(op) {\n    this.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n   get origin() {\n    return this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n   set origin(origin) {\n    this.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.TRACE_FLAG_SAMPLED : _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan ;\n\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n   setTag(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setData(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n   setHttpStatus(httpStatus) {\n    (0,_spanstatus_js__WEBPACK_IMPORTED_MODULE_7__.setHttpStatus)(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n   setName(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n   isSuccess() {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n   finish(endTimestamp) {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(this);\n    if (\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanTimeInputToSeconds)(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   toTraceparent() {\n    return (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToTraceHeader)(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n   toContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dropUndefinedKeys)({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n   updateWithContext(spanContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n   getTraceContext() {\n    return (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToTraceContext)(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dropUndefinedKeys)({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP] ,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_9__.getMetricSummaryJsonForSpan)(this),\n      profile_id: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n   toJSON() {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n   _getData()\n\n {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n\n\n//# sourceMappingURL=span.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/span.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/spanstatus.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanStatus: () => (/* binding */ SpanStatus),\n/* harmony export */   getSpanStatusFromHttpCode: () => (/* binding */ getSpanStatusFromHttpCode),\n/* harmony export */   setHttpStatus: () => (/* binding */ setHttpStatus),\n/* harmony export */   spanStatusfromHttpCode: () => (/* binding */ spanStatusfromHttpCode)\n/* harmony export */ });\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nvar SpanStatus; (function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok'; SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded'; SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated'; SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied'; SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found'; SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted'; SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument'; SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented'; SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable'; SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error'; SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error'; SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled'; SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists'; SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition'; SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted'; SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range'; SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss'; SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nconst spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\n\n//# sourceMappingURL=spanstatus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/trace.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   continueTrace: () => (/* binding */ continueTrace),\n/* harmony export */   getActiveSpan: () => (/* binding */ getActiveSpan),\n/* harmony export */   getCapturedScopesOnSpan: () => (/* binding */ getCapturedScopesOnSpan),\n/* harmony export */   startActiveSpan: () => (/* binding */ startActiveSpan),\n/* harmony export */   startInactiveSpan: () => (/* binding */ startInactiveSpan),\n/* harmony export */   startSpan: () => (/* binding */ startSpan),\n/* harmony export */   startSpanManual: () => (/* binding */ startSpanManual),\n/* harmony export */   trace: () => (/* binding */ trace)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/handleCallbackErrors.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish = () => {},\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_2__.handleCallbackErrors)(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const spanContext = normalizeContext(context);\n\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n    return (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.withScope)(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_2__.handleCallbackErrors)(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const spanContext = normalizeContext(context);\n\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n    return (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.withScope)(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan() {\n        activeSpan && activeSpan.end();\n      }\n\n      return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_2__.handleCallbackErrors)(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_4__.hasTracingEnabled)()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope ).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)().getSpan();\n}\n\nconst continueTrace = (\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.tracingContextFromHeaders)(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && traceparentData) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dropUndefinedKeys)({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }\n\n,\n) {\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_4__.hasTracingEnabled)()) {\n    return undefined;\n  }\n\n  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanIsSampled)(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context) {\n  if (context.startTime) {\n    const ctx = { ...context };\n    ctx.startTimestamp = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanTimeInputToSeconds)(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.addNonEnumerableProperty)(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.addNonEnumerableProperty)(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\n\n//# sourceMappingURL=trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/transaction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/transaction.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../metrics/metric-summary.js */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../semanticAttributes.js */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _trace_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./trace.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n\n\n\n\n\n\n\n\n\n\n/** JSDoc */\nclass Transaction extends _span_js__WEBPACK_IMPORTED_MODULE_0__.Span  {\n  /**\n   * The reference to the current hub.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n   set name(newName) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   get metadata() {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ,\n      }),\n      ...(this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ,\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   set metadata(metadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n   setMetadata(newMetadata) {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   end(endTimestamp) {\n    const timestampInS = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanTimeInputToSeconds)(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n   getDynamicSamplingContext() {\n    return (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_5__.getDynamicSamplingContextFromSpan)(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n   getProfileId() {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id ;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).timestamp).filter(Boolean) ;\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = (0,_trace_js__WEBPACK_IMPORTED_MODULE_8__.getCapturedScopesOnSpan)(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToTraceContext)(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n          dynamicSamplingContext: (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_5__.getDynamicSamplingContextFromSpan)(this),\n        }),\n      },\n      _metrics_summary: (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_9__.getMetricSummaryJsonForSpan)(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n\n\n//# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTBEO0FBQ1Y7QUFDTjtBQUNpQztBQUN3QztBQUNwQjtBQUNmO0FBQ2pDO0FBQ007O0FBRXJEO0FBQ0EsMEJBQTBCLDBDQUFJO0FBQzlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLHNEQUFhOztBQUVwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QjtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLG9GQUFnQztBQUMzRCxpQ0FBaUMsb0ZBQWdDO0FBQ2pFLE9BQU87QUFDUCwyQkFBMkIseUZBQXFDO0FBQ2hFLHFDQUFxQyx5RkFBcUM7QUFDMUUsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0ZBQWdDO0FBQ3REOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrREFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyRUFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFdBQVcsZ0VBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZGQUFpQztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sd0RBQVcsSUFBSSxpREFBTTtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSx3REFBVyxJQUFJLGlEQUFNOztBQUUzQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsK0RBQVU7QUFDMUU7O0FBRUE7QUFDQSxpREFBaUQsK0RBQVU7QUFDM0Q7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQSxZQUFZLHVFQUF1RSxFQUFFLGtFQUF1Qjs7QUFFNUc7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQSxZQUFZLFNBQVM7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1RUFBa0I7QUFDakMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQWlCO0FBQzVCLGtDQUFrQyw2RkFBaUM7QUFDbkUsU0FBUztBQUNULE9BQU87QUFDUCx3QkFBd0IsdUZBQTJCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7O0FBRUE7O0FBRUE7QUFDQSxNQUFNLHdEQUFXO0FBQ2pCLFFBQVEsaURBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSx3REFBVyxJQUFJLGlEQUFNLDRCQUE0QixTQUFTLGVBQWUsV0FBVzs7QUFFeEY7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy90cmFuc2FjdGlvbi5qcz8yZTE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyb3BVbmRlZmluZWRLZXlzLCBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudEh1YiB9IGZyb20gJy4uL2h1Yi5qcyc7XG5pbXBvcnQgeyBnZXRNZXRyaWNTdW1tYXJ5SnNvbkZvclNwYW4gfSBmcm9tICcuLi9tZXRyaWNzL21ldHJpYy1zdW1tYXJ5LmpzJztcbmltcG9ydCB7IFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFIH0gZnJvbSAnLi4vc2VtYW50aWNBdHRyaWJ1dGVzLmpzJztcbmltcG9ydCB7IHNwYW5UaW1lSW5wdXRUb1NlY29uZHMsIHNwYW5Ub0pTT04sIHNwYW5Ub1RyYWNlQ29udGV4dCB9IGZyb20gJy4uL3V0aWxzL3NwYW5VdGlscy5qcyc7XG5pbXBvcnQgeyBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4gfSBmcm9tICcuL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMnO1xuaW1wb3J0IHsgU3BhbiwgU3BhblJlY29yZGVyIH0gZnJvbSAnLi9zcGFuLmpzJztcbmltcG9ydCB7IGdldENhcHR1cmVkU2NvcGVzT25TcGFuIH0gZnJvbSAnLi90cmFjZS5qcyc7XG5cbi8qKiBKU0RvYyAqL1xuY2xhc3MgVHJhbnNhY3Rpb24gZXh0ZW5kcyBTcGFuICB7XG4gIC8qKlxuICAgKiBUaGUgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGh1Yi5cbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuXG4gIC8vIERPIE5PVCB5ZXQgcmVtb3ZlIHRoaXMgcHJvcGVydHksIGl0IGlzIHVzZWQgaW4gYSBoYWNrIGZvciB2NyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS5cblxuICAvKipcbiAgICogVGhpcyBjb25zdHJ1Y3RvciBzaG91bGQgbmV2ZXIgYmUgY2FsbGVkIG1hbnVhbGx5LiBUaG9zZSBpbnN0cnVtZW50aW5nIHRyYWNpbmcgc2hvdWxkIHVzZVxuICAgKiBgU2VudHJ5LnN0YXJ0VHJhbnNhY3Rpb24oKWAsIGFuZCBpbnRlcm5hbCBtZXRob2RzIHNob3VsZCB1c2UgYGh1Yi5zdGFydFRyYW5zYWN0aW9uKClgLlxuICAgKiBAaW50ZXJuYWxcbiAgICogQGhpZGVjb25zdHJ1Y3RvclxuICAgKiBAaGlkZGVuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFRyYW5zYWN0aW9ucyB3aWxsIGJlIHJlbW92ZWQgaW4gdjguIFVzZSBzcGFucyBpbnN0ZWFkLlxuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICBjb25zdHJ1Y3Rvcih0cmFuc2FjdGlvbkNvbnRleHQsIGh1Yikge1xuICAgIHN1cGVyKHRyYW5zYWN0aW9uQ29udGV4dCk7XG4gICAgdGhpcy5fY29udGV4dHMgPSB7fTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIHRoaXMuX2h1YiA9IGh1YiB8fCBnZXRDdXJyZW50SHViKCk7XG5cbiAgICB0aGlzLl9uYW1lID0gdHJhbnNhY3Rpb25Db250ZXh0Lm5hbWUgfHwgJyc7XG5cbiAgICB0aGlzLl9tZXRhZGF0YSA9IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgLi4udHJhbnNhY3Rpb25Db250ZXh0Lm1ldGFkYXRhLFxuICAgIH07XG5cbiAgICB0aGlzLl90cmltRW5kID0gdHJhbnNhY3Rpb25Db250ZXh0LnRyaW1FbmQ7XG5cbiAgICAvLyB0aGlzIGlzIGJlY2F1c2UgdHJhbnNhY3Rpb25zIGFyZSBhbHNvIHNwYW5zLCBhbmQgc3BhbnMgaGF2ZSBhIHRyYW5zYWN0aW9uIHBvaW50ZXJcbiAgICAvLyBUT0RPICh2OCk6IFJlcGxhY2UgdGhpcyB3aXRoIGFub3RoZXIgd2F5IHRvIHNldCB0aGUgcm9vdCBzcGFuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgdGhpcy50cmFuc2FjdGlvbiA9IHRoaXM7XG5cbiAgICAvLyBJZiBEeW5hbWljIFNhbXBsaW5nIENvbnRleHQgaXMgcHJvdmlkZWQgZHVyaW5nIHRoZSBjcmVhdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24sIHdlIGZyZWV6ZSBpdCBhcyBpdCB1c3VhbGx5IG1lYW5zXG4gICAgLy8gdGhlcmUgaXMgaW5jb21pbmcgRHluYW1pYyBTYW1wbGluZyBDb250ZXh0LiAoRWl0aGVyIHRocm91Z2ggYW4gaW5jb21pbmcgcmVxdWVzdCwgYSBiYWdnYWdlIG1ldGEtdGFnLCBvciBvdGhlciBtZWFucylcbiAgICBjb25zdCBpbmNvbWluZ0R5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSB0aGlzLl9tZXRhZGF0YS5keW5hbWljU2FtcGxpbmdDb250ZXh0O1xuICAgIGlmIChpbmNvbWluZ0R5bmFtaWNTYW1wbGluZ0NvbnRleHQpIHtcbiAgICAgIC8vIFdlIHNoYWxsb3cgY29weSB0aGlzIGluIGNhc2UgYW55dGhpbmcgd3JpdGVzIHRvIHRoZSBvcmlnaW5hbCByZWZlcmVuY2Ugb2YgdGhlIHBhc3NlZCBpbiBgZHluYW1pY1NhbXBsaW5nQ29udGV4dGBcbiAgICAgIHRoaXMuX2Zyb3plbkR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSB7IC4uLmluY29taW5nRHluYW1pY1NhbXBsaW5nQ29udGV4dCB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIFRoaXMgc2FkbHkgY29uZmxpY3RzIHdpdGggdGhlIGdldHRlci9zZXR0ZXIgb3JkZXJpbmcgOihcbiAgLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L21lbWJlci1vcmRlcmluZyAqL1xuXG4gIC8qKlxuICAgKiBHZXR0ZXIgZm9yIGBuYW1lYCBwcm9wZXJ0eS5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBzcGFuVG9KU09OKHNwYW4pLmRlc2NyaXB0aW9uYCBpbnN0ZWFkLlxuICAgKi9cbiAgIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHRlciBmb3IgYG5hbWVgIHByb3BlcnR5LCB3aGljaCBhbHNvIHNldHMgYHNvdXJjZWAgYXMgY3VzdG9tLlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHVwZGF0ZU5hbWUoKWAgYW5kIGBzZXRNZXRhZGF0YSgpYCBpbnN0ZWFkLlxuICAgKi9cbiAgIHNldCBuYW1lKG5ld05hbWUpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICB0aGlzLnNldE5hbWUobmV3TmFtZSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBtZXRhZGF0YSBmb3IgdGhpcyB0cmFuc2FjdGlvbi5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBzcGFuR2V0TWV0YWRhdGEodHJhbnNhY3Rpb24pYCBpbnN0ZWFkLlxuICAgKi9cbiAgIGdldCBtZXRhZGF0YSgpIHtcbiAgICAvLyBXZSBtZXJnZSBhdHRyaWJ1dGVzIGluIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgIHJldHVybiB7XG4gICAgICAvLyBEZWZhdWx0c1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgICBzb3VyY2U6ICdjdXN0b20nLFxuICAgICAgc3Bhbk1ldGFkYXRhOiB7fSxcblxuICAgICAgLy8gTGVnYWN5IG1ldGFkYXRhXG4gICAgICAuLi50aGlzLl9tZXRhZGF0YSxcblxuICAgICAgLy8gRnJvbSBhdHRyaWJ1dGVzXG4gICAgICAuLi4odGhpcy5fYXR0cmlidXRlc1tTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRV0gJiYge1xuICAgICAgICBzb3VyY2U6IHRoaXMuX2F0dHJpYnV0ZXNbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0VdICxcbiAgICAgIH0pLFxuICAgICAgLi4uKHRoaXMuX2F0dHJpYnV0ZXNbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TQU1QTEVfUkFURV0gJiYge1xuICAgICAgICBzYW1wbGVSYXRlOiB0aGlzLl9hdHRyaWJ1dGVzW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU0FNUExFX1JBVEVdICxcbiAgICAgIH0pLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlIHRoZSBtZXRhZGF0YSBmb3IgdGhpcyB0cmFuc2FjdGlvbi5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBzcGFuR2V0TWV0YWRhdGEodHJhbnNhY3Rpb24pYCBpbnN0ZWFkLlxuICAgKi9cbiAgIHNldCBtZXRhZGF0YShtZXRhZGF0YSkge1xuICAgIHRoaXMuX21ldGFkYXRhID0gbWV0YWRhdGE7XG4gIH1cblxuICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9tZW1iZXItb3JkZXJpbmcgKi9cblxuICAvKipcbiAgICogU2V0dGVyIGZvciBgbmFtZWAgcHJvcGVydHksIHdoaWNoIGFsc28gc2V0cyBgc291cmNlYCBvbiB0aGUgbWV0YWRhdGEuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgLnVwZGF0ZU5hbWUoKWAgYW5kIGAuc2V0QXR0cmlidXRlKClgIGluc3RlYWQuXG4gICAqL1xuICAgc2V0TmFtZShuYW1lLCBzb3VyY2UgPSAnY3VzdG9tJykge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBzb3VyY2UpO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICB1cGRhdGVOYW1lKG5hbWUpIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBBdHRhY2hlcyBTcGFuUmVjb3JkZXIgdG8gdGhlIHNwYW4gaXRzZWxmXG4gICAqIEBwYXJhbSBtYXhsZW4gbWF4aW11bSBudW1iZXIgb2Ygc3BhbnMgdGhhdCBjYW4gYmUgcmVjb3JkZWRcbiAgICovXG4gICBpbml0U3BhblJlY29yZGVyKG1heGxlbiA9IDEwMDApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICBpZiAoIXRoaXMuc3BhblJlY29yZGVyKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgIHRoaXMuc3BhblJlY29yZGVyID0gbmV3IFNwYW5SZWNvcmRlcihtYXhsZW4pO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICB0aGlzLnNwYW5SZWNvcmRlci5hZGQodGhpcyk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBjb250ZXh0IG9mIGEgdHJhbnNhY3Rpb24gZXZlbnQuXG4gICAqIEBkZXByZWNhdGVkIFVzZSBlaXRoZXIgYC5zZXRBdHRyaWJ1dGUoKWAsIG9yIHNldCB0aGUgY29udGV4dCBvbiB0aGUgc2NvcGUgYmVmb3JlIGNyZWF0aW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAgICovXG4gICBzZXRDb250ZXh0KGtleSwgY29udGV4dCkge1xuICAgIGlmIChjb250ZXh0ID09PSBudWxsKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlXG4gICAgICBkZWxldGUgdGhpcy5fY29udGV4dHNba2V5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY29udGV4dHNba2V5XSA9IGNvbnRleHQ7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSB0b3AtbGV2ZWwgYHNldE1lYXN1cmVtZW50KClgIGluc3RlYWQuXG4gICAqL1xuICAgc2V0TWVhc3VyZW1lbnQobmFtZSwgdmFsdWUsIHVuaXQgPSAnJykge1xuICAgIHRoaXMuX21lYXN1cmVtZW50c1tuYW1lXSA9IHsgdmFsdWUsIHVuaXQgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9yZSBtZXRhZGF0YSBvbiB0aGlzIHRyYW5zYWN0aW9uLlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYXR0cmlidXRlcyBvciBzdG9yZSBkYXRhIG9uIHRoZSBzY29wZSBpbnN0ZWFkLlxuICAgKi9cbiAgIHNldE1ldGFkYXRhKG5ld01ldGFkYXRhKSB7XG4gICAgdGhpcy5fbWV0YWRhdGEgPSB7IC4uLnRoaXMuX21ldGFkYXRhLCAuLi5uZXdNZXRhZGF0YSB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgZW5kKGVuZFRpbWVzdGFtcCkge1xuICAgIGNvbnN0IHRpbWVzdGFtcEluUyA9IHNwYW5UaW1lSW5wdXRUb1NlY29uZHMoZW5kVGltZXN0YW1wKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHRoaXMuX2ZpbmlzaFRyYW5zYWN0aW9uKHRpbWVzdGFtcEluUyk7XG4gICAgaWYgKCF0cmFuc2FjdGlvbikge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgcmV0dXJuIHRoaXMuX2h1Yi5jYXB0dXJlRXZlbnQodHJhbnNhY3Rpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgdG9Db250ZXh0KCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIGNvbnN0IHNwYW5Db250ZXh0ID0gc3VwZXIudG9Db250ZXh0KCk7XG5cbiAgICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgICAgLi4uc3BhbkNvbnRleHQsXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLFxuICAgICAgdHJpbUVuZDogdGhpcy5fdHJpbUVuZCxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHVwZGF0ZVdpdGhDb250ZXh0KHRyYW5zYWN0aW9uQ29udGV4dCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIHN1cGVyLnVwZGF0ZVdpdGhDb250ZXh0KHRyYW5zYWN0aW9uQ29udGV4dCk7XG5cbiAgICB0aGlzLl9uYW1lID0gdHJhbnNhY3Rpb25Db250ZXh0Lm5hbWUgfHwgJyc7XG4gICAgdGhpcy5fdHJpbUVuZCA9IHRyYW5zYWN0aW9uQ29udGV4dC50cmltRW5kO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXRkb2NcbiAgICpcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgdG9wLWxldmVsIGBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW5gIGluc3RlYWQuXG4gICAqL1xuICAgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dCgpIHtcbiAgICByZXR1cm4gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHRoaXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIHRoZSBjdXJyZW50IGh1YiB3aXRoIGEgbmV3IG9uZS5cbiAgICogVXNlZCBpZiB5b3Ugd2FudCBhbm90aGVyIGh1YiB0byBmaW5pc2ggdGhlIHRyYW5zYWN0aW9uLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgc2V0SHViKGh1Yikge1xuICAgIHRoaXMuX2h1YiA9IGh1YjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHByb2ZpbGUgaWQgb2YgdGhlIHRyYW5zYWN0aW9uLlxuICAgKi9cbiAgIGdldFByb2ZpbGVJZCgpIHtcbiAgICBpZiAodGhpcy5fY29udGV4dHMgIT09IHVuZGVmaW5lZCAmJiB0aGlzLl9jb250ZXh0c1sncHJvZmlsZSddICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLl9jb250ZXh0c1sncHJvZmlsZSddLnByb2ZpbGVfaWQgO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEZpbmlzaCB0aGUgdHJhbnNhY3Rpb24gJiBwcmVwYXJlIHRoZSBldmVudCB0byBzZW5kIHRvIFNlbnRyeS5cbiAgICovXG4gICBfZmluaXNoVHJhbnNhY3Rpb24oZW5kVGltZXN0YW1wKSB7XG4gICAgLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBhbHJlYWR5IGZpbmlzaGVkLCBzbyB3ZSBzaG91bGQgbm90IGZsdXNoIGl0IGFnYWluLlxuICAgIGlmICh0aGlzLl9lbmRUaW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLl9uYW1lKSB7XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybignVHJhbnNhY3Rpb24gaGFzIG5vIG5hbWUsIGZhbGxpbmcgYmFjayB0byBgPHVubGFiZWxlZCB0cmFuc2FjdGlvbj5gLicpO1xuICAgICAgdGhpcy5fbmFtZSA9ICc8dW5sYWJlbGVkIHRyYW5zYWN0aW9uPic7XG4gICAgfVxuXG4gICAgLy8ganVzdCBzZXRzIHRoZSBlbmQgdGltZXN0YW1wXG4gICAgc3VwZXIuZW5kKGVuZFRpbWVzdGFtcCk7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICBjb25zdCBjbGllbnQgPSB0aGlzLl9odWIuZ2V0Q2xpZW50KCk7XG4gICAgaWYgKGNsaWVudCAmJiBjbGllbnQuZW1pdCkge1xuICAgICAgY2xpZW50LmVtaXQoJ2ZpbmlzaFRyYW5zYWN0aW9uJywgdGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3NhbXBsZWQgIT09IHRydWUpIHtcbiAgICAgIC8vIEF0IHRoaXMgcG9pbnQgaWYgYHNhbXBsZWQgIT09IHRydWVgIHdlIHdhbnQgdG8gZGlzY2FyZCB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKCdbVHJhY2luZ10gRGlzY2FyZGluZyB0cmFuc2FjdGlvbiBiZWNhdXNlIGl0cyB0cmFjZSB3YXMgbm90IGNob3NlbiB0byBiZSBzYW1wbGVkLicpO1xuXG4gICAgICBpZiAoY2xpZW50KSB7XG4gICAgICAgIGNsaWVudC5yZWNvcmREcm9wcGVkRXZlbnQoJ3NhbXBsZV9yYXRlJywgJ3RyYW5zYWN0aW9uJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgY29uc3QgZmluaXNoZWRTcGFucyA9IHRoaXMuc3BhblJlY29yZGVyXG4gICAgICA/IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgICB0aGlzLnNwYW5SZWNvcmRlci5zcGFucy5maWx0ZXIoc3BhbiA9PiBzcGFuICE9PSB0aGlzICYmIHNwYW5Ub0pTT04oc3BhbikudGltZXN0YW1wKVxuICAgICAgOiBbXTtcblxuICAgIGlmICh0aGlzLl90cmltRW5kICYmIGZpbmlzaGVkU3BhbnMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgZW5kVGltZXMgPSBmaW5pc2hlZFNwYW5zLm1hcChzcGFuID0+IHNwYW5Ub0pTT04oc3BhbikudGltZXN0YW1wKS5maWx0ZXIoQm9vbGVhbikgO1xuICAgICAgdGhpcy5fZW5kVGltZSA9IGVuZFRpbWVzLnJlZHVjZSgocHJldiwgY3VycmVudCkgPT4ge1xuICAgICAgICByZXR1cm4gcHJldiA+IGN1cnJlbnQgPyBwcmV2IDogY3VycmVudDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHsgc2NvcGU6IGNhcHR1cmVkU3BhblNjb3BlLCBpc29sYXRpb25TY29wZTogY2FwdHVyZWRTcGFuSXNvbGF0aW9uU2NvcGUgfSA9IGdldENhcHR1cmVkU2NvcGVzT25TcGFuKHRoaXMpO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgY29uc3QgeyBtZXRhZGF0YSB9ID0gdGhpcztcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICBjb25zdCB7IHNvdXJjZSB9ID0gbWV0YWRhdGE7XG5cbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHtcbiAgICAgIGNvbnRleHRzOiB7XG4gICAgICAgIC4uLnRoaXMuX2NvbnRleHRzLFxuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIG92ZXJyaWRlIHRyYWNlIGNvbnRleHRcbiAgICAgICAgdHJhY2U6IHNwYW5Ub1RyYWNlQ29udGV4dCh0aGlzKSxcbiAgICAgIH0sXG4gICAgICAvLyBUT0RPOiBQYXNzIHNwYW5zIHNlcmlhbGl6ZWQgdmlhIGBzcGFuVG9KU09OKClgIGhlcmUgaW5zdGVhZCBpbiB2OC5cbiAgICAgIHNwYW5zOiBmaW5pc2hlZFNwYW5zLFxuICAgICAgc3RhcnRfdGltZXN0YW1wOiB0aGlzLl9zdGFydFRpbWUsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgIHRhZ3M6IHRoaXMudGFncyxcbiAgICAgIHRpbWVzdGFtcDogdGhpcy5fZW5kVGltZSxcbiAgICAgIHRyYW5zYWN0aW9uOiB0aGlzLl9uYW1lLFxuICAgICAgdHlwZTogJ3RyYW5zYWN0aW9uJyxcbiAgICAgIHNka1Byb2Nlc3NpbmdNZXRhZGF0YToge1xuICAgICAgICAuLi5tZXRhZGF0YSxcbiAgICAgICAgY2FwdHVyZWRTcGFuU2NvcGUsXG4gICAgICAgIGNhcHR1cmVkU3Bhbklzb2xhdGlvblNjb3BlLFxuICAgICAgICAuLi5kcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgICAgICAgZHluYW1pY1NhbXBsaW5nQ29udGV4dDogZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHRoaXMpLFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICBfbWV0cmljc19zdW1tYXJ5OiBnZXRNZXRyaWNTdW1tYXJ5SnNvbkZvclNwYW4odGhpcyksXG4gICAgICAuLi4oc291cmNlICYmIHtcbiAgICAgICAgdHJhbnNhY3Rpb25faW5mbzoge1xuICAgICAgICAgIHNvdXJjZSxcbiAgICAgICAgfSxcbiAgICAgIH0pLFxuICAgIH07XG5cbiAgICBjb25zdCBoYXNNZWFzdXJlbWVudHMgPSBPYmplY3Qua2V5cyh0aGlzLl9tZWFzdXJlbWVudHMpLmxlbmd0aCA+IDA7XG5cbiAgICBpZiAoaGFzTWVhc3VyZW1lbnRzKSB7XG4gICAgICBERUJVR19CVUlMRCAmJlxuICAgICAgICBsb2dnZXIubG9nKFxuICAgICAgICAgICdbTWVhc3VyZW1lbnRzXSBBZGRpbmcgbWVhc3VyZW1lbnRzIHRvIHRyYW5zYWN0aW9uJyxcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeSh0aGlzLl9tZWFzdXJlbWVudHMsIHVuZGVmaW5lZCwgMiksXG4gICAgICAgICk7XG4gICAgICB0cmFuc2FjdGlvbi5tZWFzdXJlbWVudHMgPSB0aGlzLl9tZWFzdXJlbWVudHM7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZyhgW1RyYWNpbmddIEZpbmlzaGluZyAke3RoaXMub3B9IHRyYW5zYWN0aW9uOiAke3RoaXMuX25hbWV9LmApO1xuXG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG59XG5cbmV4cG9ydCB7IFRyYW5zYWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/transaction.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   getActiveTransaction: () => (/* binding */ getActiveTransaction),\n/* harmony export */   stripUrlQueryAndFragment: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getActiveTransaction(maybeHub) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() ;\n}\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nconst extractTraceparentData = _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.extractTraceparentData;\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtRjtBQUMxQjtBQUNmOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHNEQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlFQUF3Qjs7QUFFQztBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy91dGlscy5qcz8zZTIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dHJhY3RUcmFjZXBhcmVudERhdGEgYXMgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSQxIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5leHBvcnQgeyBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuLi9odWIuanMnO1xuXG4vKipcbiAqIEdyYWJzIGFjdGl2ZSB0cmFuc2FjdGlvbiBvZmYgc2NvcGUuXG4gKlxuICogQGRlcHJlY2F0ZWQgWW91IHNob3VsZCBub3QgcmVseSBvbiB0aGUgdHJhbnNhY3Rpb24sIGJ1dCBqdXN0IHVzZSBgc3RhcnRTcGFuKClgIEFQSXMgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5mdW5jdGlvbiBnZXRBY3RpdmVUcmFuc2FjdGlvbihtYXliZUh1Yikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgY29uc3QgaHViID0gbWF5YmVIdWIgfHwgZ2V0Q3VycmVudEh1YigpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgY29uc3Qgc2NvcGUgPSBodWIuZ2V0U2NvcGUoKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIHJldHVybiBzY29wZS5nZXRUcmFuc2FjdGlvbigpIDtcbn1cblxuLyoqXG4gKiBUaGUgYGV4dHJhY3RUcmFjZXBhcmVudERhdGFgIGZ1bmN0aW9uIGFuZCBgVFJBQ0VQQVJFTlRfUkVHRVhQYCBjb25zdGFudCB1c2VkXG4gKiB0byBiZSBkZWNsYXJlZCBpbiB0aGlzIGZpbGUuIEl0IHdhcyBsYXRlciBtb3ZlZCBpbnRvIGBAc2VudHJ5L3V0aWxzYCBhcyBwYXJ0IG9mIGFcbiAqIG1vdmUgdG8gcmVtb3ZlIGBAc2VudHJ5L3RyYWNpbmdgIGRlcGVuZGVuY2llcyBmcm9tIGBAc2VudHJ5L25vZGVgIChgZXh0cmFjdFRyYWNlcGFyZW50RGF0YWBcbiAqIGlzIHRoZSBvbmx5IHRyYWNpbmcgZnVuY3Rpb24gdXNlZCBieSBgQHNlbnRyeS9ub2RlYCkuXG4gKlxuICogVGhlc2UgZXhwb3J0cyBhcmUga2VwdCBoZXJlIGZvciBiYWNrd2FyZHMgY29tcGF0YWJpbGl0eSdzIHNha2UuXG4gKlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzQ2NDIgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBAZGVwcmVjYXRlZCBJbXBvcnQgdGhpcyBmdW5jdGlvbiBmcm9tIGBAc2VudHJ5L3V0aWxzYCBpbnN0ZWFkXG4gKi9cbmNvbnN0IGV4dHJhY3RUcmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhJDE7XG5cbmV4cG9ydCB7IGV4dHJhY3RUcmFjZXBhcmVudERhdGEsIGdldEFjdGl2ZVRyYW5zYWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/transports/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_TRANSPORT_BUFFER_SIZE: () => (/* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE),\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/promisebuffer.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(envelope, (item, type) => {\n      const dataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type);\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isRateLimited)(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.serializeEnvelope)(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.updateRateLimits)(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.SentryError) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\n\n//# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXFOO0FBQ3JLOztBQUVoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLGtFQUFtQjtBQUN2QiwyQkFBMkIsNkVBQThCO0FBQ3pELFVBQVUsNERBQWE7QUFDdkI7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsYUFBYSxrRUFBbUI7QUFDaEM7O0FBRUE7QUFDQSw2QkFBNkIsNkRBQWM7O0FBRTNDO0FBQ0E7QUFDQSxNQUFNLGtFQUFtQjtBQUN6QjtBQUNBLDJDQUEyQyw2RUFBOEI7QUFDekUsT0FBTztBQUNQOztBQUVBO0FBQ0Esb0JBQW9CLE1BQU0sZ0VBQWlCLHlDQUF5QztBQUNwRjtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFXLElBQUksaURBQU0sMkNBQTJDLHFCQUFxQjtBQUNqRzs7QUFFQSx1QkFBdUIsK0RBQWdCO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQVc7QUFDeEMsVUFBVSx3REFBVyxJQUFJLGlEQUFNO0FBQy9CO0FBQ0EsaUJBQWlCLGtFQUFtQjtBQUNwQyxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanM/ODJjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlUHJvbWlzZUJ1ZmZlciwgZm9yRWFjaEVudmVsb3BlSXRlbSwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5LCBpc1JhdGVMaW1pdGVkLCByZXNvbHZlZFN5bmNQcm9taXNlLCBjcmVhdGVFbnZlbG9wZSwgU2VudHJ5RXJyb3IsIGxvZ2dlciwgc2VyaWFsaXplRW52ZWxvcGUsIHVwZGF0ZVJhdGVMaW1pdHMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuXG5jb25zdCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSA9IDMwO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBTZW50cnkgYFRyYW5zcG9ydGBcbiAqXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHBhcmFtIG1ha2VSZXF1ZXN0XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zcG9ydChcbiAgb3B0aW9ucyxcbiAgbWFrZVJlcXVlc3QsXG4gIGJ1ZmZlciA9IG1ha2VQcm9taXNlQnVmZmVyKFxuICAgIG9wdGlvbnMuYnVmZmVyU2l6ZSB8fCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSxcbiAgKSxcbikge1xuICBsZXQgcmF0ZUxpbWl0cyA9IHt9O1xuICBjb25zdCBmbHVzaCA9ICh0aW1lb3V0KSA9PiBidWZmZXIuZHJhaW4odGltZW91dCk7XG5cbiAgZnVuY3Rpb24gc2VuZChlbnZlbG9wZSkge1xuICAgIGNvbnN0IGZpbHRlcmVkRW52ZWxvcGVJdGVtcyA9IFtdO1xuXG4gICAgLy8gRHJvcCByYXRlIGxpbWl0ZWQgaXRlbXMgZnJvbSBlbnZlbG9wZVxuICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICBjb25zdCBkYXRhQ2F0ZWdvcnkgPSBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnkodHlwZSk7XG4gICAgICBpZiAoaXNSYXRlTGltaXRlZChyYXRlTGltaXRzLCBkYXRhQ2F0ZWdvcnkpKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSk7XG4gICAgICAgIG9wdGlvbnMucmVjb3JkRHJvcHBlZEV2ZW50KCdyYXRlbGltaXRfYmFja29mZicsIGRhdGFDYXRlZ29yeSwgZXZlbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zLnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBTa2lwIHNlbmRpbmcgaWYgZW52ZWxvcGUgaXMgZW1wdHkgYWZ0ZXIgZmlsdGVyaW5nIG91dCByYXRlIGxpbWl0ZWQgZXZlbnRzXG4gICAgaWYgKGZpbHRlcmVkRW52ZWxvcGVJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKCk7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdCBmaWx0ZXJlZEVudmVsb3BlID0gY3JlYXRlRW52ZWxvcGUoZW52ZWxvcGVbMF0sIGZpbHRlcmVkRW52ZWxvcGVJdGVtcyApO1xuXG4gICAgLy8gQ3JlYXRlcyBjbGllbnQgcmVwb3J0IGZvciBlYWNoIGl0ZW0gaW4gYW4gZW52ZWxvcGVcbiAgICBjb25zdCByZWNvcmRFbnZlbG9wZUxvc3MgPSAocmVhc29uKSA9PiB7XG4gICAgICBmb3JFYWNoRW52ZWxvcGVJdGVtKGZpbHRlcmVkRW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSk7XG4gICAgICAgIG9wdGlvbnMucmVjb3JkRHJvcHBlZEV2ZW50KHJlYXNvbiwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5KHR5cGUpLCBldmVudCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgcmVxdWVzdFRhc2sgPSAoKSA9PlxuICAgICAgbWFrZVJlcXVlc3QoeyBib2R5OiBzZXJpYWxpemVFbnZlbG9wZShmaWx0ZXJlZEVudmVsb3BlLCBvcHRpb25zLnRleHRFbmNvZGVyKSB9KS50aGVuKFxuICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byB0aHJvdyBvbiBOT0sgcmVzcG9uc2VzLCBidXQgd2Ugd2FudCB0byBhdCBsZWFzdCBsb2cgdGhlbVxuICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXNDb2RlICE9PSB1bmRlZmluZWQgJiYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPCAyMDAgfHwgcmVzcG9uc2Uuc3RhdHVzQ29kZSA+PSAzMDApKSB7XG4gICAgICAgICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybihgU2VudHJ5IHJlc3BvbmRlZCB3aXRoIHN0YXR1cyBjb2RlICR7cmVzcG9uc2Uuc3RhdHVzQ29kZX0gdG8gc2VudCBldmVudC5gKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByYXRlTGltaXRzID0gdXBkYXRlUmF0ZUxpbWl0cyhyYXRlTGltaXRzLCByZXNwb25zZSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgcmVjb3JkRW52ZWxvcGVMb3NzKCduZXR3b3JrX2Vycm9yJyk7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0sXG4gICAgICApO1xuXG4gICAgcmV0dXJuIGJ1ZmZlci5hZGQocmVxdWVzdFRhc2spLnRoZW4oXG4gICAgICByZXN1bHQgPT4gcmVzdWx0LFxuICAgICAgZXJyb3IgPT4ge1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBTZW50cnlFcnJvcikge1xuICAgICAgICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5lcnJvcignU2tpcHBlZCBzZW5kaW5nIGV2ZW50IGJlY2F1c2UgYnVmZmVyIGlzIGZ1bGwuJyk7XG4gICAgICAgICAgcmVjb3JkRW52ZWxvcGVMb3NzKCdxdWV1ZV9vdmVyZmxvdycpO1xuICAgICAgICAgIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgKTtcbiAgfVxuXG4gIC8vIFdlIHVzZSB0aGlzIHRvIGlkZW50aWZpZnkgaWYgdGhlIHRyYW5zcG9ydCBpcyB0aGUgYmFzZSB0cmFuc3BvcnRcbiAgLy8gVE9ETyAodjgpOiBSZW1vdmUgdGhpcyBhZ2FpbiBhcyB3ZSdsbCBubyBsb25nZXIgbmVlZCBpdFxuICBzZW5kLl9fc2VudHJ5X19iYXNlVHJhbnNwb3J0X18gPSB0cnVlO1xuXG4gIHJldHVybiB7XG4gICAgc2VuZCxcbiAgICBmbHVzaCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSkge1xuICBpZiAodHlwZSAhPT0gJ2V2ZW50JyAmJiB0eXBlICE9PSAndHJhbnNhY3Rpb24nKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBBcnJheS5pc0FycmF5KGl0ZW0pID8gKGl0ZW0gKVsxXSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgREVGQVVMVF9UUkFOU1BPUlRfQlVGRkVSX1NJWkUsIGNyZWF0ZVRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/transports/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/transports/multiplexed.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/multiplexed.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventFromEnvelope: () => (/* binding */ eventFromEnvelope),\n/* harmony export */   makeMultiplexedTransport: () => (/* binding */ makeMultiplexedTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api.js */ \"(rsc)/./node_modules/@sentry/core/esm/api.js\");\n\n\n\n/**\n * Gets an event from an envelope.\n *\n * This is only exported for use in the tests\n */\nfunction eventFromEnvelope(env, types) {\n  let event;\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item )[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that overrides the release on all events.\n */\nfunction makeOverrideReleaseTransport(\n  createTransport,\n  release,\n) {\n  return options => {\n    const transport = createTransport(options);\n\n    return {\n      send: async (envelope) => {\n        const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n\n        if (event) {\n          event.release = release;\n        }\n        return transport.send(envelope);\n      },\n      flush: timeout => transport.flush(timeout),\n    };\n  };\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nfunction makeMultiplexedTransport(\n  createTransport,\n  matcher,\n) {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports = {};\n\n    function getTransport(dsn, release) {\n      // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n      // use at the same time\n      const key = release ? `${dsn}:${release}` : dsn;\n\n      if (!otherTransports[key]) {\n        const validatedDsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnFromString)(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_2__.getEnvelopeEndpointWithUrlEncodedAuth)(validatedDsn);\n\n        otherTransports[key] = release\n          ? makeOverrideReleaseTransport(createTransport, release)({ ...options, url })\n          : createTransport({ ...options, url });\n      }\n\n      return otherTransports[key];\n    }\n\n    async function send(envelope) {\n      function getEvent(types) {\n        const eventTypes = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        })\n        .filter((t) => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      if (transports.length === 0) {\n        transports.push(fallbackTransport);\n      }\n\n      const results = await Promise.all(transports.map(transport => transport.send(envelope)));\n\n      return results[0];\n    }\n\n    async function flush(timeout) {\n      const allTransports = [...Object.keys(otherTransports).map(dsn => otherTransports[dsn]), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n\n\n//# sourceMappingURL=multiplexed.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1FO0FBQ0Q7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsa0VBQW1CO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsSUFBSSxHQUFHLFFBQVE7O0FBRTlDO0FBQ0EsNkJBQTZCLDREQUFhO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4RUFBcUM7O0FBRXpEO0FBQ0EscUVBQXFFLGlCQUFpQjtBQUN0Riw4QkFBOEIsaUJBQWlCO0FBQy9DOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsb0JBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVEO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzP2ZiNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHNuRnJvbVN0cmluZywgZm9yRWFjaEVudmVsb3BlSXRlbSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCB9IGZyb20gJy4uL2FwaS5qcyc7XG5cbi8qKlxuICogR2V0cyBhbiBldmVudCBmcm9tIGFuIGVudmVsb3BlLlxuICpcbiAqIFRoaXMgaXMgb25seSBleHBvcnRlZCBmb3IgdXNlIGluIHRoZSB0ZXN0c1xuICovXG5mdW5jdGlvbiBldmVudEZyb21FbnZlbG9wZShlbnYsIHR5cGVzKSB7XG4gIGxldCBldmVudDtcblxuICBmb3JFYWNoRW52ZWxvcGVJdGVtKGVudiwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICBpZiAodHlwZXMuaW5jbHVkZXModHlwZSkpIHtcbiAgICAgIGV2ZW50ID0gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIGJhaWwgb3V0IGlmIHdlIGZvdW5kIGFuIGV2ZW50XG4gICAgcmV0dXJuICEhZXZlbnQ7XG4gIH0pO1xuXG4gIHJldHVybiBldmVudDtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdHJhbnNwb3J0IHRoYXQgb3ZlcnJpZGVzIHRoZSByZWxlYXNlIG9uIGFsbCBldmVudHMuXG4gKi9cbmZ1bmN0aW9uIG1ha2VPdmVycmlkZVJlbGVhc2VUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbiAgcmVsZWFzZSxcbikge1xuICByZXR1cm4gb3B0aW9ucyA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ID0gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQ6IGFzeW5jIChlbnZlbG9wZSkgPT4ge1xuICAgICAgICBjb25zdCBldmVudCA9IGV2ZW50RnJvbUVudmVsb3BlKGVudmVsb3BlLCBbJ2V2ZW50JywgJ3RyYW5zYWN0aW9uJywgJ3Byb2ZpbGUnLCAncmVwbGF5X2V2ZW50J10pO1xuXG4gICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgIGV2ZW50LnJlbGVhc2UgPSByZWxlYXNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFuc3BvcnQuc2VuZChlbnZlbG9wZSk7XG4gICAgICB9LFxuICAgICAgZmx1c2g6IHRpbWVvdXQgPT4gdHJhbnNwb3J0LmZsdXNoKHRpbWVvdXQpLFxuICAgIH07XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHRyYW5zcG9ydCB0aGF0IGNhbiBzZW5kIGV2ZW50cyB0byBkaWZmZXJlbnQgRFNOcyBkZXBlbmRpbmcgb24gdGhlIGVudmVsb3BlIGNvbnRlbnRzLlxuICovXG5mdW5jdGlvbiBtYWtlTXVsdGlwbGV4ZWRUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbiAgbWF0Y2hlcixcbikge1xuICByZXR1cm4gb3B0aW9ucyA9PiB7XG4gICAgY29uc3QgZmFsbGJhY2tUcmFuc3BvcnQgPSBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucyk7XG4gICAgY29uc3Qgb3RoZXJUcmFuc3BvcnRzID0ge307XG5cbiAgICBmdW5jdGlvbiBnZXRUcmFuc3BvcnQoZHNuLCByZWxlYXNlKSB7XG4gICAgICAvLyBXZSBjcmVhdGUgYSB0cmFuc3BvcnQgZm9yIGV2ZXJ5IHVuaXF1ZSBkc24vcmVsZWFzZSBjb21iaW5hdGlvbiBhcyB0aGVyZSBtYXkgYmUgY29kZSBmcm9tIG11bHRpcGxlIHJlbGVhc2VzIGluXG4gICAgICAvLyB1c2UgYXQgdGhlIHNhbWUgdGltZVxuICAgICAgY29uc3Qga2V5ID0gcmVsZWFzZSA/IGAke2Rzbn06JHtyZWxlYXNlfWAgOiBkc247XG5cbiAgICAgIGlmICghb3RoZXJUcmFuc3BvcnRzW2tleV0pIHtcbiAgICAgICAgY29uc3QgdmFsaWRhdGVkRHNuID0gZHNuRnJvbVN0cmluZyhkc24pO1xuICAgICAgICBpZiAoIXZhbGlkYXRlZERzbikge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXJsID0gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCh2YWxpZGF0ZWREc24pO1xuXG4gICAgICAgIG90aGVyVHJhbnNwb3J0c1trZXldID0gcmVsZWFzZVxuICAgICAgICAgID8gbWFrZU92ZXJyaWRlUmVsZWFzZVRyYW5zcG9ydChjcmVhdGVUcmFuc3BvcnQsIHJlbGVhc2UpKHsgLi4ub3B0aW9ucywgdXJsIH0pXG4gICAgICAgICAgOiBjcmVhdGVUcmFuc3BvcnQoeyAuLi5vcHRpb25zLCB1cmwgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvdGhlclRyYW5zcG9ydHNba2V5XTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgICBmdW5jdGlvbiBnZXRFdmVudCh0eXBlcykge1xuICAgICAgICBjb25zdCBldmVudFR5cGVzID0gdHlwZXMgJiYgdHlwZXMubGVuZ3RoID8gdHlwZXMgOiBbJ2V2ZW50J107XG4gICAgICAgIHJldHVybiBldmVudEZyb21FbnZlbG9wZShlbnZlbG9wZSwgZXZlbnRUeXBlcyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRyYW5zcG9ydHMgPSBtYXRjaGVyKHsgZW52ZWxvcGUsIGdldEV2ZW50IH0pXG4gICAgICAgIC5tYXAocmVzdWx0ID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRUcmFuc3BvcnQocmVzdWx0LCB1bmRlZmluZWQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VHJhbnNwb3J0KHJlc3VsdC5kc24sIHJlc3VsdC5yZWxlYXNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5maWx0ZXIoKHQpID0+ICEhdCk7XG5cbiAgICAgIC8vIElmIHdlIGhhdmUgbm8gdHJhbnNwb3J0cyB0byBzZW5kIHRvLCB1c2UgdGhlIGZhbGxiYWNrIHRyYW5zcG9ydFxuICAgICAgaWYgKHRyYW5zcG9ydHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRyYW5zcG9ydHMucHVzaChmYWxsYmFja1RyYW5zcG9ydCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbCh0cmFuc3BvcnRzLm1hcCh0cmFuc3BvcnQgPT4gdHJhbnNwb3J0LnNlbmQoZW52ZWxvcGUpKSk7XG5cbiAgICAgIHJldHVybiByZXN1bHRzWzBdO1xuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIGZsdXNoKHRpbWVvdXQpIHtcbiAgICAgIGNvbnN0IGFsbFRyYW5zcG9ydHMgPSBbLi4uT2JqZWN0LmtleXMob3RoZXJUcmFuc3BvcnRzKS5tYXAoZHNuID0+IG90aGVyVHJhbnNwb3J0c1tkc25dKSwgZmFsbGJhY2tUcmFuc3BvcnRdO1xuICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKGFsbFRyYW5zcG9ydHMubWFwKHRyYW5zcG9ydCA9PiB0cmFuc3BvcnQuZmx1c2godGltZW91dCkpKTtcbiAgICAgIHJldHVybiByZXN1bHRzLmV2ZXJ5KHIgPT4gcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQsXG4gICAgICBmbHVzaCxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBldmVudEZyb21FbnZlbG9wZSwgbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aXBsZXhlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/transports/multiplexed.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/transports/offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/offline.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MIN_DELAY: () => (/* binding */ MIN_DELAY),\n/* harmony export */   START_DELAY: () => (/* binding */ START_DELAY),\n/* harmony export */   makeOfflineTransport: () => (/* binding */ makeOfflineTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\nfunction log(msg, error) {\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info(`[Offline]: ${msg}`, error);\n}\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  return options => {\n    const transport = createTransport(options);\n    const store = options.createStore ? options.createStore(options) : undefined;\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We don't queue Session Replay envelopes because they are:\n      // - Ordered and Replay relies on the response status to know when they're successfully sent.\n      // - Likely to fill the queue quickly and block other events from being sent.\n      // We also want to drop client reports because they can be generated when we retry sending events while offline.\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.envelopeContainsItemType)(env, ['replay_event', 'replay_recording', 'client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (!store) {\n        return;\n      }\n\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.pop();\n        if (found) {\n          log('Attempting to send previously queued event');\n          void send(found).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope) {\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.parseRetryAfterHeader)(result.headers['retry-after']);\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (store && (await shouldQueue(envelope, e , retryDelay))) {\n          await store.insert(envelope);\n          flushWithBackOff();\n          log('Error sending. Event queued', e );\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RjtBQUN4Qzs7QUFFaEQsdUJBQXVCO0FBQ3ZCLDBCQUEwQjtBQUMxQix5QkFBeUI7O0FBRXpCO0FBQ0EsRUFBRSx3REFBVyxJQUFJLGlEQUFNLG9CQUFvQixJQUFJO0FBQy9DOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx1RUFBd0I7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixvRUFBcUI7QUFDekMsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXdEO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanM/OGVhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIGxvZ2dlciwgZW52ZWxvcGVDb250YWluc0l0ZW1UeXBlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcblxuY29uc3QgTUlOX0RFTEFZID0gMTAwOyAvLyAxMDAgbXNcbmNvbnN0IFNUQVJUX0RFTEFZID0gNTAwMDsgLy8gNSBzZWNvbmRzXG5jb25zdCBNQVhfREVMQVkgPSAzLjZlNjsgLy8gMSBob3VyXG5cbmZ1bmN0aW9uIGxvZyhtc2csIGVycm9yKSB7XG4gIERFQlVHX0JVSUxEICYmIGxvZ2dlci5pbmZvKGBbT2ZmbGluZV06ICR7bXNnfWAsIGVycm9yKTtcbn1cblxuLyoqXG4gKiBXcmFwcyBhIHRyYW5zcG9ydCBhbmQgc3RvcmVzIGFuZCByZXRyaWVzIGV2ZW50cyB3aGVuIHRoZXkgZmFpbCB0byBzZW5kLlxuICpcbiAqIEBwYXJhbSBjcmVhdGVUcmFuc3BvcnQgVGhlIHRyYW5zcG9ydCB0byB3cmFwLlxuICovXG5mdW5jdGlvbiBtYWtlT2ZmbGluZVRyYW5zcG9ydChcbiAgY3JlYXRlVHJhbnNwb3J0LFxuKSB7XG4gIHJldHVybiBvcHRpb25zID0+IHtcbiAgICBjb25zdCB0cmFuc3BvcnQgPSBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucyk7XG4gICAgY29uc3Qgc3RvcmUgPSBvcHRpb25zLmNyZWF0ZVN0b3JlID8gb3B0aW9ucy5jcmVhdGVTdG9yZShvcHRpb25zKSA6IHVuZGVmaW5lZDtcblxuICAgIGxldCByZXRyeURlbGF5ID0gU1RBUlRfREVMQVk7XG4gICAgbGV0IGZsdXNoVGltZXI7XG5cbiAgICBmdW5jdGlvbiBzaG91bGRRdWV1ZShlbnYsIGVycm9yLCByZXRyeURlbGF5KSB7XG4gICAgICAvLyBXZSBkb24ndCBxdWV1ZSBTZXNzaW9uIFJlcGxheSBlbnZlbG9wZXMgYmVjYXVzZSB0aGV5IGFyZTpcbiAgICAgIC8vIC0gT3JkZXJlZCBhbmQgUmVwbGF5IHJlbGllcyBvbiB0aGUgcmVzcG9uc2Ugc3RhdHVzIHRvIGtub3cgd2hlbiB0aGV5J3JlIHN1Y2Nlc3NmdWxseSBzZW50LlxuICAgICAgLy8gLSBMaWtlbHkgdG8gZmlsbCB0aGUgcXVldWUgcXVpY2tseSBhbmQgYmxvY2sgb3RoZXIgZXZlbnRzIGZyb20gYmVpbmcgc2VudC5cbiAgICAgIC8vIFdlIGFsc28gd2FudCB0byBkcm9wIGNsaWVudCByZXBvcnRzIGJlY2F1c2UgdGhleSBjYW4gYmUgZ2VuZXJhdGVkIHdoZW4gd2UgcmV0cnkgc2VuZGluZyBldmVudHMgd2hpbGUgb2ZmbGluZS5cbiAgICAgIGlmIChlbnZlbG9wZUNvbnRhaW5zSXRlbVR5cGUoZW52LCBbJ3JlcGxheV9ldmVudCcsICdyZXBsYXlfcmVjb3JkaW5nJywgJ2NsaWVudF9yZXBvcnQnXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5zaG91bGRTdG9yZSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zaG91bGRTdG9yZShlbnYsIGVycm9yLCByZXRyeURlbGF5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmx1c2hJbihkZWxheSkge1xuICAgICAgaWYgKCFzdG9yZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChmbHVzaFRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChmbHVzaFRpbWVyICk7XG4gICAgICB9XG5cbiAgICAgIGZsdXNoVGltZXIgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcbiAgICAgICAgZmx1c2hUaW1lciA9IHVuZGVmaW5lZDtcblxuICAgICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHN0b3JlLnBvcCgpO1xuICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICBsb2coJ0F0dGVtcHRpbmcgdG8gc2VuZCBwcmV2aW91c2x5IHF1ZXVlZCBldmVudCcpO1xuICAgICAgICAgIHZvaWQgc2VuZChmb3VuZCkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBsb2coJ0ZhaWxlZCB0byByZXRyeSBzZW5kaW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIGRlbGF5KSA7XG5cbiAgICAgIC8vIFdlIG5lZWQgdG8gdW5yZWYgdGhlIHRpbWVyIGluIG5vZGUuanMsIG90aGVyd2lzZSB0aGUgbm9kZSBwcm9jZXNzIG5ldmVyIGV4aXQuXG4gICAgICBpZiAodHlwZW9mIGZsdXNoVGltZXIgIT09ICdudW1iZXInICYmIGZsdXNoVGltZXIudW5yZWYpIHtcbiAgICAgICAgZmx1c2hUaW1lci51bnJlZigpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZsdXNoV2l0aEJhY2tPZmYoKSB7XG4gICAgICBpZiAoZmx1c2hUaW1lcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZsdXNoSW4ocmV0cnlEZWxheSk7XG5cbiAgICAgIHJldHJ5RGVsYXkgPSBNYXRoLm1pbihyZXRyeURlbGF5ICogMiwgTUFYX0RFTEFZKTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0cmFuc3BvcnQuc2VuZChlbnZlbG9wZSk7XG5cbiAgICAgICAgbGV0IGRlbGF5ID0gTUlOX0RFTEFZO1xuXG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGVyZSdzIGEgcmV0cnktYWZ0ZXIgaGVhZGVyLCB1c2UgdGhhdCBhcyB0aGUgbmV4dCBkZWxheS5cbiAgICAgICAgICBpZiAocmVzdWx0LmhlYWRlcnMgJiYgcmVzdWx0LmhlYWRlcnNbJ3JldHJ5LWFmdGVyJ10pIHtcbiAgICAgICAgICAgIGRlbGF5ID0gcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJlc3VsdC5oZWFkZXJzWydyZXRyeS1hZnRlciddKTtcbiAgICAgICAgICB9IC8vIElmIHdlIGhhdmUgYSBzZXJ2ZXIgZXJyb3IsIHJldHVybiBub3cgc28gd2UgZG9uJ3QgZmx1c2ggdGhlIHF1ZXVlLlxuICAgICAgICAgIGVsc2UgaWYgKChyZXN1bHQuc3RhdHVzQ29kZSB8fCAwKSA+PSA0MDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZmx1c2hJbihkZWxheSk7XG4gICAgICAgIHJldHJ5RGVsYXkgPSBTVEFSVF9ERUxBWTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0b3JlICYmIChhd2FpdCBzaG91bGRRdWV1ZShlbnZlbG9wZSwgZSAsIHJldHJ5RGVsYXkpKSkge1xuICAgICAgICAgIGF3YWl0IHN0b3JlLmluc2VydChlbnZlbG9wZSk7XG4gICAgICAgICAgZmx1c2hXaXRoQmFja09mZigpO1xuICAgICAgICAgIGxvZygnRXJyb3Igc2VuZGluZy4gRXZlbnQgcXVldWVkJywgZSApO1xuICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZmx1c2hBdFN0YXJ0dXApIHtcbiAgICAgIGZsdXNoV2l0aEJhY2tPZmYoKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc2VuZCxcbiAgICAgIGZsdXNoOiB0ID0+IHRyYW5zcG9ydC5mbHVzaCh0KSxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBNSU5fREVMQVksIFNUQVJUX0RFTEFZLCBtYWtlT2ZmbGluZVRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2ZmbGluZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/transports/offline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyScopeDataToEvent: () => (/* binding */ applyScopeDataToEvent),\n/* harmony export */   mergeAndOverwriteScopeData: () => (/* binding */ mergeAndOverwriteScopeData),\n/* harmony export */   mergeScopeData: () => (/* binding */ mergeScopeData)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tracing/dynamicSamplingContext.js */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getRootSpan.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\nfunction applyDataToEvent(event, data) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = { trace: (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToTraceContext)(span), ...event.contexts };\n  const rootSpan = (0,_getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromSpan)(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\n\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/getRootSpan.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRootSpan: () => (/* binding */ getRootSpan)\n/* harmony export */ });\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nfunction getRootSpan(span) {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n\n\n//# sourceMappingURL=getRootSpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9nZXRSb290U3Bhbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9nZXRSb290U3Bhbi5qcz8yYzJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0aGUgcm9vdCBzcGFuIG9mIGEgZ2l2ZW4gc3Bhbi5cbiAqXG4gKiBBcyBsb25nIGFzIHdlIHVzZSBgVHJhbnNhY3Rpb25gcyBpbnRlcm5hbGx5LCB0aGUgcmV0dXJuZWQgcm9vdCBzcGFuXG4gKiB3aWxsIGJlIGEgYFRyYW5zYWN0aW9uYCBidXQgYmUgYXdhcmUgdGhhdCB0aGlzIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuICpcbiAqIElmIHRoZSBnaXZlbiBzcGFuIGhhcyBubyByb290IHNwYW4gb3IgdHJhbnNhY3Rpb24sIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLlxuICovXG5mdW5jdGlvbiBnZXRSb290U3BhbihzcGFuKSB7XG4gIC8vIFRPRE8gKHY4KTogUmVtb3ZlIHRoaXMgY2hlY2sgYW5kIGp1c3QgcmV0dXJuIHNwYW5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIHJldHVybiBzcGFuLnRyYW5zYWN0aW9uO1xufVxuXG5leHBvcnQgeyBnZXRSb290U3BhbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Um9vdFNwYW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleCallbackErrors: () => (/* binding */ handleCallbackErrors)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(\n  fn,\n  onError,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally = () => {},\n) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\n\n//# sourceMappingURL=handleCallbackErrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYW5kbGVDYWxsYmFja0Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0seURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3V0aWxzL2hhbmRsZUNhbGxiYWNrRXJyb3JzLmpzPzY1ZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNUaGVuYWJsZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKipcbiAqIFdyYXAgYSBjYWxsYmFjayBmdW5jdGlvbiB3aXRoIGVycm9yIGhhbmRsaW5nLlxuICogSWYgYW4gZXJyb3IgaXMgdGhyb3duLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgYG9uRXJyb3JgIGNhbGxiYWNrIGFuZCByZS10aHJvd24uXG4gKlxuICogSWYgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgZnVuY3Rpb24gaXMgYSBwcm9taXNlLCBpdCB3aWxsIGJlIGhhbmRsZWQgd2l0aCBgbWF5YmVIYW5kbGVQcm9taXNlUmVqZWN0aW9uYC5cbiAqXG4gKiBJZiBhbiBgb25GaW5hbGx5YCBjYWxsYmFjayBpcyBwcm92aWRlZCwgdGhpcyB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBjYWxsYmFjayBoYXMgZmluaXNoZWRcbiAqIC0gc28gaWYgaXQgcmV0dXJucyBhIHByb21pc2UsIG9uY2UgdGhlIHByb21pc2UgcmVzb2x2ZWQvcmVqZWN0ZWQsXG4gKiBlbHNlIG9uY2UgdGhlIGNhbGxiYWNrIGhhcyBmaW5pc2hlZCBleGVjdXRpbmcuXG4gKiBUaGUgYG9uRmluYWxseWAgY2FsbGJhY2sgd2lsbCBfYWx3YXlzXyBiZSBjYWxsZWQsIG5vIG1hdHRlciBpZiBhbiBlcnJvciB3YXMgdGhyb3duIG9yIG5vdC5cbiAqL1xuZnVuY3Rpb24gaGFuZGxlQ2FsbGJhY2tFcnJvcnNcblxuKFxuICBmbixcbiAgb25FcnJvcixcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICBvbkZpbmFsbHkgPSAoKSA9PiB7fSxcbikge1xuICBsZXQgbWF5YmVQcm9taXNlUmVzdWx0O1xuICB0cnkge1xuICAgIG1heWJlUHJvbWlzZVJlc3VsdCA9IGZuKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBvbkVycm9yKGUpO1xuICAgIG9uRmluYWxseSgpO1xuICAgIHRocm93IGU7XG4gIH1cblxuICByZXR1cm4gbWF5YmVIYW5kbGVQcm9taXNlUmVqZWN0aW9uKG1heWJlUHJvbWlzZVJlc3VsdCwgb25FcnJvciwgb25GaW5hbGx5KTtcbn1cblxuLyoqXG4gKiBNYXliZSBoYW5kbGUgYSBwcm9taXNlIHJlamVjdGlvbi5cbiAqIFRoaXMgZXhwZWN0cyB0byBiZSBnaXZlbiBhIHZhbHVlIHRoYXQgX21heV8gYmUgYSBwcm9taXNlLCBvciBhbnkgb3RoZXIgdmFsdWUuXG4gKiBJZiBpdCBpcyBhIHByb21pc2UsIGFuZCBpdCByZWplY3RzLCBpdCB3aWxsIGNhbGwgdGhlIGBvbkVycm9yYCBjYWxsYmFjay5cbiAqIE90aGVyIHRoYW4gdGhpcywgaXQgd2lsbCBnZW5lcmFsbHkgcmV0dXJuIHRoZSBnaXZlbiB2YWx1ZSBhcy1pcy5cbiAqL1xuZnVuY3Rpb24gbWF5YmVIYW5kbGVQcm9taXNlUmVqZWN0aW9uKFxuICB2YWx1ZSxcbiAgb25FcnJvcixcbiAgb25GaW5hbGx5LFxuKSB7XG4gIGlmIChpc1RoZW5hYmxlKHZhbHVlKSkge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSB0aGUgaXNUaGVuYWJsZSBjaGVjayByZXR1cm5zIHRoZSBcIndyb25nXCIgdHlwZSBoZXJlXG4gICAgcmV0dXJuIHZhbHVlLnRoZW4oXG4gICAgICByZXMgPT4ge1xuICAgICAgICBvbkZpbmFsbHkoKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgIH0sXG4gICAgICBlID0+IHtcbiAgICAgICAgb25FcnJvcihlKTtcbiAgICAgICAgb25GaW5hbGx5KCk7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICBvbkZpbmFsbHkoKTtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5leHBvcnQgeyBoYW5kbGVDYWxsYmFja0Vycm9ycyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFuZGxlQ2FsbGJhY2tFcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasTracingEnabled: () => (/* binding */ hasTracingEnabled)\n/* harmony export */ });\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exports.js */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n\n//# sourceMappingURL=hasTracingEnabled.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0RBQVM7QUFDMUI7QUFDQTtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaGFzVHJhY2luZ0VuYWJsZWQuanM/MmIzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuLi9leHBvcnRzLmpzJztcblxuLy8gVHJlZXNoYWthYmxlIGd1YXJkIHRvIHJlbW92ZSBhbGwgY29kZSByZWxhdGVkIHRvIHRyYWNpbmdcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRyYWNpbmcgaXMgY3VycmVudGx5IGVuYWJsZWQuXG4gKlxuICogVHJhY2luZyBpcyBlbmFibGVkIHdoZW4gYXQgbGVhc3Qgb25lIG9mIGB0cmFjZXNTYW1wbGVSYXRlYCBhbmQgYHRyYWNlc1NhbXBsZXJgIGlzIGRlZmluZWQgaW4gdGhlIFNESyBjb25maWcuXG4gKi9cbmZ1bmN0aW9uIGhhc1RyYWNpbmdFbmFibGVkKFxuICBtYXliZU9wdGlvbnMsXG4pIHtcbiAgaWYgKHR5cGVvZiBfX1NFTlRSWV9UUkFDSU5HX18gPT09ICdib29sZWFuJyAmJiAhX19TRU5UUllfVFJBQ0lOR19fKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gIGNvbnN0IG9wdGlvbnMgPSBtYXliZU9wdGlvbnMgfHwgKGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpKTtcbiAgcmV0dXJuICEhb3B0aW9ucyAmJiAob3B0aW9ucy5lbmFibGVUcmFjaW5nIHx8ICd0cmFjZXNTYW1wbGVSYXRlJyBpbiBvcHRpb25zIHx8ICd0cmFjZXNTYW1wbGVyJyBpbiBvcHRpb25zKTtcbn1cblxuZXhwb3J0IHsgaGFzVHJhY2luZ0VuYWJsZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc1RyYWNpbmdFbmFibGVkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSentryRequestUrl: () => (/* binding */ isSentryRequestUrl)\n/* harmony export */ });\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction isSentryRequestUrl(url, hubOrClient) {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient ).getClient !== undefined;\n}\n\n\n//# sourceMappingURL=isSentryRequestUrl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9pc1NlbnRyeVJlcXVlc3RVcmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaXNTZW50cnlSZXF1ZXN0VXJsLmpzPzI0NWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB1cmwgcG9pbnRzIHRvIFNlbnRyeSBzZXJ2ZXJcbiAqIEBwYXJhbSB1cmwgdXJsIHRvIHZlcmlmeVxuICpcbiAqIFRPRE8odjgpOiBSZW1vdmUgSHViIGZhbGxiYWNrIHR5cGVcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5mdW5jdGlvbiBpc1NlbnRyeVJlcXVlc3RVcmwodXJsLCBodWJPckNsaWVudCkge1xuICBjb25zdCBjbGllbnQgPVxuICAgIGh1Yk9yQ2xpZW50ICYmIGlzSHViKGh1Yk9yQ2xpZW50KVxuICAgICAgPyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgICAgaHViT3JDbGllbnQuZ2V0Q2xpZW50KClcbiAgICAgIDogaHViT3JDbGllbnQ7XG4gIGNvbnN0IGRzbiA9IGNsaWVudCAmJiBjbGllbnQuZ2V0RHNuKCk7XG4gIGNvbnN0IHR1bm5lbCA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpLnR1bm5lbDtcblxuICByZXR1cm4gY2hlY2tEc24odXJsLCBkc24pIHx8IGNoZWNrVHVubmVsKHVybCwgdHVubmVsKTtcbn1cblxuZnVuY3Rpb24gY2hlY2tUdW5uZWwodXJsLCB0dW5uZWwpIHtcbiAgaWYgKCF0dW5uZWwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gcmVtb3ZlVHJhaWxpbmdTbGFzaCh1cmwpID09PSByZW1vdmVUcmFpbGluZ1NsYXNoKHR1bm5lbCk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrRHNuKHVybCwgZHNuKSB7XG4gIHJldHVybiBkc24gPyB1cmwuaW5jbHVkZXMoZHNuLmhvc3QpIDogZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVRyYWlsaW5nU2xhc2goc3RyKSB7XG4gIHJldHVybiBzdHJbc3RyLmxlbmd0aCAtIDFdID09PSAnLycgPyBzdHIuc2xpY2UoMCwgLTEpIDogc3RyO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmZ1bmN0aW9uIGlzSHViKGh1Yk9yQ2xpZW50KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICByZXR1cm4gKGh1Yk9yQ2xpZW50ICkuZ2V0Q2xpZW50ICE9PSB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCB7IGlzU2VudHJ5UmVxdWVzdFVybCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNTZW50cnlSZXF1ZXN0VXJsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/parameterize.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/parameterize.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parameterize: () => (/* binding */ parameterize)\n/* harmony export */ });\n/**\n * Tagged template function which returns paramaterized representation of the message\n * For example: parameterize`This is a log statement with ${x} and ${y} params`, would return:\n * \"__sentry_template_string__\": 'This is a log statement with %s and %s params',\n * \"__sentry_template_values__\": ['first', 'second']\n * @param strings An array of string values splitted between expressions\n * @param values Expressions extracted from template string\n * @returns String with template information in __sentry_template_string__ and __sentry_template_values__ properties\n */\nfunction parameterize(strings, ...values) {\n  const formatted = new String(String.raw(strings, ...values)) ;\n  formatted.__sentry_template_string__ = strings.join('\\x00').replace(/%/g, '%%').replace(/\\0/g, '%s');\n  formatted.__sentry_template_values__ = values;\n  return formatted;\n}\n\n\n//# sourceMappingURL=parameterize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9wYXJhbWV0ZXJpemUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSw0REFBNEQsR0FBRyxNQUFNLEdBQUc7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvcGFyYW1ldGVyaXplLmpzPzhhYTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWdnZWQgdGVtcGxhdGUgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBwYXJhbWF0ZXJpemVkIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBtZXNzYWdlXG4gKiBGb3IgZXhhbXBsZTogcGFyYW1ldGVyaXplYFRoaXMgaXMgYSBsb2cgc3RhdGVtZW50IHdpdGggJHt4fSBhbmQgJHt5fSBwYXJhbXNgLCB3b3VsZCByZXR1cm46XG4gKiBcIl9fc2VudHJ5X3RlbXBsYXRlX3N0cmluZ19fXCI6ICdUaGlzIGlzIGEgbG9nIHN0YXRlbWVudCB3aXRoICVzIGFuZCAlcyBwYXJhbXMnLFxuICogXCJfX3NlbnRyeV90ZW1wbGF0ZV92YWx1ZXNfX1wiOiBbJ2ZpcnN0JywgJ3NlY29uZCddXG4gKiBAcGFyYW0gc3RyaW5ncyBBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzIHNwbGl0dGVkIGJldHdlZW4gZXhwcmVzc2lvbnNcbiAqIEBwYXJhbSB2YWx1ZXMgRXhwcmVzc2lvbnMgZXh0cmFjdGVkIGZyb20gdGVtcGxhdGUgc3RyaW5nXG4gKiBAcmV0dXJucyBTdHJpbmcgd2l0aCB0ZW1wbGF0ZSBpbmZvcm1hdGlvbiBpbiBfX3NlbnRyeV90ZW1wbGF0ZV9zdHJpbmdfXyBhbmQgX19zZW50cnlfdGVtcGxhdGVfdmFsdWVzX18gcHJvcGVydGllc1xuICovXG5mdW5jdGlvbiBwYXJhbWV0ZXJpemUoc3RyaW5ncywgLi4udmFsdWVzKSB7XG4gIGNvbnN0IGZvcm1hdHRlZCA9IG5ldyBTdHJpbmcoU3RyaW5nLnJhdyhzdHJpbmdzLCAuLi52YWx1ZXMpKSA7XG4gIGZvcm1hdHRlZC5fX3NlbnRyeV90ZW1wbGF0ZV9zdHJpbmdfXyA9IHN0cmluZ3Muam9pbignXFx4MDAnKS5yZXBsYWNlKC8lL2csICclJScpLnJlcGxhY2UoL1xcMC9nLCAnJXMnKTtcbiAgZm9ybWF0dGVkLl9fc2VudHJ5X3RlbXBsYXRlX3ZhbHVlc19fID0gdmFsdWVzO1xuICByZXR1cm4gZm9ybWF0dGVkO1xufVxuXG5leHBvcnQgeyBwYXJhbWV0ZXJpemUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcmFtZXRlcml6ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/parameterize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyDebugIds: () => (/* binding */ applyDebugIds),\n/* harmony export */   applyDebugMeta: () => (/* binding */ applyDebugMeta),\n/* harmony export */   parseEventHintOrCaptureContext: () => (/* binding */ parseEventHintOrCaptureContext),\n/* harmony export */   prepareEvent: () => (/* binding */ prepareEvent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eventProcessors.js */ \"(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope.js */ \"(rsc)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./applyScopeDataToEvent.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./spanUtils.js */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = (0,_scope_js__WEBPACK_IMPORTED_MODULE_2__.getGlobalScope)().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope, captureContext) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/prepareEvent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/sdkMetadata.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/sdkMetadata.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySdkMetadata: () => (/* binding */ applySdkMetadata)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ \"(rsc)/./node_modules/@sentry/core/esm/version.js\");\n\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: _version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n      })),\n      version: _version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\n\n//# sourceMappingURL=sdkMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zZGtNZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0Qzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsS0FBSztBQUN0QztBQUNBLGlCQUFpQixPQUFPLFdBQVcsS0FBSztBQUN4QyxpQkFBaUIsb0RBQVc7QUFDNUIsT0FBTztBQUNQLGVBQWUsb0RBQVc7QUFDMUI7QUFDQTs7QUFFQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvc2RrTWV0YWRhdGEuanM/YmEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gJy4uL3ZlcnNpb24uanMnO1xuXG4vKipcbiAqIEEgYnVpbGRlciBmb3IgdGhlIFNESyBtZXRhZGF0YSBpbiB0aGUgb3B0aW9ucyBmb3IgdGhlIFNESyBpbml0aWFsaXphdGlvbi5cbiAqXG4gKiBOb3RlOiBUaGlzIGZ1bmN0aW9uIGlzIGlkZW50aWNhbCB0byBgYnVpbGRNZXRhZGF0YWAgaW4gUmVtaXggYW5kIE5leHRKUyBhbmQgU3ZlbHRlS2l0LlxuICogV2UgZG9uJ3QgZXh0cmFjdCBpdCBmb3IgYnVuZGxlIHNpemUgcmVhc29ucy5cbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9wdWxsLzc0MDRcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9wdWxsLzQxOTZcbiAqXG4gKiBJZiB5b3UgbWFrZSBjaGFuZ2VzIHRvIHRoaXMgZnVuY3Rpb24gY29uc2lkZXIgdXBkYXRpbmcgdGhlIG90aGVycyBhcyB3ZWxsLlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIFNESyBvcHRpb25zIG9iamVjdCB0aGF0IGdldHMgbXV0YXRlZFxuICogQHBhcmFtIG5hbWVzIGxpc3Qgb2YgcGFja2FnZSBuYW1lc1xuICovXG5mdW5jdGlvbiBhcHBseVNka01ldGFkYXRhKG9wdGlvbnMsIG5hbWUsIG5hbWVzID0gW25hbWVdLCBzb3VyY2UgPSAnbnBtJykge1xuICBjb25zdCBtZXRhZGF0YSA9IG9wdGlvbnMuX21ldGFkYXRhIHx8IHt9O1xuXG4gIGlmICghbWV0YWRhdGEuc2RrKSB7XG4gICAgbWV0YWRhdGEuc2RrID0ge1xuICAgICAgbmFtZTogYHNlbnRyeS5qYXZhc2NyaXB0LiR7bmFtZX1gLFxuICAgICAgcGFja2FnZXM6IG5hbWVzLm1hcChuYW1lID0+ICh7XG4gICAgICAgIG5hbWU6IGAke3NvdXJjZX06QHNlbnRyeS8ke25hbWV9YCxcbiAgICAgICAgdmVyc2lvbjogU0RLX1ZFUlNJT04sXG4gICAgICB9KSksXG4gICAgICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgICB9O1xuICB9XG5cbiAgb3B0aW9ucy5fbWV0YWRhdGEgPSBtZXRhZGF0YTtcbn1cblxuZXhwb3J0IHsgYXBwbHlTZGtNZXRhZGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrTWV0YWRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/sdkMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/spanUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRACE_FLAG_NONE: () => (/* binding */ TRACE_FLAG_NONE),\n/* harmony export */   TRACE_FLAG_SAMPLED: () => (/* binding */ TRACE_FLAG_SAMPLED),\n/* harmony export */   spanIsSampled: () => (/* binding */ spanIsSampled),\n/* harmony export */   spanTimeInputToSeconds: () => (/* binding */ spanTimeInputToSeconds),\n/* harmony export */   spanToJSON: () => (/* binding */ spanToJSON),\n/* harmony export */   spanToTraceContext: () => (/* binding */ spanToTraceContext),\n/* harmony export */   spanToTraceHeader: () => (/* binding */ spanToTraceHeader)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/time.js\");\n\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.generateSentryTraceHeader)(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.timestampInSeconds)();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nfunction spanToJSON(span) {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n\n\n//# sourceMappingURL=spanUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpRzs7QUFFakc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0MsVUFBVSxpREFBaUQ7O0FBRTNELFNBQVMsZ0VBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGtCQUFrQjtBQUM1QjtBQUNBLFNBQVMsd0VBQXlCO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFNBQVMsaUVBQWtCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsYUFBYTtBQUN2QjtBQUNBO0FBQ0E7O0FBRXlJO0FBQ3pJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanM/ZWU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cywgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgdGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8vIFRoZXNlIGFyZSBhbGlnbmVkIHdpdGggT3BlblRlbGVtZXRyeSB0cmFjZSBmbGFnc1xuY29uc3QgVFJBQ0VfRkxBR19OT05FID0gMHgwO1xuY29uc3QgVFJBQ0VfRkxBR19TQU1QTEVEID0gMHgxO1xuXG4vKipcbiAqIENvbnZlcnQgYSBzcGFuIHRvIGEgdHJhY2UgY29udGV4dCwgd2hpY2ggY2FuIGJlIHNlbnQgYXMgdGhlIGB0cmFjZWAgY29udGV4dCBpbiBhbiBldmVudC5cbiAqL1xuZnVuY3Rpb24gc3BhblRvVHJhY2VDb250ZXh0KHNwYW4pIHtcbiAgY29uc3QgeyBzcGFuSWQ6IHNwYW5faWQsIHRyYWNlSWQ6IHRyYWNlX2lkIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIGNvbnN0IHsgZGF0YSwgb3AsIHBhcmVudF9zcGFuX2lkLCBzdGF0dXMsIHRhZ3MsIG9yaWdpbiB9ID0gc3BhblRvSlNPTihzcGFuKTtcblxuICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIGRhdGEsXG4gICAgb3AsXG4gICAgcGFyZW50X3NwYW5faWQsXG4gICAgc3Bhbl9pZCxcbiAgICBzdGF0dXMsXG4gICAgdGFncyxcbiAgICB0cmFjZV9pZCxcbiAgICBvcmlnaW4sXG4gIH0pO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYSBTcGFuIHRvIGEgU2VudHJ5IHRyYWNlIGhlYWRlci5cbiAqL1xuZnVuY3Rpb24gc3BhblRvVHJhY2VIZWFkZXIoc3Bhbikge1xuICBjb25zdCB7IHRyYWNlSWQsIHNwYW5JZCB9ID0gc3Bhbi5zcGFuQ29udGV4dCgpO1xuICBjb25zdCBzYW1wbGVkID0gc3BhbklzU2FtcGxlZChzcGFuKTtcbiAgcmV0dXJuIGdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIodHJhY2VJZCwgc3BhbklkLCBzYW1wbGVkKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3BhbiB0aW1lIGlucHV0IGludHAgYSB0aW1lc3RhbXAgaW4gc2Vjb25kcy5cbiAqL1xuZnVuY3Rpb24gc3BhblRpbWVJbnB1dFRvU2Vjb25kcyhpbnB1dCkge1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBlbnN1cmVUaW1lc3RhbXBJblNlY29uZHMoaW5wdXQpO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgLy8gU2VlIHtAbGluayBIclRpbWV9IGZvciB0aGUgYXJyYXktYmFzZWQgdGltZSBmb3JtYXRcbiAgICByZXR1cm4gaW5wdXRbMF0gKyBpbnB1dFsxXSAvIDFlOTtcbiAgfVxuXG4gIGlmIChpbnB1dCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZW5zdXJlVGltZXN0YW1wSW5TZWNvbmRzKGlucHV0LmdldFRpbWUoKSk7XG4gIH1cblxuICByZXR1cm4gdGltZXN0YW1wSW5TZWNvbmRzKCk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSB0aW1lc3RhbXAgdG8gc2Vjb25kLCBpZiBpdCB3YXMgaW4gbWlsbGlzZWNvbmRzLCBvciBrZWVwcyBpdCBhcyBzZWNvbmQuXG4gKi9cbmZ1bmN0aW9uIGVuc3VyZVRpbWVzdGFtcEluU2Vjb25kcyh0aW1lc3RhbXApIHtcbiAgY29uc3QgaXNNcyA9IHRpbWVzdGFtcCA+IDk5OTk5OTk5OTk7XG4gIHJldHVybiBpc01zID8gdGltZXN0YW1wIC8gMTAwMCA6IHRpbWVzdGFtcDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3BhbiB0byBhIEpTT04gcmVwcmVzZW50YXRpb24uXG4gKiBOb3RlIHRoYXQgYWxsIGZpZWxkcyByZXR1cm5lZCBoZXJlIGFyZSBvcHRpb25hbCBhbmQgbmVlZCB0byBiZSBndWFyZGVkIGFnYWluc3QuXG4gKlxuICogTm90ZTogQmVjYXVzZSBvZiB0aGlzLCB3ZSBjdXJyZW50bHkgaGF2ZSBhIGNpcmN1bGFyIHR5cGUgZGVwZW5kZW5jeSAod2hpY2ggd2Ugb3B0ZWQgb3V0IG9mIGluIHBhY2thZ2UuanNvbikuXG4gKiBUaGlzIGlzIG5vdCBhdm9pZGFibGUgYXMgd2UgbmVlZCBgc3BhblRvSlNPTmAgaW4gYHNwYW5VdGlscy50c2AsIHdoaWNoIGluIHR1cm4gaXMgbmVlZGVkIGJ5IGBzcGFuLnRzYCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG4gKiBBbmQgYHNwYW5Ub0pTT05gIG5lZWRzIHRoZSBTcGFuIGNsYXNzIGZyb20gYHNwYW4udHNgIHRvIGNoZWNrIGhlcmUuXG4gKiBUT0RPIHY4OiBXaGVuIHdlIHJlbW92ZSB0aGUgZGVwcmVjYXRlZCBzdHVmZiBmcm9tIGBzcGFuLnRzYCwgd2UgY2FuIHJlbW92ZSB0aGUgY2lyY3VsYXIgZGVwZW5kZW5jeSBhZ2Fpbi5cbiAqL1xuZnVuY3Rpb24gc3BhblRvSlNPTihzcGFuKSB7XG4gIGlmIChzcGFuSXNTcGFuQ2xhc3Moc3BhbikpIHtcbiAgICByZXR1cm4gc3Bhbi5nZXRTcGFuSlNPTigpO1xuICB9XG5cbiAgLy8gRmFsbGJhY2s6IFdlIGFsc28gY2hlY2sgZm9yIGAudG9KU09OKClgIGhlcmUuLi5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmICh0eXBlb2Ygc3Bhbi50b0pTT04gPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICByZXR1cm4gc3Bhbi50b0pTT04oKTtcbiAgfVxuXG4gIHJldHVybiB7fTtcbn1cblxuLyoqXG4gKiBTYWRseSwgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY3kgY2hlY2tzIHdlIGNhbm5vdCBhY3R1YWxseSBpbXBvcnQgdGhlIFNwYW4gY2xhc3MgaGVyZSBhbmQgY2hlY2sgZm9yIGluc3RhbmNlb2YuXG4gKiA6KCBTbyBpbnN0ZWFkIHdlIGFwcHJveGltYXRlIHRoaXMgYnkgY2hlY2tpbmcgaWYgaXQgaGFzIHRoZSBgZ2V0U3BhbkpTT05gIG1ldGhvZC5cbiAqL1xuZnVuY3Rpb24gc3BhbklzU3BhbkNsYXNzKHNwYW4pIHtcbiAgcmV0dXJuIHR5cGVvZiAoc3BhbiApLmdldFNwYW5KU09OID09PSAnZnVuY3Rpb24nO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIHNwYW4gaXMgc2FtcGxlZC5cbiAqIEluIG1vc3QgY2FzZXMsIHlvdSBzaG91bGQganVzdCB1c2UgYHNwYW4uaXNSZWNvcmRpbmcoKWAgaW5zdGVhZC5cbiAqIEhvd2V2ZXIsIHRoaXMgaGFzIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNlbWFudGljLCBhcyBpdCBhbHNvIHJldHVybnMgZmFsc2UgaWYgdGhlIHNwYW4gaXMgZmluaXNoZWQuXG4gKiBTbyBpbiB0aGUgY2FzZSB3aGVyZSB0aGlzIGRpc3RpbmN0aW9uIGlzIGltcG9ydGFudCwgdXNlIHRoaXMgbWV0aG9kLlxuICovXG5mdW5jdGlvbiBzcGFuSXNTYW1wbGVkKHNwYW4pIHtcbiAgLy8gV2UgYWxpZ24gb3VyIHRyYWNlIGZsYWdzIHdpdGggdGhlIG9uZXMgT3BlblRlbGVtZXRyeSB1c2VcbiAgLy8gU28gd2UgYWxzbyBjaGVjayBmb3Igc2FtcGxlZCB0aGUgc2FtZSB3YXkgdGhleSBkby5cbiAgY29uc3QgeyB0cmFjZUZsYWdzIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlXG4gIHJldHVybiBCb29sZWFuKHRyYWNlRmxhZ3MgJiBUUkFDRV9GTEFHX1NBTVBMRUQpO1xufVxuXG5leHBvcnQgeyBUUkFDRV9GTEFHX05PTkUsIFRSQUNFX0ZMQUdfU0FNUExFRCwgc3BhbklzU2FtcGxlZCwgc3BhblRpbWVJbnB1dFRvU2Vjb25kcywgc3BhblRvSlNPTiwgc3BhblRvVHJhY2VDb250ZXh0LCBzcGFuVG9UcmFjZUhlYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhblV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/core/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/version.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\nconst SDK_VERSION = '7.112.2';\n\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3ZlcnNpb24uanM/ZTI2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTREtfVkVSU0lPTiA9ICc3LjExMi4yJztcblxuZXhwb3J0IHsgU0RLX1ZFUlNJT04gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/core/esm/version.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/captureconsole.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/captureconsole.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaptureConsole: () => (/* binding */ CaptureConsole),\n/* harmony export */   captureConsoleIntegration: () => (/* binding */ captureConsoleIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/console.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/severity.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n\n\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options = {}) => {\n  const levels = options.levels || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!(\"console\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ)) {\n        return;\n      }\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.addConsoleInstrumentationHandler)(({ args, level }) => {\n        if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) ;\n\nconst captureConsoleIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.defineIntegration)(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst CaptureConsole = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n)\n\n;\n\nfunction consoleHandler(args, level) {\n  const captureContext = {\n    level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.severityLevelFromString)(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.withScope)(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.addExceptionMechanism)(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.safeJoin)(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureMessage)(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureException)(error, captureContext);\n      return;\n    }\n\n    const message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.safeJoin)(args, ' ');\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureMessage)(message, captureContext);\n  });\n}\n\n\n//# sourceMappingURL=captureconsole.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2NhcHR1cmVjb25zb2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBc0k7QUFDaUI7O0FBRXZKOztBQUVBLGlEQUFpRDtBQUNqRCxtQ0FBbUMseURBQWM7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLFlBQVksa0VBQXVCO0FBQ25DO0FBQ0E7O0FBRUEsTUFBTSwrRUFBZ0MsSUFBSSxhQUFhO0FBQ3ZELFlBQVksdURBQVM7QUFDckI7QUFDQTs7QUFFQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELGtDQUFrQywrREFBaUI7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIseUVBQTJCO0FBQ2xEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxzRUFBdUI7QUFDbEM7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxFQUFFLHVEQUFTO0FBQ1g7QUFDQTs7QUFFQSxNQUFNLG9FQUFxQjtBQUMzQjtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBLEtBQUs7O0FBRUw7QUFDQSwyQ0FBMkMsdURBQVEseUNBQXlDO0FBQzVGO0FBQ0EsTUFBTSw0REFBYztBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLDhEQUFnQjtBQUN0QjtBQUNBOztBQUVBLG9CQUFvQix1REFBUTtBQUM1QixJQUFJLDREQUFjO0FBQ2xCLEdBQUc7QUFDSDs7QUFFcUQ7QUFDckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vY2FwdHVyZWNvbnNvbGUuanM/ZThhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzLCBnZXRDbGllbnQsIHdpdGhTY29wZSwgY2FwdHVyZU1lc3NhZ2UsIGNhcHR1cmVFeGNlcHRpb24gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgQ09OU09MRV9MRVZFTFMsIEdMT0JBTF9PQkosIGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBzZXZlcml0eUxldmVsRnJvbVN0cmluZywgYWRkRXhjZXB0aW9uTWVjaGFuaXNtLCBzYWZlSm9pbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0NhcHR1cmVDb25zb2xlJztcblxuY29uc3QgX2NhcHR1cmVDb25zb2xlSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBsZXZlbHMgPSBvcHRpb25zLmxldmVscyB8fCBDT05TT0xFX0xFVkVMUztcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgLy8gVE9ETyB2ODogUmVtb3ZlIHRoaXNcbiAgICBzZXR1cE9uY2UoKSB7fSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICBzZXR1cChjbGllbnQpIHtcbiAgICAgIGlmICghKCdjb25zb2xlJyBpbiBHTE9CQUxfT0JKKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyKCh7IGFyZ3MsIGxldmVsIH0pID0+IHtcbiAgICAgICAgaWYgKGdldENsaWVudCgpICE9PSBjbGllbnQgfHwgIWxldmVscy5pbmNsdWRlcyhsZXZlbCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlSGFuZGxlcihhcmdzLCBsZXZlbCk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBjYXB0dXJlQ29uc29sZUludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX2NhcHR1cmVDb25zb2xlSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIFNlbmQgQ29uc29sZSBBUEkgY2FsbHMgYXMgU2VudHJ5IEV2ZW50cy5cbiAqIEBkZXByZWNhdGVkIFVzZSBgY2FwdHVyZUNvbnNvbGVJbnRlZ3JhdGlvbigpYCBpbnN0ZWFkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IENhcHR1cmVDb25zb2xlID0gY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzKFxuICBJTlRFR1JBVElPTl9OQU1FLFxuICBjYXB0dXJlQ29uc29sZUludGVncmF0aW9uLFxuKVxuXG47XG5cbmZ1bmN0aW9uIGNvbnNvbGVIYW5kbGVyKGFyZ3MsIGxldmVsKSB7XG4gIGNvbnN0IGNhcHR1cmVDb250ZXh0ID0ge1xuICAgIGxldmVsOiBzZXZlcml0eUxldmVsRnJvbVN0cmluZyhsZXZlbCksXG4gICAgZXh0cmE6IHtcbiAgICAgIGFyZ3VtZW50czogYXJncyxcbiAgICB9LFxuICB9O1xuXG4gIHdpdGhTY29wZShzY29wZSA9PiB7XG4gICAgc2NvcGUuYWRkRXZlbnRQcm9jZXNzb3IoZXZlbnQgPT4ge1xuICAgICAgZXZlbnQubG9nZ2VyID0gJ2NvbnNvbGUnO1xuXG4gICAgICBhZGRFeGNlcHRpb25NZWNoYW5pc20oZXZlbnQsIHtcbiAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgIHR5cGU6ICdjb25zb2xlJyxcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZXZlbnQ7XG4gICAgfSk7XG5cbiAgICBpZiAobGV2ZWwgPT09ICdhc3NlcnQnICYmIGFyZ3NbMF0gPT09IGZhbHNlKSB7XG4gICAgICBjb25zdCBtZXNzYWdlID0gYEFzc2VydGlvbiBmYWlsZWQ6ICR7c2FmZUpvaW4oYXJncy5zbGljZSgxKSwgJyAnKSB8fCAnY29uc29sZS5hc3NlcnQnfWA7XG4gICAgICBzY29wZS5zZXRFeHRyYSgnYXJndW1lbnRzJywgYXJncy5zbGljZSgxKSk7XG4gICAgICBjYXB0dXJlTWVzc2FnZShtZXNzYWdlLCBjYXB0dXJlQ29udGV4dCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZXJyb3IgPSBhcmdzLmZpbmQoYXJnID0+IGFyZyBpbnN0YW5jZW9mIEVycm9yKTtcbiAgICBpZiAobGV2ZWwgPT09ICdlcnJvcicgJiYgZXJyb3IpIHtcbiAgICAgIGNhcHR1cmVFeGNlcHRpb24oZXJyb3IsIGNhcHR1cmVDb250ZXh0KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBtZXNzYWdlID0gc2FmZUpvaW4oYXJncywgJyAnKTtcbiAgICBjYXB0dXJlTWVzc2FnZShtZXNzYWdlLCBjYXB0dXJlQ29udGV4dCk7XG4gIH0pO1xufVxuXG5leHBvcnQgeyBDYXB0dXJlQ29uc29sZSwgY2FwdHVyZUNvbnNvbGVJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FwdHVyZWNvbnNvbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/captureconsole.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/debug-build.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/debug-build.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2RlYnVnLWJ1aWxkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQXVDLElBQUksS0FBZ0I7O0FBRXpEO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2RlYnVnLWJ1aWxkLmpzP2I1OTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIHNlcnZlcyBhcyBhIGJ1aWxkIHRpbWUgZmxhZyB0aGF0IHdpbGwgYmUgdHJ1ZSBieSBkZWZhdWx0LCBidXQgZmFsc2UgaW4gbm9uLWRlYnVnIGJ1aWxkcyBvciBpZiB1c2VycyByZXBsYWNlIGBfX1NFTlRSWV9ERUJVR19fYCBpbiB0aGVpciBnZW5lcmF0ZWQgY29kZS5cbiAqXG4gKiBBVFRFTlRJT046IFRoaXMgY29uc3RhbnQgbXVzdCBuZXZlciBjcm9zcyBwYWNrYWdlIGJvdW5kYXJpZXMgKGkuZS4gYmUgZXhwb3J0ZWQpIHRvIGd1YXJhbnRlZSB0aGF0IGl0IGNhbiBiZSB1c2VkIGZvciB0cmVlIHNoYWtpbmcuXG4gKi9cbmNvbnN0IERFQlVHX0JVSUxEID0gKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKTtcblxuZXhwb3J0IHsgREVCVUdfQlVJTEQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLWJ1aWxkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/debug.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/debug.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Debug: () => (/* binding */ Debug),\n/* harmony export */   debugIntegration: () => (/* binding */ debugIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\nconst INTEGRATION_NAME = 'Debug';\n\nconst _debugIntegration = ((options = {}) => {\n  const _options = {\n    debugger: false,\n    stringify: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!client.on) {\n        return;\n      }\n\n      client.on('beforeSendEvent', (event, hint) => {\n        if (_options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n          if (_options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint && Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint && Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      });\n    },\n  };\n}) ;\n\nconst debugIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_debugIntegration);\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production.\n *\n * @deprecated Use `debugIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Debug = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(INTEGRATION_NAME, debugIntegration)\n\n;\n\n\n//# sourceMappingURL=debug.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2RlYnVnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEU7QUFDL0I7O0FBRS9DOztBQUVBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSw2REFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCx5QkFBeUIsK0RBQWlCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUVBQTJCOztBQUV6Qzs7QUFFbUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vZGVidWcuanM/OTJhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGNvbnNvbGVTYW5kYm94IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnRGVidWcnO1xuXG5jb25zdCBfZGVidWdJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IF9vcHRpb25zID0ge1xuICAgIGRlYnVnZ2VyOiBmYWxzZSxcbiAgICBzdHJpbmdpZnk6IGZhbHNlLFxuICAgIC4uLm9wdGlvbnMsXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIC8vIFRPRE8gdjg6IFJlbW92ZSB0aGlzXG4gICAgc2V0dXBPbmNlKCkge30sIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBpZiAoIWNsaWVudC5vbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNsaWVudC5vbignYmVmb3JlU2VuZEV2ZW50JywgKGV2ZW50LCBoaW50KSA9PiB7XG4gICAgICAgIGlmIChfb3B0aW9ucy5kZWJ1Z2dlcikge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1kZWJ1Z2dlclxuICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICAgICAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICAgICAgaWYgKF9vcHRpb25zLnN0cmluZ2lmeSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXZlbnQsIG51bGwsIDIpKTtcbiAgICAgICAgICAgIGlmIChoaW50ICYmIE9iamVjdC5rZXlzKGhpbnQpLmxlbmd0aCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShoaW50LCBudWxsLCAyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAgICAgICAgICAgIGlmIChoaW50ICYmIE9iamVjdC5rZXlzKGhpbnQpLmxlbmd0aCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhoaW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgIH0pO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IGRlYnVnSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfZGVidWdJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogSW50ZWdyYXRpb24gdG8gZGVidWcgc2VudCBTZW50cnkgZXZlbnRzLlxuICogVGhpcyBpbnRlZ3JhdGlvbiBzaG91bGQgbm90IGJlIHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYGRlYnVnSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBEZWJ1ZyA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhJTlRFR1JBVElPTl9OQU1FLCBkZWJ1Z0ludGVncmF0aW9uKVxuXG47XG5cbmV4cG9ydCB7IERlYnVnLCBkZWJ1Z0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/debug.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/dedupe.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/dedupe.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dedupe: () => (/* binding */ Dedupe),\n/* harmony export */   _shouldDropEvent: () => (/* binding */ _shouldDropEvent),\n/* harmony export */   dedupeIntegration: () => (/* binding */ dedupeIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/integrations/esm/debug-build.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\nconst dedupeIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Dedupe = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, dedupeIntegration)\n\n;\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/dedupe.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/extraerrordata.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/extraerrordata.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtraErrorData: () => (/* binding */ ExtraErrorData),\n/* harmony export */   extraErrorDataIntegration: () => (/* binding */ extraErrorDataIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/integrations/esm/debug-build.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'ExtraErrorData';\n\nconst _extraErrorDataIntegration = ((options = {}) => {\n  const depth = options.depth || 3;\n\n  // TODO(v8): Flip the default for this option to true\n  const captureErrorCause = options.captureErrorCause || false;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, hint) {\n      return _enhanceEventWithErrorData(event, hint, depth, captureErrorCause);\n    },\n  };\n}) ;\n\nconst extraErrorDataIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_extraErrorDataIntegration);\n\n/**\n * Extract additional data for from original exceptions.\n * @deprecated Use `extraErrorDataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ExtraErrorData = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  extraErrorDataIntegration,\n)\n\n;\n\nfunction _enhanceEventWithErrorData(\n  event,\n  hint = {},\n  depth,\n  captureErrorCause,\n) {\n  if (!hint.originalException || !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(hint.originalException)) {\n    return event;\n  }\n  const exceptionName = (hint.originalException ).name || hint.originalException.constructor.name;\n\n  const errorData = _extractErrorData(hint.originalException , captureErrorCause);\n\n  if (errorData) {\n    const contexts = {\n      ...event.contexts,\n    };\n\n    const normalizedErrorData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.normalize)(errorData, depth);\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(normalizedErrorData)) {\n      // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n      // potentially truncate the data we just already normalized, with a certain depth setting.\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addNonEnumerableProperty)(normalizedErrorData, '__sentry_skip_normalization__', true);\n      contexts[exceptionName] = normalizedErrorData;\n    }\n\n    return {\n      ...event,\n      contexts,\n    };\n  }\n\n  return event;\n}\n\n/**\n * Extract extra information from the Error object\n */\nfunction _extractErrorData(error, captureErrorCause) {\n  // We are trying to enhance already existing event, so no harm done if it won't succeed\n  try {\n    const nativeKeys = [\n      'name',\n      'message',\n      'stack',\n      'line',\n      'column',\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'toJSON',\n    ];\n\n    const extraErrorInfo = {};\n\n    // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n    for (const key of Object.keys(error)) {\n      if (nativeKeys.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = error[key];\n      extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(value) ? value.toString() : value;\n    }\n\n    // Error.cause is a standard property that is non enumerable, we therefore need to access it separately.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    if (captureErrorCause && error.cause !== undefined) {\n      extraErrorInfo.cause = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(error.cause) ? error.cause.toString() : error.cause;\n    }\n\n    // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n    if (typeof error.toJSON === 'function') {\n      const serializedError = error.toJSON() ;\n\n      for (const key of Object.keys(serializedError)) {\n        const value = serializedError[key];\n        extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(value) ? value.toString() : value;\n      }\n    }\n\n    return extraErrorInfo;\n  } catch (oO) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.error('Unable to extract extra data from the Error object:', oO);\n  }\n\n  return null;\n}\n\n\n//# sourceMappingURL=extraerrordata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2V4dHJhZXJyb3JkYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThFO0FBQ3NCO0FBQ3JEOztBQUUvQzs7QUFFQSxpREFBaUQ7QUFDakQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsa0NBQWtDLCtEQUFpQjs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix5RUFBMkI7QUFDbEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHNEQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnQ0FBZ0Msd0RBQVM7O0FBRXpDLFFBQVEsNERBQWE7QUFDckI7QUFDQTtBQUNBLE1BQU0sdUVBQXdCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNEQUFPO0FBQ25DOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzREFBTztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4QixzREFBTztBQUNyQztBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKLElBQUksd0RBQVcsSUFBSSxpREFBTTtBQUN6Qjs7QUFFQTtBQUNBOztBQUVxRDtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvaW50ZWdyYXRpb25zL2VzbS9leHRyYWVycm9yZGF0YS5qcz9mM2RkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUludGVncmF0aW9uLCBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgaXNFcnJvciwgbm9ybWFsaXplLCBpc1BsYWluT2JqZWN0LCBhZGROb25FbnVtZXJhYmxlUHJvcGVydHksIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdFeHRyYUVycm9yRGF0YSc7XG5cbmNvbnN0IF9leHRyYUVycm9yRGF0YUludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3QgZGVwdGggPSBvcHRpb25zLmRlcHRoIHx8IDM7XG5cbiAgLy8gVE9ETyh2OCk6IEZsaXAgdGhlIGRlZmF1bHQgZm9yIHRoaXMgb3B0aW9uIHRvIHRydWVcbiAgY29uc3QgY2FwdHVyZUVycm9yQ2F1c2UgPSBvcHRpb25zLmNhcHR1cmVFcnJvckNhdXNlIHx8IGZhbHNlO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAvLyBUT0RPIHY4OiBSZW1vdmUgdGhpc1xuICAgIHNldHVwT25jZSgpIHt9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIHByb2Nlc3NFdmVudChldmVudCwgaGludCkge1xuICAgICAgcmV0dXJuIF9lbmhhbmNlRXZlbnRXaXRoRXJyb3JEYXRhKGV2ZW50LCBoaW50LCBkZXB0aCwgY2FwdHVyZUVycm9yQ2F1c2UpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IGV4dHJhRXJyb3JEYXRhSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfZXh0cmFFcnJvckRhdGFJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogRXh0cmFjdCBhZGRpdGlvbmFsIGRhdGEgZm9yIGZyb20gb3JpZ2luYWwgZXhjZXB0aW9ucy5cbiAqIEBkZXByZWNhdGVkIFVzZSBgZXh0cmFFcnJvckRhdGFJbnRlZ3JhdGlvbigpYCBpbnN0ZWFkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IEV4dHJhRXJyb3JEYXRhID0gY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzKFxuICBJTlRFR1JBVElPTl9OQU1FLFxuICBleHRyYUVycm9yRGF0YUludGVncmF0aW9uLFxuKVxuXG47XG5cbmZ1bmN0aW9uIF9lbmhhbmNlRXZlbnRXaXRoRXJyb3JEYXRhKFxuICBldmVudCxcbiAgaGludCA9IHt9LFxuICBkZXB0aCxcbiAgY2FwdHVyZUVycm9yQ2F1c2UsXG4pIHtcbiAgaWYgKCFoaW50Lm9yaWdpbmFsRXhjZXB0aW9uIHx8ICFpc0Vycm9yKGhpbnQub3JpZ2luYWxFeGNlcHRpb24pKSB7XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG4gIGNvbnN0IGV4Y2VwdGlvbk5hbWUgPSAoaGludC5vcmlnaW5hbEV4Y2VwdGlvbiApLm5hbWUgfHwgaGludC5vcmlnaW5hbEV4Y2VwdGlvbi5jb25zdHJ1Y3Rvci5uYW1lO1xuXG4gIGNvbnN0IGVycm9yRGF0YSA9IF9leHRyYWN0RXJyb3JEYXRhKGhpbnQub3JpZ2luYWxFeGNlcHRpb24gLCBjYXB0dXJlRXJyb3JDYXVzZSk7XG5cbiAgaWYgKGVycm9yRGF0YSkge1xuICAgIGNvbnN0IGNvbnRleHRzID0ge1xuICAgICAgLi4uZXZlbnQuY29udGV4dHMsXG4gICAgfTtcblxuICAgIGNvbnN0IG5vcm1hbGl6ZWRFcnJvckRhdGEgPSBub3JtYWxpemUoZXJyb3JEYXRhLCBkZXB0aCk7XG5cbiAgICBpZiAoaXNQbGFpbk9iamVjdChub3JtYWxpemVkRXJyb3JEYXRhKSkge1xuICAgICAgLy8gV2UgbWFyayB0aGUgZXJyb3IgZGF0YSBhcyBcImFscmVhZHkgbm9ybWFsaXplZFwiIGhlcmUsIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCBvdGhlciBub3JtYWxpemF0aW9uIHByb2NlZHVyZXMgdG9cbiAgICAgIC8vIHBvdGVudGlhbGx5IHRydW5jYXRlIHRoZSBkYXRhIHdlIGp1c3QgYWxyZWFkeSBub3JtYWxpemVkLCB3aXRoIGEgY2VydGFpbiBkZXB0aCBzZXR0aW5nLlxuICAgICAgYWRkTm9uRW51bWVyYWJsZVByb3BlcnR5KG5vcm1hbGl6ZWRFcnJvckRhdGEsICdfX3NlbnRyeV9za2lwX25vcm1hbGl6YXRpb25fXycsIHRydWUpO1xuICAgICAgY29udGV4dHNbZXhjZXB0aW9uTmFtZV0gPSBub3JtYWxpemVkRXJyb3JEYXRhO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAuLi5ldmVudCxcbiAgICAgIGNvbnRleHRzLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gZXZlbnQ7XG59XG5cbi8qKlxuICogRXh0cmFjdCBleHRyYSBpbmZvcm1hdGlvbiBmcm9tIHRoZSBFcnJvciBvYmplY3RcbiAqL1xuZnVuY3Rpb24gX2V4dHJhY3RFcnJvckRhdGEoZXJyb3IsIGNhcHR1cmVFcnJvckNhdXNlKSB7XG4gIC8vIFdlIGFyZSB0cnlpbmcgdG8gZW5oYW5jZSBhbHJlYWR5IGV4aXN0aW5nIGV2ZW50LCBzbyBubyBoYXJtIGRvbmUgaWYgaXQgd29uJ3Qgc3VjY2VlZFxuICB0cnkge1xuICAgIGNvbnN0IG5hdGl2ZUtleXMgPSBbXG4gICAgICAnbmFtZScsXG4gICAgICAnbWVzc2FnZScsXG4gICAgICAnc3RhY2snLFxuICAgICAgJ2xpbmUnLFxuICAgICAgJ2NvbHVtbicsXG4gICAgICAnZmlsZU5hbWUnLFxuICAgICAgJ2xpbmVOdW1iZXInLFxuICAgICAgJ2NvbHVtbk51bWJlcicsXG4gICAgICAndG9KU09OJyxcbiAgICBdO1xuXG4gICAgY29uc3QgZXh0cmFFcnJvckluZm8gPSB7fTtcblxuICAgIC8vIFdlIHdhbnQgb25seSBlbnVtZXJhYmxlIHByb3BlcnRpZXMsIHRodXMgYGdldE93blByb3BlcnR5TmFtZXNgIGlzIHJlZHVuZGFudCBoZXJlLCBhcyB3ZSBmaWx0ZXIga2V5cyBhbnl3YXkuXG4gICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoZXJyb3IpKSB7XG4gICAgICBpZiAobmF0aXZlS2V5cy5pbmRleE9mKGtleSkgIT09IC0xKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgY29uc3QgdmFsdWUgPSBlcnJvcltrZXldO1xuICAgICAgZXh0cmFFcnJvckluZm9ba2V5XSA9IGlzRXJyb3IodmFsdWUpID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlO1xuICAgIH1cblxuICAgIC8vIEVycm9yLmNhdXNlIGlzIGEgc3RhbmRhcmQgcHJvcGVydHkgdGhhdCBpcyBub24gZW51bWVyYWJsZSwgd2UgdGhlcmVmb3JlIG5lZWQgdG8gYWNjZXNzIGl0IHNlcGFyYXRlbHkuXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRXJyb3IvY2F1c2VcbiAgICBpZiAoY2FwdHVyZUVycm9yQ2F1c2UgJiYgZXJyb3IuY2F1c2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZXh0cmFFcnJvckluZm8uY2F1c2UgPSBpc0Vycm9yKGVycm9yLmNhdXNlKSA/IGVycm9yLmNhdXNlLnRvU3RyaW5nKCkgOiBlcnJvci5jYXVzZTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiBzb21lb25lIGF0dGFjaGVkIGB0b0pTT05gIG1ldGhvZCB0byBncmFiIGV2ZW4gbW9yZSBwcm9wZXJ0aWVzIChlZy4gYXhpb3MgaXMgZG9pbmcgdGhhdClcbiAgICBpZiAodHlwZW9mIGVycm9yLnRvSlNPTiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29uc3Qgc2VyaWFsaXplZEVycm9yID0gZXJyb3IudG9KU09OKCkgO1xuXG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhzZXJpYWxpemVkRXJyb3IpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gc2VyaWFsaXplZEVycm9yW2tleV07XG4gICAgICAgIGV4dHJhRXJyb3JJbmZvW2tleV0gPSBpc0Vycm9yKHZhbHVlKSA/IHZhbHVlLnRvU3RyaW5nKCkgOiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZXh0cmFFcnJvckluZm87XG4gIH0gY2F0Y2ggKG9PKSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmVycm9yKCdVbmFibGUgdG8gZXh0cmFjdCBleHRyYSBkYXRhIGZyb20gdGhlIEVycm9yIG9iamVjdDonLCBvTyk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IHsgRXh0cmFFcnJvckRhdGEsIGV4dHJhRXJyb3JEYXRhSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhZXJyb3JkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/extraerrordata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/httpclient.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/httpclient.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClient: () => (/* binding */ HttpClient),\n/* harmony export */   httpClientIntegration: () => (/* binding */ httpClientIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/fetch.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/xhr.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/integrations/esm/debug-build.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'HttpClient';\n\nconst _httpClientIntegration = ((options = {}) => {\n  const _options = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) ;\n\nconst httpClientIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_httpClientIntegration);\n\n/**\n * Create events for failed client side HTTP requests.\n * @deprecated Use `httpClientIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst HttpClient = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(INTEGRATION_NAME, httpClientIntegration)\n\n;\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options,\n  requestInfo,\n  response,\n  requestInit,\n) {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [{ headers: requestHeaders, cookies: requestCookies }, { headers: responseHeaders, cookies: responseCookies }] = [\n        { cookieHeader: 'Cookie', obj: request },\n        { cookieHeader: 'Set-Cookie', obj: response },\n      ].map(({ cookieHeader, obj }) => {\n        const headers = _extractFetchHeaders(obj.headers);\n        let cookies;\n\n        try {\n          const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n          if (cookieString) {\n            cookies = _parseCookieString(cookieString);\n          }\n        } catch (e) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Could not extract cookies from header ${cookieHeader}`);\n        }\n\n        return {\n          headers,\n          cookies,\n        };\n      });\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n    });\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureEvent)(event);\n  }\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options,\n  xhr,\n  method,\n  headers,\n) {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Could not extract cookies from response headers');\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Could not extract headers from response');\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n    });\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureEvent)(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers) {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString) {\n  return cookieString.split('; ').reduce((acc, cookie) => {\n    const [key, value] = cookie.split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers) {\n  const result = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets,\n  target,\n) {\n  return failedRequestTargets.some((givenRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes,\n  status,\n) {\n  return failedRequestStatusCodes.some((range) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client, options) {\n  if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.addFetchInstrumentationHandler)(handlerData => {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)() !== client) {\n      return;\n    }\n\n    const { response, args } = handlerData;\n    const [requestInfo, requestInit] = args ;\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response , requestInit);\n  });\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client, options) {\n  if (!(\"XMLHttpRequest\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ)) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.addXhrInstrumentationHandler)(handlerData => {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)() !== client) {\n      return;\n    }\n\n    const xhr = handlerData.xhr ;\n\n    const sentryXhrData = xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options, status, url) {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !(0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.isSentryRequestUrl)(url, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data\n\n) {\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.addExceptionMechanism)(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo, requestInit) {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n\n\n//# sourceMappingURL=httpclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/httpclient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/reportingobserver.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/reportingobserver.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReportingObserver: () => (/* binding */ ReportingObserver),\n/* harmony export */   reportingObserverIntegration: () => (/* binding */ reportingObserverIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/supports.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _reportingObserverIntegration = ((options = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports) {\n    if (!SETUP_CLIENTS.has((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)() )) {\n      return;\n    }\n\n    for (const report of reports) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody\n\n = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body ;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body ;\n            details = body.message || details;\n          }\n        }\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureMessage)(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.supportsReportingObserver)()) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      const observer = new (WINDOW ).ReportingObserver(handler, {\n        buffered: true,\n        types,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      observer.observe();\n    },\n\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\nconst reportingObserverIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.defineIntegration)(_reportingObserverIntegration);\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n * @deprecated Use `reportingObserverIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ReportingObserver = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  reportingObserverIntegration,\n)\n\n;\n\n\n//# sourceMappingURL=reportingobserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3JlcG9ydGluZ29ic2VydmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvSDtBQUM5Qzs7QUFFdEUsZUFBZSxxREFBVTs7QUFFekI7O0FBRUE7O0FBRUEsb0RBQW9EO0FBQ3BEOztBQUVBO0FBQ0E7QUFDQSwyQkFBMkIsdURBQVM7QUFDcEM7QUFDQTs7QUFFQTtBQUNBLE1BQU0sdURBQVM7QUFDZjs7QUFFQSw0Q0FBNEMsWUFBWTtBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSw0REFBYyxJQUFJLE1BQU0sSUFBSSxRQUFRO0FBQzVDLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0VBQXlCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELHFDQUFxQywrREFBaUI7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUVBQTJCO0FBQ3JEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFMkQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vcmVwb3J0aW5nb2JzZXJ2ZXIuanM/YzgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzLCBnZXRDbGllbnQsIHdpdGhTY29wZSwgY2FwdHVyZU1lc3NhZ2UgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlciwgR0xPQkFMX09CSiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBXSU5ET1cgPSBHTE9CQUxfT0JKIDtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdSZXBvcnRpbmdPYnNlcnZlcic7XG5cbmNvbnN0IFNFVFVQX0NMSUVOVFMgPSBuZXcgV2Vha01hcCgpO1xuXG5jb25zdCBfcmVwb3J0aW5nT2JzZXJ2ZXJJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IHR5cGVzID0gb3B0aW9ucy50eXBlcyB8fCBbJ2NyYXNoJywgJ2RlcHJlY2F0aW9uJywgJ2ludGVydmVudGlvbiddO1xuXG4gIC8qKiBIYW5kbGVyIGZvciB0aGUgcmVwb3J0aW5nIG9ic2VydmVyLiAqL1xuICBmdW5jdGlvbiBoYW5kbGVyKHJlcG9ydHMpIHtcbiAgICBpZiAoIVNFVFVQX0NMSUVOVFMuaGFzKGdldENsaWVudCgpICkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IHJlcG9ydCBvZiByZXBvcnRzKSB7XG4gICAgICB3aXRoU2NvcGUoc2NvcGUgPT4ge1xuICAgICAgICBzY29wZS5zZXRFeHRyYSgndXJsJywgcmVwb3J0LnVybCk7XG5cbiAgICAgICAgY29uc3QgbGFiZWwgPSBgUmVwb3J0aW5nT2JzZXJ2ZXIgWyR7cmVwb3J0LnR5cGV9XWA7XG4gICAgICAgIGxldCBkZXRhaWxzID0gJ05vIGRldGFpbHMgYXZhaWxhYmxlJztcblxuICAgICAgICBpZiAocmVwb3J0LmJvZHkpIHtcbiAgICAgICAgICAvLyBPYmplY3Qua2V5cyBkb2Vzbid0IHdvcmsgb24gUmVwb3J0Qm9keSwgYXMgYWxsIHByb3BlcnRpZXMgYXJlIGluaGVpcnRlZFxuICAgICAgICAgIGNvbnN0IHBsYWluQm9keVxuXG4gPSB7fTtcblxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gcmVwb3J0LmJvZHkpIHtcbiAgICAgICAgICAgIHBsYWluQm9keVtwcm9wXSA9IHJlcG9ydC5ib2R5W3Byb3BdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNjb3BlLnNldEV4dHJhKCdib2R5JywgcGxhaW5Cb2R5KTtcblxuICAgICAgICAgIGlmIChyZXBvcnQudHlwZSA9PT0gJ2NyYXNoJykge1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IHJlcG9ydC5ib2R5IDtcbiAgICAgICAgICAgIC8vIEEgZmFuY3kgd2F5IHRvIGNyZWF0ZSBhIG1lc3NhZ2Ugb3V0IG9mIGNyYXNoSWQgT1IgcmVhc29uIE9SIGJvdGggT1IgZmFsbGJhY2tcbiAgICAgICAgICAgIGRldGFpbHMgPSBbYm9keS5jcmFzaElkIHx8ICcnLCBib2R5LnJlYXNvbiB8fCAnJ10uam9pbignICcpLnRyaW0oKSB8fCBkZXRhaWxzO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBib2R5ID0gcmVwb3J0LmJvZHkgO1xuICAgICAgICAgICAgZGV0YWlscyA9IGJvZHkubWVzc2FnZSB8fCBkZXRhaWxzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNhcHR1cmVNZXNzYWdlKGAke2xhYmVsfTogJHtkZXRhaWxzfWApO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGlmICghc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlcigpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcywgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgKFdJTkRPVyApLlJlcG9ydGluZ09ic2VydmVyKGhhbmRsZXIsIHtcbiAgICAgICAgYnVmZmVyZWQ6IHRydWUsXG4gICAgICAgIHR5cGVzLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIG9ic2VydmVyLm9ic2VydmUoKTtcbiAgICB9LFxuXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBTRVRVUF9DTElFTlRTLnNldChjbGllbnQsIHRydWUpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IHJlcG9ydGluZ09ic2VydmVySW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfcmVwb3J0aW5nT2JzZXJ2ZXJJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogUmVwb3J0aW5nIEFQSSBpbnRlZ3JhdGlvbiAtIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9yZXBvcnRpbmcvXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHJlcG9ydGluZ09ic2VydmVySW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBSZXBvcnRpbmdPYnNlcnZlciA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgcmVwb3J0aW5nT2JzZXJ2ZXJJbnRlZ3JhdGlvbixcbilcblxuO1xuXG5leHBvcnQgeyBSZXBvcnRpbmdPYnNlcnZlciwgcmVwb3J0aW5nT2JzZXJ2ZXJJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVwb3J0aW5nb2JzZXJ2ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/reportingobserver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/rewriteframes.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/rewriteframes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RewriteFrames: () => (/* binding */ RewriteFrames),\n/* harmony export */   rewriteFramesIntegration: () => (/* binding */ rewriteFramesIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/path.js\");\n\n\n\nconst INTEGRATION_NAME = 'RewriteFrames';\n\nconst _rewriteFramesIntegration = ((options = {}) => {\n  const root = options.root;\n  const prefix = options.prefix || 'app:///';\n\n  const iteratee =\n    options.iteratee ||\n    ((frame) => {\n      if (!frame.filename) {\n        return frame;\n      }\n      // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n      const isWindowsFrame =\n        /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n        // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n        (frame.filename.includes('\\\\') && !frame.filename.includes('/'));\n      // Check if the frame filename begins with `/`\n      const startsWithSlash = /^\\//.test(frame.filename);\n      if (isWindowsFrame || startsWithSlash) {\n        const filename = isWindowsFrame\n          ? frame.filename\n              .replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n              .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n        const base = root ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.relative)(root, filename) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.basename)(filename);\n        frame.filename = `${prefix}${base}`;\n      }\n      return frame;\n    });\n\n  /** Process an exception event. */\n  function _processExceptionsEvent(event) {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception.values.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: _processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** Process a stack trace. */\n  function _processStacktrace(stacktrace) {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f)),\n    };\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(originalEvent) {\n      let processedEvent = originalEvent;\n\n      if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n        processedEvent = _processExceptionsEvent(processedEvent);\n      }\n\n      return processedEvent;\n    },\n  };\n}) ;\n\nconst rewriteFramesIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_rewriteFramesIntegration);\n\n/**\n * Rewrite event frames paths.\n * @deprecated Use `rewriteFramesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst RewriteFrames = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  rewriteFramesIntegration,\n)\n\n;\n\n\n//# sourceMappingURL=rewriteframes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Jld3JpdGVmcmFtZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4RTtBQUMzQjs7QUFFbkQ7O0FBRUEsZ0RBQWdEO0FBQ2hEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVEsbUJBQW1CLHVEQUFRO0FBQy9ELDRCQUE0QixPQUFPLEVBQUUsS0FBSztBQUMxQztBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGtEQUFrRDtBQUN4RixXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELGlDQUFpQywrREFBaUI7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUVBQTJCO0FBQ2pEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFbUQ7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vcmV3cml0ZWZyYW1lcy5qcz9iZjIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUludGVncmF0aW9uLCBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgcmVsYXRpdmUsIGJhc2VuYW1lIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnUmV3cml0ZUZyYW1lcyc7XG5cbmNvbnN0IF9yZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCByb290ID0gb3B0aW9ucy5yb290O1xuICBjb25zdCBwcmVmaXggPSBvcHRpb25zLnByZWZpeCB8fCAnYXBwOi8vLyc7XG5cbiAgY29uc3QgaXRlcmF0ZWUgPVxuICAgIG9wdGlvbnMuaXRlcmF0ZWUgfHxcbiAgICAoKGZyYW1lKSA9PiB7XG4gICAgICBpZiAoIWZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICAgIHJldHVybiBmcmFtZTtcbiAgICAgIH1cbiAgICAgIC8vIERldGVybWluZSBpZiB0aGlzIGlzIGEgV2luZG93cyBmcmFtZSBieSBjaGVja2luZyBmb3IgYSBXaW5kb3dzLXN0eWxlIHByZWZpeCBzdWNoIGFzIGBDOlxcYFxuICAgICAgY29uc3QgaXNXaW5kb3dzRnJhbWUgPVxuICAgICAgICAvXlthLXpBLVpdOlxcXFwvLnRlc3QoZnJhbWUuZmlsZW5hbWUpIHx8XG4gICAgICAgIC8vIG9yIHRoZSBwcmVzZW5jZSBvZiBhIGJhY2tzbGFzaCB3aXRob3V0IGEgZm9yd2FyZCBzbGFzaCAod2hpY2ggYXJlIG5vdCBhbGxvd2VkIG9uIFdpbmRvd3MpXG4gICAgICAgIChmcmFtZS5maWxlbmFtZS5pbmNsdWRlcygnXFxcXCcpICYmICFmcmFtZS5maWxlbmFtZS5pbmNsdWRlcygnLycpKTtcbiAgICAgIC8vIENoZWNrIGlmIHRoZSBmcmFtZSBmaWxlbmFtZSBiZWdpbnMgd2l0aCBgL2BcbiAgICAgIGNvbnN0IHN0YXJ0c1dpdGhTbGFzaCA9IC9eXFwvLy50ZXN0KGZyYW1lLmZpbGVuYW1lKTtcbiAgICAgIGlmIChpc1dpbmRvd3NGcmFtZSB8fCBzdGFydHNXaXRoU2xhc2gpIHtcbiAgICAgICAgY29uc3QgZmlsZW5hbWUgPSBpc1dpbmRvd3NGcmFtZVxuICAgICAgICAgID8gZnJhbWUuZmlsZW5hbWVcbiAgICAgICAgICAgICAgLnJlcGxhY2UoL15bYS16QS1aXTovLCAnJykgLy8gcmVtb3ZlIFdpbmRvd3Mtc3R5bGUgcHJlZml4XG4gICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csICcvJykgLy8gcmVwbGFjZSBhbGwgYFxcXFxgIGluc3RhbmNlcyB3aXRoIGAvYFxuICAgICAgICAgIDogZnJhbWUuZmlsZW5hbWU7XG4gICAgICAgIGNvbnN0IGJhc2UgPSByb290ID8gcmVsYXRpdmUocm9vdCwgZmlsZW5hbWUpIDogYmFzZW5hbWUoZmlsZW5hbWUpO1xuICAgICAgICBmcmFtZS5maWxlbmFtZSA9IGAke3ByZWZpeH0ke2Jhc2V9YDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmcmFtZTtcbiAgICB9KTtcblxuICAvKiogUHJvY2VzcyBhbiBleGNlcHRpb24gZXZlbnQuICovXG4gIGZ1bmN0aW9uIF9wcm9jZXNzRXhjZXB0aW9uc0V2ZW50KGV2ZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmV2ZW50LFxuICAgICAgICBleGNlcHRpb246IHtcbiAgICAgICAgICAuLi5ldmVudC5leGNlcHRpb24sXG4gICAgICAgICAgLy8gVGhlIGNoZWNrIGZvciB0aGlzIGlzIHBlcmZvcm1lZCBpbnNpZGUgYHByb2Nlc3NgIGNhbGwgaXRzZWxmLCBzYWZlIHRvIHNraXAgaGVyZVxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgdmFsdWVzOiBldmVudC5leGNlcHRpb24udmFsdWVzLm1hcCh2YWx1ZSA9PiAoe1xuICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAuLi4odmFsdWUuc3RhY2t0cmFjZSAmJiB7IHN0YWNrdHJhY2U6IF9wcm9jZXNzU3RhY2t0cmFjZSh2YWx1ZS5zdGFja3RyYWNlKSB9KSxcbiAgICAgICAgICB9KSksXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKF9vTykge1xuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH1cbiAgfVxuXG4gIC8qKiBQcm9jZXNzIGEgc3RhY2sgdHJhY2UuICovXG4gIGZ1bmN0aW9uIF9wcm9jZXNzU3RhY2t0cmFjZShzdGFja3RyYWNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YWNrdHJhY2UsXG4gICAgICBmcmFtZXM6IHN0YWNrdHJhY2UgJiYgc3RhY2t0cmFjZS5mcmFtZXMgJiYgc3RhY2t0cmFjZS5mcmFtZXMubWFwKGYgPT4gaXRlcmF0ZWUoZikpLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgLy8gVE9ETyB2ODogUmVtb3ZlIHRoaXNcbiAgICBzZXR1cE9uY2UoKSB7fSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICBwcm9jZXNzRXZlbnQob3JpZ2luYWxFdmVudCkge1xuICAgICAgbGV0IHByb2Nlc3NlZEV2ZW50ID0gb3JpZ2luYWxFdmVudDtcblxuICAgICAgaWYgKG9yaWdpbmFsRXZlbnQuZXhjZXB0aW9uICYmIEFycmF5LmlzQXJyYXkob3JpZ2luYWxFdmVudC5leGNlcHRpb24udmFsdWVzKSkge1xuICAgICAgICBwcm9jZXNzZWRFdmVudCA9IF9wcm9jZXNzRXhjZXB0aW9uc0V2ZW50KHByb2Nlc3NlZEV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb2Nlc3NlZEV2ZW50O1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9yZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIFJld3JpdGUgZXZlbnQgZnJhbWVzIHBhdGhzLlxuICogQGRlcHJlY2F0ZWQgVXNlIGByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBSZXdyaXRlRnJhbWVzID0gY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzKFxuICBJTlRFR1JBVElPTl9OQU1FLFxuICByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24sXG4pXG5cbjtcblxuZXhwb3J0IHsgUmV3cml0ZUZyYW1lcywgcmV3cml0ZUZyYW1lc0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXdyaXRlZnJhbWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/rewriteframes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/integrations/esm/sessiontiming.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/sessiontiming.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionTiming: () => (/* binding */ SessionTiming),\n/* harmony export */   sessionTimingIntegration: () => (/* binding */ sessionTimingIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\nconst INTEGRATION_NAME = 'SessionTiming';\n\nconst _sessionTimingIntegration = (() => {\n  const startTime = Date.now();\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      const now = Date.now();\n\n      return {\n        ...event,\n        extra: {\n          ...event.extra,\n          ['session:start']: startTime,\n          ['session:duration']: now - startTime,\n          ['session:end']: now,\n        },\n      };\n    },\n  };\n}) ;\n\nconst sessionTimingIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_sessionTimingIntegration);\n\n/**\n * This function adds duration since Sentry was initialized till the time event was sent.\n * @deprecated Use `sessionTimingIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst SessionTiming = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  sessionTimingIntegration,\n) ;\n\n\n//# sourceMappingURL=sessiontiming.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Nlc3Npb250aW1pbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThFOztBQUU5RTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxpQ0FBaUMsK0RBQWlCOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUEyQjtBQUNqRDtBQUNBO0FBQ0E7O0FBRW1EO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Nlc3Npb250aW1pbmcuanM/MDhjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdTZXNzaW9uVGltaW5nJztcblxuY29uc3QgX3Nlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIC8vIFRPRE8gdjg6IFJlbW92ZSB0aGlzXG4gICAgc2V0dXBPbmNlKCkge30sIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgcHJvY2Vzc0V2ZW50KGV2ZW50KSB7XG4gICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5ldmVudCxcbiAgICAgICAgZXh0cmE6IHtcbiAgICAgICAgICAuLi5ldmVudC5leHRyYSxcbiAgICAgICAgICBbJ3Nlc3Npb246c3RhcnQnXTogc3RhcnRUaW1lLFxuICAgICAgICAgIFsnc2Vzc2lvbjpkdXJhdGlvbiddOiBub3cgLSBzdGFydFRpbWUsXG4gICAgICAgICAgWydzZXNzaW9uOmVuZCddOiBub3csXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9zZXNzaW9uVGltaW5nSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWRkcyBkdXJhdGlvbiBzaW5jZSBTZW50cnkgd2FzIGluaXRpYWxpemVkIHRpbGwgdGhlIHRpbWUgZXZlbnQgd2FzIHNlbnQuXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbigpYCBpbnN0ZWFkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IFNlc3Npb25UaW1pbmcgPSBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MoXG4gIElOVEVHUkFUSU9OX05BTUUsXG4gIHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbixcbikgO1xuXG5leHBvcnQgeyBTZXNzaW9uVGltaW5nLCBzZXNzaW9uVGltaW5nSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb250aW1pbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/integrations/esm/sessiontiming.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/_error.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/_error.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureUnderscoreErrorException: () => (/* binding */ captureUnderscoreErrorException)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  const statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    if (req) {\n      scope.setSDKProcessingMetadata({ request: req });\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(err || `_error.js called with falsy error (${err})`, {\n      mechanism: {\n        type: 'instrument',\n        handled: false,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      },\n    });\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_1__.flushQueue)();\n}\n\n\n//# sourceMappingURL=_error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9fZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ1A7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0JBQWdCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsdURBQVM7QUFDWDtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDhEQUFnQiw4Q0FBOEMsSUFBSTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsUUFBUSxpRUFBVTtBQUNsQjs7QUFFMkM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL19lcnJvci5qcz80NjkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhTY29wZSwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBmbHVzaFF1ZXVlIH0gZnJvbSAnLi91dGlscy9yZXNwb25zZUVuZC5qcyc7XG5cbi8qKlxuICogQ2FwdHVyZSB0aGUgZXhjZXB0aW9uIHBhc3NlZCBieSBuZXh0anMgdG8gdGhlIGBfZXJyb3JgIHBhZ2UsIGFkZGluZyBjb250ZXh0IGRhdGEgYXMgYXBwcm9wcmlhdGUuXG4gKlxuICogQHBhcmFtIGNvbnRleHRPclByb3BzIFRoZSBkYXRhIHBhc3NlZCB0byBlaXRoZXIgYGdldEluaXRpYWxQcm9wc2Agb3IgYHJlbmRlcmAgYnkgbmV4dGpzXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNhcHR1cmVVbmRlcnNjb3JlRXJyb3JFeGNlcHRpb24oY29udGV4dE9yUHJvcHMpIHtcbiAgY29uc3QgeyByZXEsIHJlcywgZXJyIH0gPSBjb250ZXh0T3JQcm9wcztcblxuICAvLyA0MDRzIChhbmQgb3RoZXIgNDAwLXkgZnJpZW5kcykgY2FuIHRyaWdnZXIgYF9lcnJvcmAsIGJ1dCB3ZSBkb24ndCB3YW50IHRvIHNlbmQgdGhlbSB0byBTZW50cnlcbiAgY29uc3Qgc3RhdHVzQ29kZSA9IChyZXMgJiYgcmVzLnN0YXR1c0NvZGUpIHx8IGNvbnRleHRPclByb3BzLnN0YXR1c0NvZGU7XG4gIGlmIChzdGF0dXNDb2RlICYmIHN0YXR1c0NvZGUgPCA1MDApIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICAvLyBJbiBwcmV2aW91cyB2ZXJzaW9ucyBvZiB0aGUgc3VnZ2VzdGVkIGBfZXJyb3IuanNgIHBhZ2UgaW4gd2hpY2ggdGhpcyBmdW5jdGlvbiBpcyBtZWFudCB0byBiZSB1c2VkLCB0aGVyZSB3YXMgYVxuICAvLyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvaXNzdWVzLzg1OTIgd2hpY2ggaW52b2x2ZWQgYW4gZXh0cmEgY2FsbCB0byB0aGlzIGZ1bmN0aW9uLCBpbiB0aGVcbiAgLy8gY3VzdG9tIGVycm9yIGNvbXBvbmVudCdzIGByZW5kZXJgIG1ldGhvZCwganVzdCBpbiBjYXNlIGl0IGhhZG4ndCBiZWVuIGNhbGxlZCBieSBgZ2V0SW5pdGlhbFByb3BzYC4gTm93IHRoYXQgdGhhdFxuICAvLyBpc3N1ZSBoYXMgYmVlbiBmaXhlZCwgdGhlIHNlY29uZCBjYWxsIGlzIHVubmVjZXNzYXJ5LCBidXQgc2luY2UgaXQgbGl2ZXMgaW4gdXNlciBjb2RlIHJhdGhlciB0aGFuIG91ciBjb2RlLCB1c2Vyc1xuICAvLyBoYXZlIHRvIGJlIHRoZSBvbmVzIHRvIGdldCByaWQgb2YgaXQsIGFuZCBndWFyYW5ldGVlZGx5LCBub3QgYWxsIG9mIHRoZW0gd2lsbC4gU28sIHJhdGhlciB0aGFuIGNhcHR1cmUgdGhlIGVycm9yXG4gIC8vIHR3aWNlLCB3ZSBqdXN0IGJhaWwgaWYgd2Ugc2Vuc2Ugd2UncmUgaW4gdGhhdCBub3ctZXh0cmFuZW91cyBzZWNvbmQgY2FsbC4gKFdlIGNhbiB0ZWxsIHdoaWNoIGZ1bmN0aW9uIHdlJ3JlIGluXG4gIC8vIGJlY2F1c2UgTmV4dGpzIHBhc3NlcyBgcGF0aG5hbWVgIHRvIGBnZXRJbml0aWFsUHJvcHNgIGJ1dCBub3QgdG8gYHJlbmRlcmAuKVxuICBpZiAoIWNvbnRleHRPclByb3BzLnBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgd2l0aFNjb3BlKHNjb3BlID0+IHtcbiAgICBpZiAocmVxKSB7XG4gICAgICBzY29wZS5zZXRTREtQcm9jZXNzaW5nTWV0YWRhdGEoeyByZXF1ZXN0OiByZXEgfSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhpcmQtcGFydHkgbGlicmFyaWVzIChvciB1c2VycyB0aGVtc2VsdmVzKSB0aHJvdyBzb21ldGhpbmcgZmFsc3ksIHdlIHdhbnQgdG8gY2FwdHVyZSBpdCBhcyBhIG1lc3NhZ2UgKHdoaWNoXG4gICAgLy8gaXMgd2hhdCBwYXNzaW5nIGEgc3RyaW5nIHRvIGBjYXB0dXJlRXhjZXB0aW9uYCB3aWxsIHdpbmQgdXAgZG9pbmcpXG4gICAgY2FwdHVyZUV4Y2VwdGlvbihlcnIgfHwgYF9lcnJvci5qcyBjYWxsZWQgd2l0aCBmYWxzeSBlcnJvciAoJHtlcnJ9KWAsIHtcbiAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICB0eXBlOiAnaW5zdHJ1bWVudCcsXG4gICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgZnVuY3Rpb246ICdfZXJyb3IuZ2V0SW5pdGlhbFByb3BzJyxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vIEluIGNhc2UgdGhpcyBpcyBiZWluZyBydW4gYXMgcGFydCBvZiBhIHNlcnZlcmxlc3MgZnVuY3Rpb24gKGFzIGlzIHRoZSBjYXNlIHdpdGggdGhlIHNlcnZlciBoYWxmIG9mIG5leHRqcyBhcHBzXG4gIC8vIGRlcGxveWVkIHRvIHZlcmNlbCksIG1ha2Ugc3VyZSB0aGUgZXJyb3IgZ2V0cyBzZW50IHRvIFNlbnRyeSBiZWZvcmUgdGhlIGxhbWJkYSBleGl0cy5cbiAgYXdhaXQgZmx1c2hRdWV1ZSgpO1xufVxuXG5leHBvcnQgeyBjYXB0dXJlVW5kZXJzY29yZUVycm9yRXhjZXB0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fZXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/_error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/debug-build.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/debug-build.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9kZWJ1Zy1idWlsZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vZGVidWctYnVpbGQuanM/NjNjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnQgeyBERUJVR19CVUlMRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devErrorSymbolicationEventProcessor: () => (/* binding */ devErrorSymbolicationEventProcessor)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stacktrace-parser */ \"(rsc)/./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\");\n\n\n\n\nconst globalWithInjectedValues = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ\n\n;\n\nasync function resolveStackFrame(\n  frame,\n  error,\n) {\n  try {\n    if (!((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([frame, 'access', _ => _.file, 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('webpack-internal:')]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([frame, 'access', _4 => _4.file, 'optionalAccess', _5 => _5.startsWith, 'call', _6 => _6('file:')]))) {\n      return null;\n    }\n\n    const params = new URLSearchParams();\n    params.append('isServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isEdgeServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isAppDirectory', String(true)); // will force server to do more thorough checking\n    params.append('errorMessage', error.toString());\n    Object.keys(frame).forEach(key => {\n      params.append(key, ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)(frame[key ], () => ( ''))).toString());\n    });\n\n    let basePath = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)(globalWithInjectedValues.__sentryBasePath, () => ( ''));\n\n    // Prefix the basepath with a slash if it doesn't have one\n    if (basePath !== '' && !basePath.match(/^\\//)) {\n      basePath = `/${basePath}`;\n    }\n\n    const controller = new AbortController();\n    const timer = setTimeout(() => controller.abort(), 3000);\n    const res = await fetch(\n      `${\n        // eslint-disable-next-line no-restricted-globals\n        typeof window === 'undefined' ? 'http://localhost:3000' : '' // TODO: handle the case where users define a different port\n      }${basePath}/__nextjs_original-stack-frame?${params.toString()}`,\n      {\n        signal: controller.signal,\n      },\n    ).finally(() => {\n      clearTimeout(timer);\n    });\n\n    if (!res.ok || res.status === 204) {\n      return null;\n    }\n\n    const body = await res.json();\n\n    return {\n      originalCodeFrame: body.originalCodeFrame,\n      originalStackFrame: body.originalStackFrame,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction parseOriginalCodeFrame(codeFrame)\n\n {\n  const preProcessedLines = codeFrame\n    // Remove ASCII control characters that are used for syntax highlighting\n    .replace(\n      // eslint-disable-next-line no-control-regex\n      /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, // https://stackoverflow.com/a/29497680\n      '',\n    )\n    .split('\\n')\n    // Remove line that is supposed to indicate where the error happened\n    .filter(line => !line.match(/^\\s*\\|/))\n    // Find the error line\n    .map(line => ({\n      line,\n      isErrorLine: !!line.match(/^>/),\n    }))\n    // Remove the leading part that is just for prettier output\n    .map(lineObj => ({\n      ...lineObj,\n      line: lineObj.line.replace(/^.*\\|/, ''),\n    }));\n\n  const preContextLines = [];\n  let contextLine = undefined;\n  const postContextLines = [];\n\n  let reachedContextLine = false;\n\n  for (const preProcessedLine of preProcessedLines) {\n    if (preProcessedLine.isErrorLine) {\n      contextLine = preProcessedLine.line;\n      reachedContextLine = true;\n    } else if (reachedContextLine) {\n      postContextLines.push(preProcessedLine.line);\n    } else {\n      preContextLines.push(preProcessedLine.line);\n    }\n  }\n\n  return {\n    contextLine,\n    preContextLines,\n    postContextLines,\n  };\n}\n\n/**\n * Event processor that will symbolicate errors by using the webpack/nextjs dev server that is used to show stack traces\n * in the dev overlay.\n */\nasync function devErrorSymbolicationEventProcessor(event, hint) {\n  // Due to changes across Next.js versions, there are a million things that can go wrong here so we just try-catch the  // entire event processor.Symbolicated stack traces are just a nice to have.\n  try {\n    if (hint.originalException && hint.originalException instanceof Error && hint.originalException.stack) {\n      const frames = stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__.parse(hint.originalException.stack);\n\n      const resolvedFrames = await Promise.all(\n        frames.map(frame => resolveStackFrame(frame, hint.originalException )),\n      );\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([event, 'access', _7 => _7.exception, 'optionalAccess', _8 => _8.values, 'optionalAccess', _9 => _9[0], 'access', _10 => _10.stacktrace, 'optionalAccess', _11 => _11.frames])) {\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames.map(\n          (frame, i, frames) => {\n            const resolvedFrame = resolvedFrames[frames.length - 1 - i];\n            if (!resolvedFrame || !resolvedFrame.originalStackFrame || !resolvedFrame.originalCodeFrame) {\n              return {\n                ...frame,\n                platform: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([frame, 'access', _12 => _12.filename, 'optionalAccess', _13 => _13.startsWith, 'call', _14 => _14('node:internal')]) ? 'nodejs' : undefined, // simple hack that will prevent a source mapping error from showing up\n                in_app: false,\n              };\n            }\n\n            const { contextLine, preContextLines, postContextLines } = parseOriginalCodeFrame(\n              resolvedFrame.originalCodeFrame,\n            );\n\n            return {\n              ...frame,\n              pre_context: preContextLines,\n              context_line: contextLine,\n              post_context: postContextLines,\n              function: resolvedFrame.originalStackFrame.methodName,\n              filename: resolvedFrame.originalStackFrame.file || undefined,\n              lineno: resolvedFrame.originalStackFrame.lineNumber || undefined,\n              colno: resolvedFrame.originalStackFrame.column || undefined,\n            };\n          },\n        );\n      }\n    }\n  } catch (e) {\n    return event;\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=devErrorSymbolicationEventProcessor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVercelEnv: () => (/* binding */ getVercelEnv)\n/* harmony export */ });\n/**\n * Returns an environment setting value determined by Vercel's `VERCEL_ENV` environment variable.\n *\n * @param isClient Flag to indicate whether to use the `NEXT_PUBLIC_` prefixed version of the environment variable.\n */\nfunction getVercelEnv(isClient) {\n  const vercelEnvVar = isClient ? process.env.NEXT_PUBLIC_VERCEL_ENV : process.env.VERCEL_ENV;\n  return vercelEnvVar ? `vercel-${vercelEnvVar}` : undefined;\n}\n\n\n//# sourceMappingURL=getVercelEnv.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9nZXRWZXJjZWxFbnYuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGFBQWE7QUFDL0M7O0FBRXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9nZXRWZXJjZWxFbnYuanM/OTU2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybnMgYW4gZW52aXJvbm1lbnQgc2V0dGluZyB2YWx1ZSBkZXRlcm1pbmVkIGJ5IFZlcmNlbCdzIGBWRVJDRUxfRU5WYCBlbnZpcm9ubWVudCB2YXJpYWJsZS5cbiAqXG4gKiBAcGFyYW0gaXNDbGllbnQgRmxhZyB0byBpbmRpY2F0ZSB3aGV0aGVyIHRvIHVzZSB0aGUgYE5FWFRfUFVCTElDX2AgcHJlZml4ZWQgdmVyc2lvbiBvZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKi9cbmZ1bmN0aW9uIGdldFZlcmNlbEVudihpc0NsaWVudCkge1xuICBjb25zdCB2ZXJjZWxFbnZWYXIgPSBpc0NsaWVudCA/IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1ZFUkNFTF9FTlYgOiBwcm9jZXNzLmVudi5WRVJDRUxfRU5WO1xuICByZXR1cm4gdmVyY2VsRW52VmFyID8gYHZlcmNlbC0ke3ZlcmNlbEVudlZhcn1gIDogdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgeyBnZXRWZXJjZWxFbnYgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFZlcmNlbEVudi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotFoundNavigationError: () => (/* binding */ isNotFoundNavigationError),\n/* harmony export */   isRedirectNavigationError: () => (/* binding */ isRedirectNavigationError)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Determines whether input is a Next.js not-found error.\n * https://beta.nextjs.org/docs/api-reference/notfound#notfound\n */\nfunction isNotFoundNavigationError(subject) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(subject) && (subject ).digest === 'NEXT_NOT_FOUND';\n}\n\n/**\n * Determines whether input is a Next.js redirect error.\n * https://beta.nextjs.org/docs/api-reference/redirect#redirect\n */\nfunction isRedirectNavigationError(subject) {\n  return (\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(subject) &&\n    typeof (subject ).digest === 'string' &&\n    (subject ).digest.startsWith('NEXT_REDIRECT;') // a redirect digest looks like \"NEXT_REDIRECT;[redirect path]\"\n  );\n}\n\n\n//# sourceMappingURL=nextNavigationErrorUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9uZXh0TmF2aWdhdGlvbkVycm9yVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBTztBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFPO0FBQ1g7QUFDQSxnREFBZ0Qsa0RBQWtEO0FBQ2xHO0FBQ0E7O0FBRWdFO0FBQ2hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9uZXh0TmF2aWdhdGlvbkVycm9yVXRpbHMuanM/OWFlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Vycm9yIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGlucHV0IGlzIGEgTmV4dC5qcyBub3QtZm91bmQgZXJyb3IuXG4gKiBodHRwczovL2JldGEubmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2Uvbm90Zm91bmQjbm90Zm91bmRcbiAqL1xuZnVuY3Rpb24gaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvcihzdWJqZWN0KSB7XG4gIHJldHVybiBpc0Vycm9yKHN1YmplY3QpICYmIChzdWJqZWN0ICkuZGlnZXN0ID09PSAnTkVYVF9OT1RfRk9VTkQnO1xufVxuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBpbnB1dCBpcyBhIE5leHQuanMgcmVkaXJlY3QgZXJyb3IuXG4gKiBodHRwczovL2JldGEubmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2UvcmVkaXJlY3QjcmVkaXJlY3RcbiAqL1xuZnVuY3Rpb24gaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvcihzdWJqZWN0KSB7XG4gIHJldHVybiAoXG4gICAgaXNFcnJvcihzdWJqZWN0KSAmJlxuICAgIHR5cGVvZiAoc3ViamVjdCApLmRpZ2VzdCA9PT0gJ3N0cmluZycgJiZcbiAgICAoc3ViamVjdCApLmRpZ2VzdC5zdGFydHNXaXRoKCdORVhUX1JFRElSRUNUOycpIC8vIGEgcmVkaXJlY3QgZGlnZXN0IGxvb2tzIGxpa2UgXCJORVhUX1JFRElSRUNUO1tyZWRpcmVjdCBwYXRoXVwiXG4gICk7XG59XG5cbmV4cG9ydCB7IGlzTm90Rm91bmROYXZpZ2F0aW9uRXJyb3IsIGlzUmVkaXJlY3ROYXZpZ2F0aW9uRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHROYXZpZ2F0aW9uRXJyb3JVdGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/commonObjectTracing.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/commonObjectTracing.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonObjectToPropagationContext: () => (/* binding */ commonObjectToPropagationContext)\n/* harmony export */ });\nconst commonMap = new WeakMap();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param propagationContext The propagation context that should be shared between all the resources if no propagation context was registered yet.\n * @returns the shared propagation context.\n */\nfunction commonObjectToPropagationContext(\n  commonObject,\n  propagationContext,\n) {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoPropagationContext = commonMap.get(commonObject);\n    if (memoPropagationContext) {\n      return memoPropagationContext;\n    } else {\n      commonMap.set(commonObject, propagationContext);\n      return propagationContext;\n    }\n  } else {\n    return propagationContext;\n  }\n}\n\n\n//# sourceMappingURL=commonObjectTracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9jb21tb25PYmplY3RUcmFjaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3V0aWxzL2NvbW1vbk9iamVjdFRyYWNpbmcuanM/OWQwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21tb25NYXAgPSBuZXcgV2Vha01hcCgpO1xuXG4vKipcbiAqIFRha2VzIGEgc2hhcmVkIChnYXJiYWdlIGNvbGxlY3RhYmxlKSBvYmplY3QgYmV0d2VlbiByZXNvdXJjZXMsIGUuZy4gYSBoZWFkZXJzIG9iamVjdCBzaGFyZWQgYmV0d2VlbiBOZXh0LmpzIHNlcnZlciBjb21wb25lbnRzIGFuZCByZXR1cm5zIGEgY29tbW9uIHByb3BhZ2F0aW9uIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIGNvbW1vbk9iamVjdCBUaGUgc2hhcmVkIG9iamVjdC5cbiAqIEBwYXJhbSBwcm9wYWdhdGlvbkNvbnRleHQgVGhlIHByb3BhZ2F0aW9uIGNvbnRleHQgdGhhdCBzaG91bGQgYmUgc2hhcmVkIGJldHdlZW4gYWxsIHRoZSByZXNvdXJjZXMgaWYgbm8gcHJvcGFnYXRpb24gY29udGV4dCB3YXMgcmVnaXN0ZXJlZCB5ZXQuXG4gKiBAcmV0dXJucyB0aGUgc2hhcmVkIHByb3BhZ2F0aW9uIGNvbnRleHQuXG4gKi9cbmZ1bmN0aW9uIGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0KFxuICBjb21tb25PYmplY3QsXG4gIHByb3BhZ2F0aW9uQ29udGV4dCxcbikge1xuICBpZiAodHlwZW9mIGNvbW1vbk9iamVjdCA9PT0gJ29iamVjdCcgJiYgY29tbW9uT2JqZWN0KSB7XG4gICAgY29uc3QgbWVtb1Byb3BhZ2F0aW9uQ29udGV4dCA9IGNvbW1vbk1hcC5nZXQoY29tbW9uT2JqZWN0KTtcbiAgICBpZiAobWVtb1Byb3BhZ2F0aW9uQ29udGV4dCkge1xuICAgICAgcmV0dXJuIG1lbW9Qcm9wYWdhdGlvbkNvbnRleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbW1vbk1hcC5zZXQoY29tbW9uT2JqZWN0LCBwcm9wYWdhdGlvbkNvbnRleHQpO1xuICAgICAgcmV0dXJuIHByb3BhZ2F0aW9uQ29udGV4dDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHByb3BhZ2F0aW9uQ29udGV4dDtcbiAgfVxufVxuXG5leHBvcnQgeyBjb21tb25PYmplY3RUb1Byb3BhZ2F0aW9uQ29udGV4dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbW9uT2JqZWN0VHJhY2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/commonObjectTracing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withEdgeWrapping: () => (/* binding */ withEdgeWrapping)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _responseEnd_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n/**\n * Wraps a function on the edge runtime with error and performance monitoring.\n */\nfunction withEdgeWrapping(\n  handler,\n  options,\n) {\n  return async function ( ...args) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n    const req = args[0];\n\n    let sentryTrace;\n    let baggage;\n\n    if (req instanceof Request) {\n      sentryTrace = req.headers.get('sentry-trace') || '';\n      baggage = req.headers.get('baggage');\n    }\n\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.continueTrace)(\n      {\n        sentryTrace,\n        baggage,\n      },\n      () => {\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startSpan)(\n          {\n            name: options.spanDescription,\n            op: options.spanOp,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs.withEdgeWrapping',\n            },\n            metadata: {\n              request: req instanceof Request ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.winterCGRequestToRequestData)(req) : undefined,\n            },\n          },\n          async span => {\n            const handlerResult = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.handleCallbackErrors)(\n              () => handler.apply(this, args),\n              error => {\n                (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.captureException)(error, {\n                  mechanism: {\n                    type: 'instrument',\n                    handled: false,\n                    data: {\n                      function: options.mechanismFunctionName,\n                    },\n                  },\n                });\n              },\n            );\n\n            if (span) {\n              if (handlerResult instanceof Response) {\n                (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.setHttpStatus)(span, handlerResult.status);\n              } else {\n                span.setStatus('ok');\n              }\n            }\n\n            return handlerResult;\n          },\n        ).finally(() => (0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_7__.flushQueue)());\n      },\n    );\n  };\n}\n\n\n//# sourceMappingURL=edgeWrapperUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9lZGdlV3JhcHBlclV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF5TTtBQUM1STtBQUNmOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxrRUFBb0I7QUFDeEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLDJEQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGVBQWUsdURBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBFQUFnQztBQUMvQyxlQUFlLDBFQUFnQztBQUMvQyxhQUFhO0FBQ2I7QUFDQSxnREFBZ0QsMkVBQTRCO0FBQzVFLGFBQWE7QUFDYixXQUFXO0FBQ1g7QUFDQSx3Q0FBd0Msa0VBQW9CO0FBQzVEO0FBQ0E7QUFDQSxnQkFBZ0IsOERBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQiwyREFBYTtBQUM3QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVztBQUNYLHdCQUF3QiwyREFBVTtBQUNsQyxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vdXRpbHMvZWRnZVdyYXBwZXJVdGlscy5qcz9jMThmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCBjb250aW51ZVRyYWNlLCBzdGFydFNwYW4sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgaGFuZGxlQ2FsbGJhY2tFcnJvcnMsIGNhcHR1cmVFeGNlcHRpb24sIHNldEh0dHBTdGF0dXMgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgd2ludGVyQ0dSZXF1ZXN0VG9SZXF1ZXN0RGF0YSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZmx1c2hRdWV1ZSB9IGZyb20gJy4vcmVzcG9uc2VFbmQuanMnO1xuXG4vKipcbiAqIFdyYXBzIGEgZnVuY3Rpb24gb24gdGhlIGVkZ2UgcnVudGltZSB3aXRoIGVycm9yIGFuZCBwZXJmb3JtYW5jZSBtb25pdG9yaW5nLlxuICovXG5mdW5jdGlvbiB3aXRoRWRnZVdyYXBwaW5nKFxuICBoYW5kbGVyLFxuICBvcHRpb25zLFxuKSB7XG4gIHJldHVybiBhc3luYyBmdW5jdGlvbiAoIC4uLmFyZ3MpIHtcbiAgICBhZGRUcmFjaW5nRXh0ZW5zaW9ucygpO1xuICAgIGNvbnN0IHJlcSA9IGFyZ3NbMF07XG5cbiAgICBsZXQgc2VudHJ5VHJhY2U7XG4gICAgbGV0IGJhZ2dhZ2U7XG5cbiAgICBpZiAocmVxIGluc3RhbmNlb2YgUmVxdWVzdCkge1xuICAgICAgc2VudHJ5VHJhY2UgPSByZXEuaGVhZGVycy5nZXQoJ3NlbnRyeS10cmFjZScpIHx8ICcnO1xuICAgICAgYmFnZ2FnZSA9IHJlcS5oZWFkZXJzLmdldCgnYmFnZ2FnZScpO1xuICAgIH1cblxuICAgIHJldHVybiBjb250aW51ZVRyYWNlKFxuICAgICAge1xuICAgICAgICBzZW50cnlUcmFjZSxcbiAgICAgICAgYmFnZ2FnZSxcbiAgICAgIH0sXG4gICAgICAoKSA9PiB7XG4gICAgICAgIHJldHVybiBzdGFydFNwYW4oXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5zcGFuRGVzY3JpcHRpb24sXG4gICAgICAgICAgICBvcDogb3B0aW9ucy5zcGFuT3AsXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRV06ICdyb3V0ZScsXG4gICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTl06ICdhdXRvLmZ1bmN0aW9uLm5leHRqcy53aXRoRWRnZVdyYXBwaW5nJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICByZXF1ZXN0OiByZXEgaW5zdGFuY2VvZiBSZXF1ZXN0ID8gd2ludGVyQ0dSZXF1ZXN0VG9SZXF1ZXN0RGF0YShyZXEpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFzeW5jIHNwYW4gPT4ge1xuICAgICAgICAgICAgY29uc3QgaGFuZGxlclJlc3VsdCA9IGF3YWl0IGhhbmRsZUNhbGxiYWNrRXJyb3JzKFxuICAgICAgICAgICAgICAoKSA9PiBoYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpLFxuICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlcnJvciwge1xuICAgICAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbnN0cnVtZW50JyxcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbjogb3B0aW9ucy5tZWNoYW5pc21GdW5jdGlvbk5hbWUsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgaWYgKHNwYW4pIHtcbiAgICAgICAgICAgICAgaWYgKGhhbmRsZXJSZXN1bHQgaW5zdGFuY2VvZiBSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHNldEh0dHBTdGF0dXMoc3BhbiwgaGFuZGxlclJlc3VsdC5zdGF0dXMpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNwYW4uc2V0U3RhdHVzKCdvaycpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVyUmVzdWx0O1xuICAgICAgICAgIH0sXG4gICAgICAgICkuZmluYWxseSgoKSA9PiBmbHVzaFF1ZXVlKCkpO1xuICAgICAgfSxcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgeyB3aXRoRWRnZVdyYXBwaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lZGdlV3JhcHBlclV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBuild: () => (/* binding */ isBuild)\n/* harmony export */ });\n/* harmony import */ var next_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/constants */ \"(rsc)/./node_modules/next/dist/api/constants.js\");\n\n\n/**\n * Decide if the currently running process is part of the build phase or happening at runtime.\n */\nfunction isBuild() {\n  return process.env.NEXT_PHASE === next_constants__WEBPACK_IMPORTED_MODULE_0__.PHASE_PRODUCTION_BUILD;\n}\n\n\n//# sourceMappingURL=isBuild.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9pc0J1aWxkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdEOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxrRUFBc0I7QUFDMUQ7O0FBRW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9pc0J1aWxkLmpzPzVkOTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEhBU0VfUFJPRFVDVElPTl9CVUlMRCB9IGZyb20gJ25leHQvY29uc3RhbnRzJztcblxuLyoqXG4gKiBEZWNpZGUgaWYgdGhlIGN1cnJlbnRseSBydW5uaW5nIHByb2Nlc3MgaXMgcGFydCBvZiB0aGUgYnVpbGQgcGhhc2Ugb3IgaGFwcGVuaW5nIGF0IHJ1bnRpbWUuXG4gKi9cbmZ1bmN0aW9uIGlzQnVpbGQoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5ORVhUX1BIQVNFID09PSBQSEFTRV9QUk9EVUNUSU9OX0JVSUxEO1xufVxuXG5leHBvcnQgeyBpc0J1aWxkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0J1aWxkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   platformSupportsStreaming: () => (/* binding */ platformSupportsStreaming)\n/* harmony export */ });\nconst platformSupportsStreaming = () => !process.env.LAMBDA_TASK_ROOT && !process.env.VERCEL;\n\n\n//# sourceMappingURL=platformSupportsStreaming.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9wbGF0Zm9ybVN1cHBvcnRzU3RyZWFtaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3V0aWxzL3BsYXRmb3JtU3VwcG9ydHNTdHJlYW1pbmcuanM/M2Q4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwbGF0Zm9ybVN1cHBvcnRzU3RyZWFtaW5nID0gKCkgPT4gIXByb2Nlc3MuZW52LkxBTUJEQV9UQVNLX1JPT1QgJiYgIXByb2Nlc3MuZW52LlZFUkNFTDtcblxuZXhwb3J0IHsgcGxhdGZvcm1TdXBwb3J0c1N0cmVhbWluZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGxhdGZvcm1TdXBwb3J0c1N0cmVhbWluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoEndSpanOnResponseEnd: () => (/* binding */ autoEndSpanOnResponseEnd),\n/* harmony export */   finishSpan: () => (/* binding */ finishSpan),\n/* harmony export */   flushQueue: () => (/* binding */ flushQueue)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n\n\n\n\n/**\n * Wrap `res.end()` so that it ends the span and flushes events before letting the request finish.\n *\n * Note: This wraps a sync method with an async method. While in general that's not a great idea in terms of keeping\n * things in the right order, in this case it's safe, because the native `.end()` actually *is* (effectively) async, and\n * its run actually *is* (literally) awaited, just manually so (which reflects the fact that the core of the\n * request/response code in Node by far predates the introduction of `async`/`await`). When `.end()` is done, it emits\n * the `prefinish` event, and only once that fires does request processing continue. See\n * https://github.com/nodejs/node/commit/7c9b607048f13741173d397795bac37707405ba7.\n *\n * Also note: `res.end()` isn't called until *after* all response data and headers have been sent, so blocking inside of\n * `end` doesn't delay data getting to the end user. See\n * https://nodejs.org/api/http.html#responseenddata-encoding-callback.\n *\n * @param span The span tracking the request\n * @param res: The request's corresponding response\n */\nfunction autoEndSpanOnResponseEnd(span, res) {\n  const wrapEndMethod = (origEnd) => {\n    return function sentryWrappedEnd( ...args) {\n      finishSpan(span, this);\n      return origEnd.call(this, ...args);\n    };\n  };\n\n  // Prevent double-wrapping\n  // res.end may be undefined during build when using `next export` to statically export a Next.js app\n  if (res.end && !(res.end ).__sentry_original__) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(res, 'end', wrapEndMethod);\n  }\n}\n\n/** Finish the given response's span and set HTTP status data */\nfunction finishSpan(span, res) {\n  if (span) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHttpStatus)(span, res.statusCode);\n    span.end();\n  }\n}\n\n/** Flush the event queue to ensure that events get sent to Sentry before the response is finished and the lambda ends */\nasync function flushQueue() {\n  try {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Flushing events...');\n    await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.flush)(2000);\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Done flushing events');\n  } catch (e) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Error while flushing events:\\n', e);\n  }\n}\n\n\n//# sourceMappingURL=responseEnd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9yZXNwb25zZUVuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvRDtBQUNQO0FBQ0c7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG1EQUFJO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDJEQUFhO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdEQUFXLElBQUksaURBQU07QUFDekIsVUFBVSxtREFBSztBQUNmLElBQUksd0RBQVcsSUFBSSxpREFBTTtBQUN6QixJQUFJO0FBQ0osSUFBSSx3REFBVyxJQUFJLGlEQUFNO0FBQ3pCO0FBQ0E7O0FBRTREO0FBQzVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9yZXNwb25zZUVuZC5qcz84MGFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZsdXNoLCBzZXRIdHRwU3RhdHVzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGxvZ2dlciwgZmlsbCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5cbi8qKlxuICogV3JhcCBgcmVzLmVuZCgpYCBzbyB0aGF0IGl0IGVuZHMgdGhlIHNwYW4gYW5kIGZsdXNoZXMgZXZlbnRzIGJlZm9yZSBsZXR0aW5nIHRoZSByZXF1ZXN0IGZpbmlzaC5cbiAqXG4gKiBOb3RlOiBUaGlzIHdyYXBzIGEgc3luYyBtZXRob2Qgd2l0aCBhbiBhc3luYyBtZXRob2QuIFdoaWxlIGluIGdlbmVyYWwgdGhhdCdzIG5vdCBhIGdyZWF0IGlkZWEgaW4gdGVybXMgb2Yga2VlcGluZ1xuICogdGhpbmdzIGluIHRoZSByaWdodCBvcmRlciwgaW4gdGhpcyBjYXNlIGl0J3Mgc2FmZSwgYmVjYXVzZSB0aGUgbmF0aXZlIGAuZW5kKClgIGFjdHVhbGx5ICppcyogKGVmZmVjdGl2ZWx5KSBhc3luYywgYW5kXG4gKiBpdHMgcnVuIGFjdHVhbGx5ICppcyogKGxpdGVyYWxseSkgYXdhaXRlZCwganVzdCBtYW51YWxseSBzbyAod2hpY2ggcmVmbGVjdHMgdGhlIGZhY3QgdGhhdCB0aGUgY29yZSBvZiB0aGVcbiAqIHJlcXVlc3QvcmVzcG9uc2UgY29kZSBpbiBOb2RlIGJ5IGZhciBwcmVkYXRlcyB0aGUgaW50cm9kdWN0aW9uIG9mIGBhc3luY2AvYGF3YWl0YCkuIFdoZW4gYC5lbmQoKWAgaXMgZG9uZSwgaXQgZW1pdHNcbiAqIHRoZSBgcHJlZmluaXNoYCBldmVudCwgYW5kIG9ubHkgb25jZSB0aGF0IGZpcmVzIGRvZXMgcmVxdWVzdCBwcm9jZXNzaW5nIGNvbnRpbnVlLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9jb21taXQvN2M5YjYwNzA0OGYxMzc0MTE3M2QzOTc3OTViYWMzNzcwNzQwNWJhNy5cbiAqXG4gKiBBbHNvIG5vdGU6IGByZXMuZW5kKClgIGlzbid0IGNhbGxlZCB1bnRpbCAqYWZ0ZXIqIGFsbCByZXNwb25zZSBkYXRhIGFuZCBoZWFkZXJzIGhhdmUgYmVlbiBzZW50LCBzbyBibG9ja2luZyBpbnNpZGUgb2ZcbiAqIGBlbmRgIGRvZXNuJ3QgZGVsYXkgZGF0YSBnZXR0aW5nIHRvIHRoZSBlbmQgdXNlci4gU2VlXG4gKiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNyZXNwb25zZWVuZGRhdGEtZW5jb2RpbmctY2FsbGJhY2suXG4gKlxuICogQHBhcmFtIHNwYW4gVGhlIHNwYW4gdHJhY2tpbmcgdGhlIHJlcXVlc3RcbiAqIEBwYXJhbSByZXM6IFRoZSByZXF1ZXN0J3MgY29ycmVzcG9uZGluZyByZXNwb25zZVxuICovXG5mdW5jdGlvbiBhdXRvRW5kU3Bhbk9uUmVzcG9uc2VFbmQoc3BhbiwgcmVzKSB7XG4gIGNvbnN0IHdyYXBFbmRNZXRob2QgPSAob3JpZ0VuZCkgPT4ge1xuICAgIHJldHVybiBmdW5jdGlvbiBzZW50cnlXcmFwcGVkRW5kKCAuLi5hcmdzKSB7XG4gICAgICBmaW5pc2hTcGFuKHNwYW4sIHRoaXMpO1xuICAgICAgcmV0dXJuIG9yaWdFbmQuY2FsbCh0aGlzLCAuLi5hcmdzKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIFByZXZlbnQgZG91YmxlLXdyYXBwaW5nXG4gIC8vIHJlcy5lbmQgbWF5IGJlIHVuZGVmaW5lZCBkdXJpbmcgYnVpbGQgd2hlbiB1c2luZyBgbmV4dCBleHBvcnRgIHRvIHN0YXRpY2FsbHkgZXhwb3J0IGEgTmV4dC5qcyBhcHBcbiAgaWYgKHJlcy5lbmQgJiYgIShyZXMuZW5kICkuX19zZW50cnlfb3JpZ2luYWxfXykge1xuICAgIGZpbGwocmVzLCAnZW5kJywgd3JhcEVuZE1ldGhvZCk7XG4gIH1cbn1cblxuLyoqIEZpbmlzaCB0aGUgZ2l2ZW4gcmVzcG9uc2UncyBzcGFuIGFuZCBzZXQgSFRUUCBzdGF0dXMgZGF0YSAqL1xuZnVuY3Rpb24gZmluaXNoU3BhbihzcGFuLCByZXMpIHtcbiAgaWYgKHNwYW4pIHtcbiAgICBzZXRIdHRwU3RhdHVzKHNwYW4sIHJlcy5zdGF0dXNDb2RlKTtcbiAgICBzcGFuLmVuZCgpO1xuICB9XG59XG5cbi8qKiBGbHVzaCB0aGUgZXZlbnQgcXVldWUgdG8gZW5zdXJlIHRoYXQgZXZlbnRzIGdldCBzZW50IHRvIFNlbnRyeSBiZWZvcmUgdGhlIHJlc3BvbnNlIGlzIGZpbmlzaGVkIGFuZCB0aGUgbGFtYmRhIGVuZHMgKi9cbmFzeW5jIGZ1bmN0aW9uIGZsdXNoUXVldWUoKSB7XG4gIHRyeSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnRmx1c2hpbmcgZXZlbnRzLi4uJyk7XG4gICAgYXdhaXQgZmx1c2goMjAwMCk7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnRG9uZSBmbHVzaGluZyBldmVudHMnKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5sb2coJ0Vycm9yIHdoaWxlIGZsdXNoaW5nIGV2ZW50czpcXG4nLCBlKTtcbiAgfVxufVxuXG5leHBvcnQgeyBhdXRvRW5kU3Bhbk9uUmVzcG9uc2VFbmQsIGZpbmlzaFNwYW4sIGZsdXNoUXVldWUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlRW5kLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callDataFetcherTraced: () => (/* binding */ callDataFetcherTraced),\n/* harmony export */   getSpanFromRequest: () => (/* binding */ getSpanFromRequest),\n/* harmony export */   withErrorInstrumentation: () => (/* binding */ withErrorInstrumentation),\n/* harmony export */   withTracedServerSideDataFetcher: () => (/* binding */ withTracedServerSideDataFetcher)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./platformSupportsStreaming.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js\");\n/* harmony import */ var _responseEnd_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n\n\n/**\n * Grabs a span off a Next.js datafetcher request object, if it was previously put there via\n * `setSpanOnRequest`.\n *\n * @param req The Next.js datafetcher request object\n * @returns the span on the request object if there is one, or `undefined` if the request object didn't have one.\n */\nfunction getSpanFromRequest(req) {\n  return req._sentrySpan;\n}\n\nfunction setSpanOnRequest(transaction, req) {\n  req._sentrySpan = transaction;\n}\n\n/**\n * Wraps a function that potentially throws. If it does, the error is passed to `captureException` and rethrown.\n *\n * Note: This function turns the wrapped function into an asynchronous one.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorInstrumentation(\n  origFunction,\n) {\n  return async function ( ...origFunctionArguments) {\n    try {\n      return await origFunction.apply(this, origFunctionArguments);\n    } catch (e) {\n      // TODO: Extract error logic from `withSentry` in here or create a new wrapper with said logic or something like that.\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(e, { mechanism: { handled: false } });\n\n      throw e;\n    }\n  };\n}\n\n/**\n * Calls a server-side data fetching function (that takes a `req` and `res` object in its context) with tracing\n * instrumentation. A transaction will be created for the incoming request (if it doesn't already exist) in addition to\n * a span for the wrapped data fetching function.\n *\n * All of the above happens in an isolated domain, meaning all thrown errors will be associated with the correct span.\n *\n * @param origDataFetcher The data fetching method to call.\n * @param origFunctionArguments The arguments to call the data fetching method with.\n * @param req The data fetching function's request object.\n * @param res The data fetching function's response object.\n * @param options Options providing details for the created transaction and span.\n * @returns what the data fetching method call returned.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withTracedServerSideDataFetcher(\n  origDataFetcher,\n  req,\n  res,\n  options\n\n,\n) {\n  return async function ( ...args) {\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withIsolationScope)(async isolationScope => {\n      isolationScope.setSDKProcessingMetadata({\n        request: req,\n      });\n\n      const sentryTrace =\n        req.headers && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined;\n      const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([req, 'access', _ => _.headers, 'optionalAccess', _2 => _2.baggage]);\n\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.continueTrace)({ sentryTrace, baggage }, () => {\n        let requestSpan = getSpanFromRequest(req);\n        if (!requestSpan) {\n          // TODO(v8): Simplify these checks when startInactiveSpan always returns a span\n          requestSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n            name: options.requestedRouteName,\n            op: 'http.server',\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n            },\n          });\n          if (requestSpan) {\n            requestSpan.setStatus('ok');\n            setSpanOnRequest(requestSpan, req);\n            (0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__.autoEndSpanOnResponseEnd)(requestSpan, res);\n          }\n        }\n\n        const withActiveSpanCallback = () => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startSpanManual)(\n            {\n              op: 'function.nextjs',\n              name: `${options.dataFetchingMethodName} (${options.dataFetcherRouteName})`,\n              attributes: {\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n              },\n            },\n            async dataFetcherSpan => {\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _3 => _3.setStatus, 'call', _4 => _4('ok')]);\n              try {\n                return await origDataFetcher.apply(this, args);\n              } catch (e) {\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _5 => _5.setStatus, 'call', _6 => _6('internal_error')]);\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([requestSpan, 'optionalAccess', _7 => _7.setStatus, 'call', _8 => _8('internal_error')]);\n                throw e;\n              } finally {\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _9 => _9.end, 'call', _10 => _10()]);\n                if (!(0,_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_6__.platformSupportsStreaming)()) {\n                  await (0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__.flushQueue)();\n                }\n              }\n            },\n          );\n        };\n\n        if (requestSpan) {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withActiveSpan)(requestSpan, withActiveSpanCallback);\n        } else {\n          return withActiveSpanCallback();\n        }\n      });\n    });\n  };\n}\n\n/**\n * Call a data fetcher and trace it. Only traces the function if there is an active transaction on the scope.\n *\n * We only do the following until we move transaction creation into this function: When called, the wrapped function\n * will also update the name of the active transaction with a parameterized route provided via the `options` argument.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function callDataFetcherTraced(\n  origFunction,\n  origFunctionArgs,\n  options\n\n,\n) {\n  const { parameterizedRoute, dataFetchingMethodName } = options;\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startSpan)(\n    {\n      op: 'function.nextjs',\n      name: `${dataFetchingMethodName} (${parameterizedRoute})`,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n      },\n    },\n    async dataFetcherSpan => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _11 => _11.setStatus, 'call', _12 => _12('ok')]);\n\n      try {\n        return await origFunction(...origFunctionArgs);\n      } catch (e) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _13 => _13.setStatus, 'call', _14 => _14('internal_error')]);\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(e, { mechanism: { handled: false } });\n        throw e;\n      } finally {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([dataFetcherSpan, 'optionalAccess', _15 => _15.end, 'call', _16 => _16()]);\n        if (!(0,_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_6__.platformSupportsStreaming)()) {\n          await (0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__.flushQueue)();\n        }\n      }\n    },\n  );\n}\n\n\n//# sourceMappingURL=wrapperUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withServerActionInstrumentation: () => (/* binding */ withServerActionInstrumentation)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/platformSupportsStreaming.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n\n\n\n\n/**\n * Wraps a Next.js Server Action implementation with Sentry Error and Performance instrumentation.\n */\nfunction withServerActionInstrumentation(\n  ...args\n) {\n  if (typeof args[1] === 'function') {\n    const [serverActionName, callback] = args;\n    return withServerActionInstrumentationImplementation(serverActionName, {}, callback);\n  } else {\n    const [serverActionName, options, callback] = args;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return withServerActionInstrumentationImplementation(serverActionName, options, callback);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function withServerActionInstrumentationImplementation(\n  serverActionName,\n  options,\n  callback,\n) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(isolationScope => {\n    const sendDefaultPii = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3(), 'access', _4 => _4.sendDefaultPii]);\n\n    let sentryTraceHeader;\n    let baggageHeader;\n    const fullHeadersObject = {};\n    try {\n      sentryTraceHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _5 => _5.headers, 'optionalAccess', _6 => _6.get, 'call', _7 => _7('sentry-trace')]), () => ( undefined));\n      baggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _8 => _8.headers, 'optionalAccess', _9 => _9.get, 'call', _10 => _10('baggage')]);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _11 => _11.headers, 'optionalAccess', _12 => _12.forEach, 'call', _13 => _13((value, key) => {\n        fullHeadersObject[key] = value;\n      })]);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n          \"Sentry wasn't able to extract the tracing headers for a server action. Will not trace this request.\",\n        );\n    }\n\n    isolationScope.setSDKProcessingMetadata({\n      request: {\n        headers: fullHeadersObject,\n      },\n    });\n\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.continueTrace)(\n      {\n        sentryTrace: sentryTraceHeader,\n        baggage: baggageHeader,\n      },\n      async () => {\n        try {\n          return await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.startSpan)(\n            {\n              op: 'function.server_action',\n              name: `serverAction/${serverActionName}`,\n              metadata: {\n                source: 'route',\n              },\n            },\n            async span => {\n              const result = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.handleCallbackErrors)(callback, error => {\n                if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_8__.isNotFoundNavigationError)(error)) {\n                  // We don't want to report \"not-found\"s\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _14 => _14.setStatus, 'call', _15 => _15('not_found')]);\n                } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_8__.isRedirectNavigationError)(error)) {\n                  // Don't do anything for redirects\n                } else {\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _16 => _16.setStatus, 'call', _17 => _17('internal_error')]);\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                    mechanism: {\n                      handled: false,\n                    },\n                  });\n                }\n              });\n\n              if (options.recordResponse !== undefined ? options.recordResponse : sendDefaultPii) {\n                (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getIsolationScope)().setExtra('server_action_result', result);\n              }\n\n              if (options.formData) {\n                options.formData.forEach((value, key) => {\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getIsolationScope)().setExtra(\n                    `server_action_form_data.${key}`,\n                    typeof value === 'string' ? value : '[non-string value]',\n                  );\n                });\n              }\n\n              return result;\n            },\n          );\n        } finally {\n          if (!(0,_utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__.platformSupportsStreaming)()) {\n            // Lambdas require manual flushing to prevent execution freeze before the event is sent\n            await (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__.flushQueue)();\n          }\n\n          if (false) {}\n        }\n      },\n    );\n  });\n}\n\n\n//# sourceMappingURL=withServerActionInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentry.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentry.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentry: () => (/* binding */ withSentry),\n/* harmony export */   withSentryAPI: () => (/* binding */ withSentryAPI),\n/* harmony export */   wrapApiHandlerWithSentry: () => (/* binding */ wrapApiHandlerWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/platformSupportsStreaming.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n\n\n/**\n * Wrap the given API route handler for tracing and error capturing. Thin wrapper around `withSentry`, which only\n * applies it if it hasn't already been applied.\n *\n * @param apiHandler The handler exported from the user's API page route file, which may or may not already be\n * wrapped with `withSentry`\n * @param parameterizedRoute The page's route, passed in via the proxy loader\n * @returns The wrapped handler\n */\nfunction wrapApiHandlerWithSentry(apiHandler, parameterizedRoute) {\n  return new Proxy(apiHandler, {\n    apply: (wrappingTarget, thisArg, args) => {\n      // eslint-disable-next-line deprecation/deprecation\n      return withSentry(wrappingTarget, parameterizedRoute).apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapApiHandlerWithSentry()` instead\n */\nconst withSentryAPI = wrapApiHandlerWithSentry;\n\n/**\n * Legacy function for manually wrapping API route handlers, now used as the innards of `wrapApiHandlerWithSentry`.\n *\n * @param apiHandler The user's original API route handler\n * @param parameterizedRoute The route whose handler is being wrapped. Meant for internal use only.\n * @returns A wrapped version of the handler\n *\n * @deprecated Use `wrapApiHandlerWithSentry()` instead\n */\nfunction withSentry(apiHandler, parameterizedRoute) {\n  return new Proxy(apiHandler, {\n    apply: (\n      wrappingTarget,\n      thisArg,\n      args,\n    ) => {\n      const [req, res] = args;\n\n      if (!req) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug(\n          `Wrapped API handler on route \"${parameterizedRoute}\" was not passed a request object. Will not instrument.`,\n        );\n        return wrappingTarget.apply(thisArg, args);\n      } else if (!res) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug(\n          `Wrapped API handler on route \"${parameterizedRoute}\" was not passed a response object. Will not instrument.`,\n        );\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      // We're now auto-wrapping API route handlers using `wrapApiHandlerWithSentry` (which uses `withSentry` under the hood), but\n      // users still may have their routes manually wrapped with `withSentry`. This check makes `sentryWrappedHandler`\n      // idempotent so that those cases don't break anything.\n      if (req.__withSentry_applied__) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n      req.__withSentry_applied__ = true;\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.runWithAsyncContext)(() => {\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.continueTrace)(\n          {\n            sentryTrace: req.headers && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined,\n            baggage: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([req, 'access', _ => _.headers, 'optionalAccess', _2 => _2.baggage]),\n          },\n          () => {\n            // prefer the parameterized route, if we have it (which we will if we've auto-wrapped the route handler)\n            let reqPath = parameterizedRoute;\n\n            // If not, fake it by just replacing parameter values with their names, hoping that none of them match either\n            // each other or any hard-coded parts of the path\n            if (!reqPath) {\n              const url = `${req.url}`;\n              // pull off query string, if any\n              reqPath = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.stripUrlQueryAndFragment)(url);\n              // Replace with placeholder\n              if (req.query) {\n                for (const [key, value] of Object.entries(req.query)) {\n                  reqPath = reqPath.replace(`${value}`, `[${key}]`);\n                }\n              }\n            }\n\n            const reqMethod = `${(req.method || 'GET').toUpperCase()} `;\n\n            (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getCurrentScope)().setSDKProcessingMetadata({ request: req });\n\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startSpanManual)(\n              {\n                name: `${reqMethod}${reqPath}`,\n                op: 'http.server',\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_8__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_8__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.nextjs',\n                },\n                metadata: {\n                  request: req,\n                },\n              },\n              async span => {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                res.end = new Proxy(res.end, {\n                  apply(target, thisArg, argArray) {\n                    if (span) {\n                      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.setHttpStatus)(span, res.statusCode);\n                      span.end();\n                    }\n                    if ((0,_utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__.platformSupportsStreaming)() && !wrappingTarget.__sentry_test_doesnt_support_streaming__) {\n                      target.apply(thisArg, argArray);\n                    } else {\n                      // flushQueue will not reject\n                      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                      (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__.flushQueue)().then(() => {\n                        target.apply(thisArg, argArray);\n                      });\n                    }\n                  },\n                });\n\n                try {\n                  const handlerResult = await wrappingTarget.apply(thisArg, args);\n                  if (\n                     true &&\n                    !process.env.SENTRY_IGNORE_API_RESOLUTION_ERROR &&\n                    !res.finished\n                    // TODO(v8): Remove this warning?\n                    // This can only happen (not always) when the user is using `withSentry` manually, which we're deprecating.\n                    // Warning suppression on Next.JS is only necessary in that case.\n                  ) {\n                    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n                      // eslint-disable-next-line no-console\n                      console.warn(\n                        '[sentry] If Next.js logs a warning \"API resolved without sending a response\", it\\'s a false positive, which may happen when you use `withSentry` manually to wrap your routes. To suppress this warning, set `SENTRY_IGNORE_API_RESOLUTION_ERROR` to 1 in your env. To suppress the nextjs warning, use the `externalResolver` API route option (see https://nextjs.org/docs/api-routes/api-middlewares#custom-config for details).',\n                      );\n                    });\n                  }\n\n                  return handlerResult;\n                } catch (e) {\n                  // In case we have a primitive, wrap it in the equivalent wrapper class (string -> String, etc.) so that we can\n                  // store a seen flag on it. (Because of the one-way-on-Vercel-one-way-off-of-Vercel approach we've been forced\n                  // to take, it can happen that the same thrown object gets caught in two different ways, and flagging it is a\n                  // way to prevent it from actually being reported twice.)\n                  const objectifiedErr = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.objectify)(e);\n\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.captureException)(objectifiedErr, {\n                    mechanism: {\n                      type: 'instrument',\n                      handled: false,\n                      data: {\n                        wrapped_handler: wrappingTarget.name,\n                        function: 'withSentry',\n                      },\n                    },\n                  });\n\n                  // Because we're going to finish and send the transaction before passing the error onto nextjs, it won't yet\n                  // have had a chance to set the status to 500, so unless we do it ourselves now, we'll incorrectly report that\n                  // the transaction was error-free\n                  res.statusCode = 500;\n                  res.statusMessage = 'Internal Server Error';\n\n                  if (span) {\n                    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.setHttpStatus)(span, res.statusCode);\n                    span.end();\n                  }\n\n                  // Make sure we have a chance to finish the transaction and flush events to Sentry before the handler errors\n                  // out. (Apps which are deployed on Vercel run their API routes in lambdas, and those lambdas will shut down the\n                  // moment they detect an error, so it's important to get this done before rethrowing the error. Apps not\n                  // deployed serverlessly will run into this cleanup code again in `res.end(), but the transaction will already\n                  // be finished and the queue will already be empty, so effectively it'll just no-op.)\n                  if ((0,_utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__.platformSupportsStreaming)() && !wrappingTarget.__sentry_test_doesnt_support_streaming__) {\n                    await (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__.flushQueue)();\n                  }\n\n                  // We rethrow here so that nextjs can do with the error whatever it would normally do. (Sometimes \"whatever it\n                  // would normally do\" is to allow the error to bubble up to the global handlers - another reason we need to mark\n                  // the error as already having been captured.)\n                  throw objectifiedErr;\n                }\n              },\n            );\n          },\n        );\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapApiHandlerWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapApiHandlerWithSentryVercelCrons: () => (/* binding */ wrapApiHandlerWithSentryVercelCrons)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n\n\n\n/**\n * Wraps a function with Sentry crons instrumentation by automaticaly sending check-ins for the given Vercel crons config.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapApiHandlerWithSentryVercelCrons(\n  handler,\n  vercelCronsConfig,\n) {\n  return new Proxy(handler, {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    apply: (originalFunction, thisArg, args) => {\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {\n        if (!args || !args[0]) {\n          return originalFunction.apply(thisArg, args);\n        }\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n        const [req] = args ;\n\n        let maybePromiseResult;\n        const cronsKey = 'nextUrl' in req ? req.nextUrl.pathname : req.url;\n        const userAgentHeader = 'nextUrl' in req ? req.headers.get('user-agent') : req.headers['user-agent'];\n\n        if (\n          !vercelCronsConfig || // do nothing if vercel crons config is missing\n          !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([userAgentHeader, 'optionalAccess', _ => _.includes, 'call', _2 => _2('vercel-cron')]) // do nothing if endpoint is not called from vercel crons\n        ) {\n          return originalFunction.apply(thisArg, args);\n        }\n\n        const vercelCron = vercelCronsConfig.find(vercelCron => vercelCron.path === cronsKey);\n\n        if (!vercelCron || !vercelCron.path || !vercelCron.schedule) {\n          return originalFunction.apply(thisArg, args);\n        }\n\n        const monitorSlug = vercelCron.path;\n\n        const checkInId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureCheckIn)(\n          {\n            monitorSlug,\n            status: 'in_progress',\n          },\n          {\n            maxRuntime: 60 * 12, // (minutes) so 12 hours - just a very high arbitrary number since we don't know the actual duration of the users cron job\n            schedule: {\n              type: 'crontab',\n              value: vercelCron.schedule,\n            },\n          },\n        );\n\n        const startTime = Date.now() / 1000;\n\n        const handleErrorCase = () => {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureCheckIn)({\n            checkInId,\n            monitorSlug,\n            status: 'error',\n            duration: Date.now() / 1000 - startTime,\n          });\n        };\n\n        try {\n          maybePromiseResult = originalFunction.apply(thisArg, args);\n        } catch (e) {\n          handleErrorCase();\n          throw e;\n        }\n\n        if (typeof maybePromiseResult === 'object' && maybePromiseResult !== null && 'then' in maybePromiseResult) {\n          Promise.resolve(maybePromiseResult).then(\n            () => {\n              (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureCheckIn)({\n                checkInId,\n                monitorSlug,\n                status: 'ok',\n                duration: Date.now() / 1000 - startTime,\n              });\n            },\n            () => {\n              handleErrorCase();\n            },\n          );\n\n          // It is very important that we return the original promise here, because Next.js attaches various properties\n          // to that promise and will throw if they are not on the returned value.\n          return maybePromiseResult;\n        } else {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureCheckIn)({\n            checkInId,\n            monitorSlug,\n            status: 'ok',\n            duration: Date.now() / 1000 - startTime,\n          });\n          return maybePromiseResult;\n        }\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapApiHandlerWithSentryVercelCrons.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUMwQzs7QUFFekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUVBQW1CO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLGtFQUFvQjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsNkRBQWM7QUFDekI7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwwQkFBMEIsNERBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYOztBQUVBOztBQUVBO0FBQ0EsVUFBVSw0REFBYztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDREQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVLDREQUFjO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFK0M7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBBcGlIYW5kbGVyV2l0aFNlbnRyeVZlcmNlbENyb25zLmpzPzQzODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHJ1bldpdGhBc3luY0NvbnRleHQsIGFkZFRyYWNpbmdFeHRlbnNpb25zLCBjYXB0dXJlQ2hlY2tJbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5cbi8qKlxuICogV3JhcHMgYSBmdW5jdGlvbiB3aXRoIFNlbnRyeSBjcm9ucyBpbnN0cnVtZW50YXRpb24gYnkgYXV0b21hdGljYWx5IHNlbmRpbmcgY2hlY2staW5zIGZvciB0aGUgZ2l2ZW4gVmVyY2VsIGNyb25zIGNvbmZpZy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHdyYXBBcGlIYW5kbGVyV2l0aFNlbnRyeVZlcmNlbENyb25zKFxuICBoYW5kbGVyLFxuICB2ZXJjZWxDcm9uc0NvbmZpZyxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KGhhbmRsZXIsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGFwcGx5OiAob3JpZ2luYWxGdW5jdGlvbiwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgcmV0dXJuIHJ1bldpdGhBc3luY0NvbnRleHQoKCkgPT4ge1xuICAgICAgICBpZiAoIWFyZ3MgfHwgIWFyZ3NbMF0pIHtcbiAgICAgICAgICByZXR1cm4gb3JpZ2luYWxGdW5jdGlvbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFkZFRyYWNpbmdFeHRlbnNpb25zKCk7XG4gICAgICAgIGNvbnN0IFtyZXFdID0gYXJncyA7XG5cbiAgICAgICAgbGV0IG1heWJlUHJvbWlzZVJlc3VsdDtcbiAgICAgICAgY29uc3QgY3JvbnNLZXkgPSAnbmV4dFVybCcgaW4gcmVxID8gcmVxLm5leHRVcmwucGF0aG5hbWUgOiByZXEudXJsO1xuICAgICAgICBjb25zdCB1c2VyQWdlbnRIZWFkZXIgPSAnbmV4dFVybCcgaW4gcmVxID8gcmVxLmhlYWRlcnMuZ2V0KCd1c2VyLWFnZW50JykgOiByZXEuaGVhZGVyc1sndXNlci1hZ2VudCddO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAhdmVyY2VsQ3JvbnNDb25maWcgfHwgLy8gZG8gbm90aGluZyBpZiB2ZXJjZWwgY3JvbnMgY29uZmlnIGlzIG1pc3NpbmdcbiAgICAgICAgICAhX29wdGlvbmFsQ2hhaW4oW3VzZXJBZ2VudEhlYWRlciwgJ29wdGlvbmFsQWNjZXNzJywgXyA9PiBfLmluY2x1ZGVzLCAnY2FsbCcsIF8yID0+IF8yKCd2ZXJjZWwtY3JvbicpXSkgLy8gZG8gbm90aGluZyBpZiBlbmRwb2ludCBpcyBub3QgY2FsbGVkIGZyb20gdmVyY2VsIGNyb25zXG4gICAgICAgICkge1xuICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgdmVyY2VsQ3JvbiA9IHZlcmNlbENyb25zQ29uZmlnLmZpbmQodmVyY2VsQ3JvbiA9PiB2ZXJjZWxDcm9uLnBhdGggPT09IGNyb25zS2V5KTtcblxuICAgICAgICBpZiAoIXZlcmNlbENyb24gfHwgIXZlcmNlbENyb24ucGF0aCB8fCAhdmVyY2VsQ3Jvbi5zY2hlZHVsZSkge1xuICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbW9uaXRvclNsdWcgPSB2ZXJjZWxDcm9uLnBhdGg7XG5cbiAgICAgICAgY29uc3QgY2hlY2tJbklkID0gY2FwdHVyZUNoZWNrSW4oXG4gICAgICAgICAge1xuICAgICAgICAgICAgbW9uaXRvclNsdWcsXG4gICAgICAgICAgICBzdGF0dXM6ICdpbl9wcm9ncmVzcycsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBtYXhSdW50aW1lOiA2MCAqIDEyLCAvLyAobWludXRlcykgc28gMTIgaG91cnMgLSBqdXN0IGEgdmVyeSBoaWdoIGFyYml0cmFyeSBudW1iZXIgc2luY2Ugd2UgZG9uJ3Qga25vdyB0aGUgYWN0dWFsIGR1cmF0aW9uIG9mIHRoZSB1c2VycyBjcm9uIGpvYlxuICAgICAgICAgICAgc2NoZWR1bGU6IHtcbiAgICAgICAgICAgICAgdHlwZTogJ2Nyb250YWInLFxuICAgICAgICAgICAgICB2YWx1ZTogdmVyY2VsQ3Jvbi5zY2hlZHVsZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpIC8gMTAwMDtcblxuICAgICAgICBjb25zdCBoYW5kbGVFcnJvckNhc2UgPSAoKSA9PiB7XG4gICAgICAgICAgY2FwdHVyZUNoZWNrSW4oe1xuICAgICAgICAgICAgY2hlY2tJbklkLFxuICAgICAgICAgICAgbW9uaXRvclNsdWcsXG4gICAgICAgICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICAgICAgICBkdXJhdGlvbjogRGF0ZS5ub3coKSAvIDEwMDAgLSBzdGFydFRpbWUsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBtYXliZVByb21pc2VSZXN1bHQgPSBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgaGFuZGxlRXJyb3JDYXNlKCk7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgbWF5YmVQcm9taXNlUmVzdWx0ID09PSAnb2JqZWN0JyAmJiBtYXliZVByb21pc2VSZXN1bHQgIT09IG51bGwgJiYgJ3RoZW4nIGluIG1heWJlUHJvbWlzZVJlc3VsdCkge1xuICAgICAgICAgIFByb21pc2UucmVzb2x2ZShtYXliZVByb21pc2VSZXN1bHQpLnRoZW4oXG4gICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgIGNhcHR1cmVDaGVja0luKHtcbiAgICAgICAgICAgICAgICBjaGVja0luSWQsXG4gICAgICAgICAgICAgICAgbW9uaXRvclNsdWcsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnb2snLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBEYXRlLm5vdygpIC8gMTAwMCAtIHN0YXJ0VGltZSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICBoYW5kbGVFcnJvckNhc2UoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIC8vIEl0IGlzIHZlcnkgaW1wb3J0YW50IHRoYXQgd2UgcmV0dXJuIHRoZSBvcmlnaW5hbCBwcm9taXNlIGhlcmUsIGJlY2F1c2UgTmV4dC5qcyBhdHRhY2hlcyB2YXJpb3VzIHByb3BlcnRpZXNcbiAgICAgICAgICAvLyB0byB0aGF0IHByb21pc2UgYW5kIHdpbGwgdGhyb3cgaWYgdGhleSBhcmUgbm90IG9uIHRoZSByZXR1cm5lZCB2YWx1ZS5cbiAgICAgICAgICByZXR1cm4gbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmVDaGVja0luKHtcbiAgICAgICAgICAgIGNoZWNrSW5JZCxcbiAgICAgICAgICAgIG1vbml0b3JTbHVnLFxuICAgICAgICAgICAgc3RhdHVzOiAnb2snLFxuICAgICAgICAgICAgZHVyYXRpb246IERhdGUubm93KCkgLyAxMDAwIC0gc3RhcnRUaW1lLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBtYXliZVByb21pc2VSZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyB3cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcEFwaUhhbmRsZXJXaXRoU2VudHJ5VmVyY2VsQ3JvbnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryServerSideAppGetInitialProps: () => (/* binding */ withSentryServerSideAppGetInitialProps),\n/* harmony export */   wrapAppGetInitialPropsWithSentry: () => (/* binding */ wrapAppGetInitialPropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom app (\"_app.js\").\n *\n * @param origAppGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapAppGetInitialPropsWithSentry(origAppGetInitialProps) {\n  return new Proxy(origAppGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const [context] = args;\n      const { req, res } = context.ctx;\n\n      const errorWrappedAppGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withTracedServerSideDataFetcher)(errorWrappedAppGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_app',\n          requestedRouteName: context.ctx.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const appGetInitialProps\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getRootSpan)(activeSpan) : undefined)));\n\n        // Per definition, `pageProps` is not optional, however an increased amount of users doesn't seem to call\n        // `App.getInitialProps(appContext)` in their custom `_app` pages which is required as per\n        // https://nextjs.org/docs/advanced-features/custom-app - resulting in missing `pageProps`.\n        // For this reason, we just handle the case where `pageProps` doesn't exist explicitly.\n        if (!appGetInitialProps.pageProps) {\n          appGetInitialProps.pageProps = {};\n        }\n\n        if (requestSpan) {\n          appGetInitialProps.pageProps._sentryTraceData = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.spanToTraceHeader)(requestSpan);\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(requestSpan);\n          appGetInitialProps.pageProps._sentryBaggage =\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n        }\n\n        return appGetInitialProps;\n      } else {\n        return errorWrappedAppGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapAppGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideAppGetInitialProps = wrapAppGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapAppGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQ2dGO0FBQ3JFO0FBQy9CO0FBQzJFOztBQUV4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwREFBTztBQUNqQjtBQUNBOztBQUVBLE1BQU0sa0VBQW9COztBQUUxQjtBQUNBLGNBQWMsV0FBVzs7QUFFekIsNkNBQTZDLGdGQUF3QjtBQUNyRSxzQkFBc0IsNkRBQWMsRUFBRSxtREFBUzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkRBQWM7QUFDdEMsc0NBQXNDLHVGQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBLDJCQUEyQiwyREFBYTtBQUN4Qyw0QkFBNEIsK0RBQWdCLENBQUMsMEVBQWtCLDZCQUE2Qix5REFBVzs7QUFFdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwREFBMEQsK0RBQWlCO0FBQzNFLHlDQUF5QywrRUFBaUM7QUFDMUU7QUFDQSxZQUFZLDJGQUEyQztBQUN2RDs7QUFFQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0Y7QUFDcEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzPzA0NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCBnZXRBY3RpdmVTcGFuLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBnZXRDbGllbnQsIGdldFJvb3RTcGFuIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgZ2V0U3BhbkZyb21SZXF1ZXN0LCB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3V0aWxzL3dyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSB1c2VyJ3MgZXhwb3J0ZWQgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb24gaW5cbiAqIGEgY3VzdG9tIGFwcCAoXCJfYXBwLmpzXCIpLlxuICpcbiAqIEBwYXJhbSBvcmlnQXBwR2V0SW5pdGlhbFByb3BzIFRoZSB1c2VyJ3MgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb25cbiAqIEBwYXJhbSBwYXJhbWV0ZXJpemVkUm91dGUgVGhlIHBhZ2UncyBwYXJhbWV0ZXJpemVkIHJvdXRlXG4gKiBAcmV0dXJucyBBIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgZnVuY3Rpb25cbiAqL1xuZnVuY3Rpb24gd3JhcEFwcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkob3JpZ0FwcEdldEluaXRpYWxQcm9wcykge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdBcHBHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICBpZiAoaXNCdWlsZCgpKSB7XG4gICAgICAgIHJldHVybiB3cmFwcGluZ1RhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgYWRkVHJhY2luZ0V4dGVuc2lvbnMoKTtcblxuICAgICAgY29uc3QgW2NvbnRleHRdID0gYXJncztcbiAgICAgIGNvbnN0IHsgcmVxLCByZXMgfSA9IGNvbnRleHQuY3R4O1xuXG4gICAgICBjb25zdCBlcnJvcldyYXBwZWRBcHBHZXRJbml0aWFsUHJvcHMgPSB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24od3JhcHBpbmdUYXJnZXQpO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IF9vcHRpb25hbENoYWluKFtnZXRDbGllbnQsICdjYWxsJywgXyA9PiBfKCksICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldE9wdGlvbnMsICdjYWxsJywgXzMgPT4gXzMoKV0pO1xuXG4gICAgICAvLyBHZW5lcmFsbHkgd2UgY2FuIGFzc3VtZSB0aGF0IGByZXFgIGFuZCBgcmVzYCBhcmUgYWx3YXlzIGRlZmluZWQgb24gdGhlIHNlcnZlcjpcbiAgICAgIC8vIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2UvZGF0YS1mZXRjaGluZy9nZXQtaW5pdGlhbC1wcm9wcyNjb250ZXh0LW9iamVjdFxuICAgICAgLy8gVGhpcyBkb2VzIG5vdCBzZWVtIHRvIGJlIHRoZSBjYXNlIGluIGRldiBtb2RlLiBCZWNhdXNlIHdlIGhhdmUgbm8gY2xlYW4gd2F5IG9mIGFzc29jaWF0aW5nIHRoZSB0aGUgZGF0YSBmZXRjaGVyXG4gICAgICAvLyBzcGFuIHdpdGggZWFjaCBvdGhlciB3aGVuIHRoZXJlIGFyZSBubyByZXEgb3IgcmVzIG9iamVjdHMsIHdlIHNpbXBseSBkbyBub3QgdHJhY2UgdGhlbSBhdCBhbGwgaGVyZS5cbiAgICAgIGlmIChyZXEgJiYgcmVzICYmIF9vcHRpb25hbENoYWluKFtvcHRpb25zLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC5pbnN0cnVtZW50ZXJdKSA9PT0gJ3NlbnRyeScpIHtcbiAgICAgICAgY29uc3QgdHJhY2VkR2V0SW5pdGlhbFByb3BzID0gd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlcihlcnJvcldyYXBwZWRBcHBHZXRJbml0aWFsUHJvcHMsIHJlcSwgcmVzLCB7XG4gICAgICAgICAgZGF0YUZldGNoZXJSb3V0ZU5hbWU6ICcvX2FwcCcsXG4gICAgICAgICAgcmVxdWVzdGVkUm91dGVOYW1lOiBjb250ZXh0LmN0eC5wYXRobmFtZSxcbiAgICAgICAgICBkYXRhRmV0Y2hpbmdNZXRob2ROYW1lOiAnZ2V0SW5pdGlhbFByb3BzJyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgYXBwR2V0SW5pdGlhbFByb3BzXG5cbiA9IGF3YWl0IHRyYWNlZEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcblxuICAgICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgICBjb25zdCByZXF1ZXN0U3BhbiA9IF9udWxsaXNoQ29hbGVzY2UoZ2V0U3BhbkZyb21SZXF1ZXN0KHJlcSksICgpID0+ICggKGFjdGl2ZVNwYW4gPyBnZXRSb290U3BhbihhY3RpdmVTcGFuKSA6IHVuZGVmaW5lZCkpKTtcblxuICAgICAgICAvLyBQZXIgZGVmaW5pdGlvbiwgYHBhZ2VQcm9wc2AgaXMgbm90IG9wdGlvbmFsLCBob3dldmVyIGFuIGluY3JlYXNlZCBhbW91bnQgb2YgdXNlcnMgZG9lc24ndCBzZWVtIHRvIGNhbGxcbiAgICAgICAgLy8gYEFwcC5nZXRJbml0aWFsUHJvcHMoYXBwQ29udGV4dClgIGluIHRoZWlyIGN1c3RvbSBgX2FwcGAgcGFnZXMgd2hpY2ggaXMgcmVxdWlyZWQgYXMgcGVyXG4gICAgICAgIC8vIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FkdmFuY2VkLWZlYXR1cmVzL2N1c3RvbS1hcHAgLSByZXN1bHRpbmcgaW4gbWlzc2luZyBgcGFnZVByb3BzYC5cbiAgICAgICAgLy8gRm9yIHRoaXMgcmVhc29uLCB3ZSBqdXN0IGhhbmRsZSB0aGUgY2FzZSB3aGVyZSBgcGFnZVByb3BzYCBkb2Vzbid0IGV4aXN0IGV4cGxpY2l0bHkuXG4gICAgICAgIGlmICghYXBwR2V0SW5pdGlhbFByb3BzLnBhZ2VQcm9wcykge1xuICAgICAgICAgIGFwcEdldEluaXRpYWxQcm9wcy5wYWdlUHJvcHMgPSB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChyZXF1ZXN0U3Bhbikge1xuICAgICAgICAgIGFwcEdldEluaXRpYWxQcm9wcy5wYWdlUHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9IHNwYW5Ub1RyYWNlSGVhZGVyKHJlcXVlc3RTcGFuKTtcbiAgICAgICAgICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHJlcXVlc3RTcGFuKTtcbiAgICAgICAgICBhcHBHZXRJbml0aWFsUHJvcHMucGFnZVByb3BzLl9zZW50cnlCYWdnYWdlID1cbiAgICAgICAgICAgIGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXBwR2V0SW5pdGlhbFByb3BzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVycm9yV3JhcHBlZEFwcEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5YCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5U2VydmVyU2lkZUFwcEdldEluaXRpYWxQcm9wcyA9IHdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5O1xuXG5leHBvcnQgeyB3aXRoU2VudHJ5U2VydmVyU2lkZUFwcEdldEluaXRpYWxQcm9wcywgd3JhcEFwcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryServerSideDocumentGetInitialProps: () => (/* binding */ withSentryServerSideDocumentGetInitialProps),\n/* harmony export */   wrapDocumentGetInitialPropsWithSentry: () => (/* binding */ wrapDocumentGetInitialPropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom document (\"_document.js\").\n *\n * @param origDocumentGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapDocumentGetInitialPropsWithSentry(\n  origDocumentGetInitialProps,\n) {\n  return new Proxy(origDocumentGetInitialProps, {\n    apply: (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_document',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        return tracedGetInitialProps.apply(thisArg, args);\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapDocumentGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideDocumentGetInitialProps = wrapDocumentGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapDocumentGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0M7QUFDZ0I7QUFDbEI7QUFDdUQ7O0FBRXBHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwREFBTztBQUNqQjtBQUNBOztBQUVBLE1BQU0sa0VBQW9COztBQUUxQjtBQUNBLGNBQWMsV0FBVzs7QUFFekIsMENBQTBDLGdGQUF3QjtBQUNsRSxzQkFBc0IsNkRBQWMsRUFBRSxtREFBUzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkRBQWM7QUFDdEMsc0NBQXNDLHVGQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUU4RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcz84NTgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgZ2V0Q2xpZW50IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy93cmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgdXNlcidzIGV4cG9ydGVkIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uIGluXG4gKiBhIGN1c3RvbSBkb2N1bWVudCAoXCJfZG9jdW1lbnQuanNcIikuXG4gKlxuICogQHBhcmFtIG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcyBUaGUgdXNlcidzIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uXG4gKiBAcGFyYW0gcGFyYW1ldGVyaXplZFJvdXRlIFRoZSBwYWdlJ3MgcGFyYW1ldGVyaXplZCByb3V0ZVxuICogQHJldHVybnMgQSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHdyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkoXG4gIG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcyxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcywge1xuICAgIGFwcGx5OiAod3JhcHBpbmdUYXJnZXQsIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIGlmIChpc0J1aWxkKCkpIHtcbiAgICAgICAgcmV0dXJuIHdyYXBwaW5nVGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBhZGRUcmFjaW5nRXh0ZW5zaW9ucygpO1xuXG4gICAgICBjb25zdCBbY29udGV4dF0gPSBhcmdzO1xuICAgICAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcblxuICAgICAgY29uc3QgZXJyb3JXcmFwcGVkR2V0SW5pdGlhbFByb3BzID0gd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uKHdyYXBwaW5nVGFyZ2V0KTtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSBfb3B0aW9uYWxDaGFpbihbZ2V0Q2xpZW50LCAnY2FsbCcsIF8gPT4gXygpLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5nZXRPcHRpb25zLCAnY2FsbCcsIF8zID0+IF8zKCldKTtcblxuICAgICAgLy8gR2VuZXJhbGx5IHdlIGNhbiBhc3N1bWUgdGhhdCBgcmVxYCBhbmQgYHJlc2AgYXJlIGFsd2F5cyBkZWZpbmVkIG9uIHRoZSBzZXJ2ZXI6XG4gICAgICAvLyBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcmVmZXJlbmNlL2RhdGEtZmV0Y2hpbmcvZ2V0LWluaXRpYWwtcHJvcHMjY29udGV4dC1vYmplY3RcbiAgICAgIC8vIFRoaXMgZG9lcyBub3Qgc2VlbSB0byBiZSB0aGUgY2FzZSBpbiBkZXYgbW9kZS4gQmVjYXVzZSB3ZSBoYXZlIG5vIGNsZWFuIHdheSBvZiBhc3NvY2lhdGluZyB0aGUgdGhlIGRhdGEgZmV0Y2hlclxuICAgICAgLy8gc3BhbiB3aXRoIGVhY2ggb3RoZXIgd2hlbiB0aGVyZSBhcmUgbm8gcmVxIG9yIHJlcyBvYmplY3RzLCB3ZSBzaW1wbHkgZG8gbm90IHRyYWNlIHRoZW0gYXQgYWxsIGhlcmUuXG4gICAgICBpZiAocmVxICYmIHJlcyAmJiBfb3B0aW9uYWxDaGFpbihbb3B0aW9ucywgJ29wdGlvbmFsQWNjZXNzJywgXzQgPT4gXzQuaW5zdHJ1bWVudGVyXSkgPT09ICdzZW50cnknKSB7XG4gICAgICAgIGNvbnN0IHRyYWNlZEdldEluaXRpYWxQcm9wcyA9IHdpdGhUcmFjZWRTZXJ2ZXJTaWRlRGF0YUZldGNoZXIoZXJyb3JXcmFwcGVkR2V0SW5pdGlhbFByb3BzLCByZXEsIHJlcywge1xuICAgICAgICAgIGRhdGFGZXRjaGVyUm91dGVOYW1lOiAnL19kb2N1bWVudCcsXG4gICAgICAgICAgcmVxdWVzdGVkUm91dGVOYW1lOiBjb250ZXh0LnBhdGhuYW1lLFxuICAgICAgICAgIGRhdGFGZXRjaGluZ01ldGhvZE5hbWU6ICdnZXRJbml0aWFsUHJvcHMnLFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdHJhY2VkR2V0SW5pdGlhbFByb3BzLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHdyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnlgIGluc3RlYWQuXG4gKi9cbmNvbnN0IHdpdGhTZW50cnlTZXJ2ZXJTaWRlRG9jdW1lbnRHZXRJbml0aWFsUHJvcHMgPSB3cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5O1xuXG5leHBvcnQgeyB3aXRoU2VudHJ5U2VydmVyU2lkZURvY3VtZW50R2V0SW5pdGlhbFByb3BzLCB3cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryServerSideErrorGetInitialProps: () => (/* binding */ withSentryServerSideErrorGetInitialProps),\n/* harmony export */   wrapErrorGetInitialPropsWithSentry: () => (/* binding */ wrapErrorGetInitialPropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom error page (\"_error.js\").\n *\n * @param origErrorGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapErrorGetInitialPropsWithSentry(\n  origErrorGetInitialProps,\n) {\n  return new Proxy(origErrorGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_error',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const errorGetInitialProps\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getRootSpan)(activeSpan) : undefined)));\n\n        if (requestSpan) {\n          errorGetInitialProps._sentryTraceData = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.spanToTraceHeader)(requestSpan);\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(requestSpan);\n          errorGetInitialProps._sentryBaggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n        }\n\n        return errorGetInitialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapErrorGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideErrorGetInitialProps = wrapErrorGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapErrorGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUU7QUFDZ0Y7QUFDckU7QUFDL0I7QUFDMkU7O0FBRXhIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwREFBTztBQUNqQjtBQUNBOztBQUVBLE1BQU0sa0VBQW9COztBQUUxQjtBQUNBLGNBQWMsV0FBVzs7QUFFekIsMENBQTBDLGdGQUF3QjtBQUNsRSxzQkFBc0IsNkRBQWMsRUFBRSxtREFBUzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkRBQWM7QUFDdEMsc0NBQXNDLHVGQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBLDJCQUEyQiwyREFBYTtBQUN4Qyw0QkFBNEIsK0RBQWdCLENBQUMsMEVBQWtCLDZCQUE2Qix5REFBVzs7QUFFdkc7QUFDQSxrREFBa0QsK0RBQWlCOztBQUVuRSx5Q0FBeUMsK0VBQWlDO0FBQzFFLGdEQUFnRCwyRkFBMkM7QUFDM0Y7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRXdGO0FBQ3hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzPzJhMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCBnZXRBY3RpdmVTcGFuLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBnZXRDbGllbnQsIGdldFJvb3RTcGFuIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgZ2V0U3BhbkZyb21SZXF1ZXN0LCB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3V0aWxzL3dyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSB1c2VyJ3MgZXhwb3J0ZWQgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb24gaW5cbiAqIGEgY3VzdG9tIGVycm9yIHBhZ2UgKFwiX2Vycm9yLmpzXCIpLlxuICpcbiAqIEBwYXJhbSBvcmlnRXJyb3JHZXRJbml0aWFsUHJvcHMgVGhlIHVzZXIncyBgZ2V0SW5pdGlhbFByb3BzYCBmdW5jdGlvblxuICogQHBhcmFtIHBhcmFtZXRlcml6ZWRSb3V0ZSBUaGUgcGFnZSdzIHBhcmFtZXRlcml6ZWQgcm91dGVcbiAqIEByZXR1cm5zIEEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSBmdW5jdGlvblxuICovXG5mdW5jdGlvbiB3cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5KFxuICBvcmlnRXJyb3JHZXRJbml0aWFsUHJvcHMsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnRXJyb3JHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICBpZiAoaXNCdWlsZCgpKSB7XG4gICAgICAgIHJldHVybiB3cmFwcGluZ1RhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgYWRkVHJhY2luZ0V4dGVuc2lvbnMoKTtcblxuICAgICAgY29uc3QgW2NvbnRleHRdID0gYXJncztcbiAgICAgIGNvbnN0IHsgcmVxLCByZXMgfSA9IGNvbnRleHQ7XG5cbiAgICAgIGNvbnN0IGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcyA9IHdpdGhFcnJvckluc3RydW1lbnRhdGlvbih3cmFwcGluZ1RhcmdldCk7XG4gICAgICBjb25zdCBvcHRpb25zID0gX29wdGlvbmFsQ2hhaW4oW2dldENsaWVudCwgJ2NhbGwnLCBfID0+IF8oKSwgJ29wdGlvbmFsQWNjZXNzJywgXzIgPT4gXzIuZ2V0T3B0aW9ucywgJ2NhbGwnLCBfMyA9PiBfMygpXSk7XG5cbiAgICAgIC8vIEdlbmVyYWxseSB3ZSBjYW4gYXNzdW1lIHRoYXQgYHJlcWAgYW5kIGByZXNgIGFyZSBhbHdheXMgZGVmaW5lZCBvbiB0aGUgc2VydmVyOlxuICAgICAgLy8gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9kYXRhLWZldGNoaW5nL2dldC1pbml0aWFsLXByb3BzI2NvbnRleHQtb2JqZWN0XG4gICAgICAvLyBUaGlzIGRvZXMgbm90IHNlZW0gdG8gYmUgdGhlIGNhc2UgaW4gZGV2IG1vZGUuIEJlY2F1c2Ugd2UgaGF2ZSBubyBjbGVhbiB3YXkgb2YgYXNzb2NpYXRpbmcgdGhlIHRoZSBkYXRhIGZldGNoZXJcbiAgICAgIC8vIHNwYW4gd2l0aCBlYWNoIG90aGVyIHdoZW4gdGhlcmUgYXJlIG5vIHJlcSBvciByZXMgb2JqZWN0cywgd2Ugc2ltcGx5IGRvIG5vdCB0cmFjZSB0aGVtIGF0IGFsbCBoZXJlLlxuICAgICAgaWYgKHJlcSAmJiByZXMgJiYgX29wdGlvbmFsQ2hhaW4oW29wdGlvbnMsICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80Lmluc3RydW1lbnRlcl0pID09PSAnc2VudHJ5Jykge1xuICAgICAgICBjb25zdCB0cmFjZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyKGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcywgcmVxLCByZXMsIHtcbiAgICAgICAgICBkYXRhRmV0Y2hlclJvdXRlTmFtZTogJy9fZXJyb3InLFxuICAgICAgICAgIHJlcXVlc3RlZFJvdXRlTmFtZTogY29udGV4dC5wYXRobmFtZSxcbiAgICAgICAgICBkYXRhRmV0Y2hpbmdNZXRob2ROYW1lOiAnZ2V0SW5pdGlhbFByb3BzJyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgZXJyb3JHZXRJbml0aWFsUHJvcHNcblxuID0gYXdhaXQgdHJhY2VkR2V0SW5pdGlhbFByb3BzLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuXG4gICAgICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSBnZXRBY3RpdmVTcGFuKCk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RTcGFuID0gX251bGxpc2hDb2FsZXNjZShnZXRTcGFuRnJvbVJlcXVlc3QocmVxKSwgKCkgPT4gKCAoYWN0aXZlU3BhbiA/IGdldFJvb3RTcGFuKGFjdGl2ZVNwYW4pIDogdW5kZWZpbmVkKSkpO1xuXG4gICAgICAgIGlmIChyZXF1ZXN0U3Bhbikge1xuICAgICAgICAgIGVycm9yR2V0SW5pdGlhbFByb3BzLl9zZW50cnlUcmFjZURhdGEgPSBzcGFuVG9UcmFjZUhlYWRlcihyZXF1ZXN0U3Bhbik7XG5cbiAgICAgICAgICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHJlcXVlc3RTcGFuKTtcbiAgICAgICAgICBlcnJvckdldEluaXRpYWxQcm9wcy5fc2VudHJ5QmFnZ2FnZSA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZXJyb3JHZXRJbml0aWFsUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZXJyb3JXcmFwcGVkR2V0SW5pdGlhbFByb3BzLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeWAgaW5zdGVhZC5cbiAqL1xuY29uc3Qgd2l0aFNlbnRyeVNlcnZlclNpZGVFcnJvckdldEluaXRpYWxQcm9wcyA9IHdyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnk7XG5cbmV4cG9ydCB7IHdpdGhTZW50cnlTZXJ2ZXJTaWRlRXJyb3JHZXRJbml0aWFsUHJvcHMsIHdyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapGenerationFunctionWithSentry: () => (/* binding */ wrapGenerationFunctionWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_commonObjectTracing_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/commonObjectTracing.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/commonObjectTracing.js\");\n\n\n\n\n\n\n/**\n * Wraps a generation function (e.g. generateMetadata) with Sentry error and performance instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapGenerationFunctionWithSentry(\n  generationFunction,\n  context,\n) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n  const { requestAsyncStorage, componentRoute, componentType, generationFunctionIdentifier } = context;\n  return new Proxy(generationFunction, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n      // We try-catch here just in case anything goes wrong with the async storage here goes wrong since it is Next.js internal API\n      try {\n        headers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([requestAsyncStorage, 'optionalAccess', _ => _.getStore, 'call', _2 => _2(), 'optionalAccess', _3 => _3.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      let data = undefined;\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient, 'call', _4 => _4(), 'optionalAccess', _5 => _5.getOptions, 'call', _6 => _6(), 'access', _7 => _7.sendDefaultPii])) {\n        const props = args[0];\n        const params = props && typeof props === 'object' && 'params' in props ? props.params : undefined;\n        const searchParams =\n          props && typeof props === 'object' && 'searchParams' in props ? props.searchParams : undefined;\n        data = { params, searchParams };\n      }\n\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withIsolationScope)(isolationScope => {\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: headers ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.winterCGHeadersToDict)(headers) : undefined,\n          },\n        });\n        isolationScope.setExtra('route_data', data);\n\n        const incomingPropagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.propagationContextFromHeaders)(\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([headers, 'optionalAccess', _8 => _8.get, 'call', _9 => _9('sentry-trace')]), () => ( undefined)),\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([headers, 'optionalAccess', _10 => _10.get, 'call', _11 => _11('baggage')]),\n        );\n\n        const propagationContext = (0,_utils_commonObjectTracing_js__WEBPACK_IMPORTED_MODULE_6__.commonObjectToPropagationContext)(headers, incomingPropagationContext);\n        isolationScope.setPropagationContext(propagationContext);\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)().setPropagationContext(propagationContext);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.startSpanManual)(\n          {\n            op: 'function.nextjs',\n            name: `${componentType}.${generationFunctionIdentifier} (${componentRoute})`,\n            data,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_8__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_8__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n            },\n          },\n          span => {\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.handleCallbackErrors)(\n              () => originalFunction.apply(thisArg, args),\n              err => {\n                if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_10__.isNotFoundNavigationError)(err)) {\n                  // We don't want to report \"not-found\"s\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([span, 'optionalAccess', _12 => _12.setStatus, 'call', _13 => _13('not_found')]);\n                } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_10__.isRedirectNavigationError)(err)) {\n                  // We don't want to report redirects\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([span, 'optionalAccess', _14 => _14.setStatus, 'call', _15 => _15('ok')]);\n                } else {\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([span, 'optionalAccess', _16 => _16.setStatus, 'call', _17 => _17('internal_error')]);\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(err, {\n                    mechanism: {\n                      handled: false,\n                    },\n                  });\n                }\n              },\n              () => {\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([span, 'optionalAccess', _18 => _18.end, 'call', _19 => _19()]);\n              },\n            );\n          },\n        );\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapGenerationFunctionWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2VuZXJhdGlvbkZ1bmN0aW9uV2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBaUU7QUFDZ0s7QUFDNUk7QUFDZ0I7QUFDbkI7O0FBRWxGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFvQjtBQUN0QixVQUFVLG1GQUFtRjtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZEQUFjO0FBQ2hDLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0EsVUFBVSw2REFBYyxFQUFFLG1EQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBLGFBQWEsZ0VBQWtCO0FBQy9CO0FBQ0E7QUFDQSwrQkFBK0Isb0VBQXFCO0FBQ3BELFdBQVc7QUFDWCxTQUFTO0FBQ1Q7O0FBRUEsMkNBQTJDLDRFQUE2QjtBQUN4RSxVQUFVLCtEQUFnQixDQUFDLDZEQUFjO0FBQ3pDLFVBQVUsNkRBQWM7QUFDeEI7O0FBRUEsbUNBQW1DLCtGQUFnQztBQUNuRTtBQUNBLFFBQVEsNkRBQWU7O0FBRXZCLGVBQWUsNkRBQWU7QUFDOUI7QUFDQTtBQUNBLHFCQUFxQixjQUFjLEdBQUcsOEJBQThCLEdBQUcsZUFBZTtBQUN0RjtBQUNBO0FBQ0EsZUFBZSwwRUFBZ0M7QUFDL0MsZUFBZSwwRUFBZ0M7QUFDL0MsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBLG1CQUFtQixrRUFBb0I7QUFDdkM7QUFDQTtBQUNBLG9CQUFvQix3RkFBeUI7QUFDN0M7QUFDQSxrQkFBa0IsNkRBQWM7QUFDaEMsa0JBQWtCLFNBQVMsd0ZBQXlCO0FBQ3BEO0FBQ0Esa0JBQWtCLDZEQUFjO0FBQ2hDLGtCQUFrQjtBQUNsQixrQkFBa0IsNkRBQWM7QUFDaEMsa0JBQWtCLDhEQUFnQjtBQUNsQztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLGdCQUFnQiw2REFBYztBQUM5QixlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5LmpzP2JhNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCB3aXRoSXNvbGF0aW9uU2NvcGUsIGdldEN1cnJlbnRTY29wZSwgc3RhcnRTcGFuTWFudWFsLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIGhhbmRsZUNhbGxiYWNrRXJyb3JzLCBjYXB0dXJlRXhjZXB0aW9uLCBnZXRDbGllbnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgd2ludGVyQ0dIZWFkZXJzVG9EaWN0LCBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvciwgaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvciB9IGZyb20gJy4vbmV4dE5hdmlnYXRpb25FcnJvclV0aWxzLmpzJztcbmltcG9ydCB7IGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0IH0gZnJvbSAnLi91dGlscy9jb21tb25PYmplY3RUcmFjaW5nLmpzJztcblxuLyoqXG4gKiBXcmFwcyBhIGdlbmVyYXRpb24gZnVuY3Rpb24gKGUuZy4gZ2VuZXJhdGVNZXRhZGF0YSkgd2l0aCBTZW50cnkgZXJyb3IgYW5kIHBlcmZvcm1hbmNlIGluc3RydW1lbnRhdGlvbi5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHdyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5KFxuICBnZW5lcmF0aW9uRnVuY3Rpb24sXG4gIGNvbnRleHQsXG4pIHtcbiAgYWRkVHJhY2luZ0V4dGVuc2lvbnMoKTtcbiAgY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBjb21wb25lbnRSb3V0ZSwgY29tcG9uZW50VHlwZSwgZ2VuZXJhdGlvbkZ1bmN0aW9uSWRlbnRpZmllciB9ID0gY29udGV4dDtcbiAgcmV0dXJuIG5ldyBQcm94eShnZW5lcmF0aW9uRnVuY3Rpb24sIHtcbiAgICBhcHBseTogKG9yaWdpbmFsRnVuY3Rpb24sIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIGxldCBoZWFkZXJzID0gdW5kZWZpbmVkO1xuICAgICAgLy8gV2UgdHJ5LWNhdGNoIGhlcmUganVzdCBpbiBjYXNlIGFueXRoaW5nIGdvZXMgd3Jvbmcgd2l0aCB0aGUgYXN5bmMgc3RvcmFnZSBoZXJlIGdvZXMgd3Jvbmcgc2luY2UgaXQgaXMgTmV4dC5qcyBpbnRlcm5hbCBBUElcbiAgICAgIHRyeSB7XG4gICAgICAgIGhlYWRlcnMgPSBfb3B0aW9uYWxDaGFpbihbcmVxdWVzdEFzeW5jU3RvcmFnZSwgJ29wdGlvbmFsQWNjZXNzJywgXyA9PiBfLmdldFN0b3JlLCAnY2FsbCcsIF8yID0+IF8yKCksICdvcHRpb25hbEFjY2VzcycsIF8zID0+IF8zLmhlYWRlcnNdKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLyoqIGVtcHR5ICovXG4gICAgICB9XG5cbiAgICAgIGxldCBkYXRhID0gdW5kZWZpbmVkO1xuICAgICAgaWYgKF9vcHRpb25hbENoYWluKFtnZXRDbGllbnQsICdjYWxsJywgXzQgPT4gXzQoKSwgJ29wdGlvbmFsQWNjZXNzJywgXzUgPT4gXzUuZ2V0T3B0aW9ucywgJ2NhbGwnLCBfNiA9PiBfNigpLCAnYWNjZXNzJywgXzcgPT4gXzcuc2VuZERlZmF1bHRQaWldKSkge1xuICAgICAgICBjb25zdCBwcm9wcyA9IGFyZ3NbMF07XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHByb3BzICYmIHR5cGVvZiBwcm9wcyA9PT0gJ29iamVjdCcgJiYgJ3BhcmFtcycgaW4gcHJvcHMgPyBwcm9wcy5wYXJhbXMgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9XG4gICAgICAgICAgcHJvcHMgJiYgdHlwZW9mIHByb3BzID09PSAnb2JqZWN0JyAmJiAnc2VhcmNoUGFyYW1zJyBpbiBwcm9wcyA/IHByb3BzLnNlYXJjaFBhcmFtcyA6IHVuZGVmaW5lZDtcbiAgICAgICAgZGF0YSA9IHsgcGFyYW1zLCBzZWFyY2hQYXJhbXMgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZShpc29sYXRpb25TY29wZSA9PiB7XG4gICAgICAgIGlzb2xhdGlvblNjb3BlLnNldFNES1Byb2Nlc3NpbmdNZXRhZGF0YSh7XG4gICAgICAgICAgcmVxdWVzdDoge1xuICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycyA/IHdpbnRlckNHSGVhZGVyc1RvRGljdChoZWFkZXJzKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgaXNvbGF0aW9uU2NvcGUuc2V0RXh0cmEoJ3JvdXRlX2RhdGEnLCBkYXRhKTtcblxuICAgICAgICBjb25zdCBpbmNvbWluZ1Byb3BhZ2F0aW9uQ29udGV4dCA9IHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzKFxuICAgICAgICAgIF9udWxsaXNoQ29hbGVzY2UoX29wdGlvbmFsQ2hhaW4oW2hlYWRlcnMsICdvcHRpb25hbEFjY2VzcycsIF84ID0+IF84LmdldCwgJ2NhbGwnLCBfOSA9PiBfOSgnc2VudHJ5LXRyYWNlJyldKSwgKCkgPT4gKCB1bmRlZmluZWQpKSxcbiAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbaGVhZGVycywgJ29wdGlvbmFsQWNjZXNzJywgXzEwID0+IF8xMC5nZXQsICdjYWxsJywgXzExID0+IF8xMSgnYmFnZ2FnZScpXSksXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgcHJvcGFnYXRpb25Db250ZXh0ID0gY29tbW9uT2JqZWN0VG9Qcm9wYWdhdGlvbkNvbnRleHQoaGVhZGVycywgaW5jb21pbmdQcm9wYWdhdGlvbkNvbnRleHQpO1xuICAgICAgICBpc29sYXRpb25TY29wZS5zZXRQcm9wYWdhdGlvbkNvbnRleHQocHJvcGFnYXRpb25Db250ZXh0KTtcbiAgICAgICAgZ2V0Q3VycmVudFNjb3BlKCkuc2V0UHJvcGFnYXRpb25Db250ZXh0KHByb3BhZ2F0aW9uQ29udGV4dCk7XG5cbiAgICAgICAgcmV0dXJuIHN0YXJ0U3Bhbk1hbnVhbChcbiAgICAgICAgICB7XG4gICAgICAgICAgICBvcDogJ2Z1bmN0aW9uLm5leHRqcycsXG4gICAgICAgICAgICBuYW1lOiBgJHtjb21wb25lbnRUeXBlfS4ke2dlbmVyYXRpb25GdW5jdGlvbklkZW50aWZpZXJ9ICgke2NvbXBvbmVudFJvdXRlfSlgLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ3JvdXRlJyxcbiAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXTogJ2F1dG8uZnVuY3Rpb24ubmV4dGpzJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzcGFuID0+IHtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVDYWxsYmFja0Vycm9ycyhcbiAgICAgICAgICAgICAgKCkgPT4gb3JpZ2luYWxGdW5jdGlvbi5hcHBseSh0aGlzQXJnLCBhcmdzKSxcbiAgICAgICAgICAgICAgZXJyID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvcihlcnIpKSB7XG4gICAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHJlcG9ydCBcIm5vdC1mb3VuZFwic1xuICAgICAgICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xMiA9PiBfMTIuc2V0U3RhdHVzLCAnY2FsbCcsIF8xMyA9PiBfMTMoJ25vdF9mb3VuZCcpXSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpc1JlZGlyZWN0TmF2aWdhdGlvbkVycm9yKGVycikpIHtcbiAgICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gcmVwb3J0IHJlZGlyZWN0c1xuICAgICAgICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xNCA9PiBfMTQuc2V0U3RhdHVzLCAnY2FsbCcsIF8xNSA9PiBfMTUoJ29rJyldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xNiA9PiBfMTYuc2V0U3RhdHVzLCAnY2FsbCcsIF8xNyA9PiBfMTcoJ2ludGVybmFsX2Vycm9yJyldKTtcbiAgICAgICAgICAgICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZXJyLCB7XG4gICAgICAgICAgICAgICAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xOCA9PiBfMTguZW5kLCAnY2FsbCcsIF8xOSA9PiBfMTkoKV0pO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LFxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IHdyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2VuZXJhdGlvbkZ1bmN0aW9uV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryServerSideGetInitialProps: () => (/* binding */ withSentryServerSideGetInitialProps),\n/* harmony export */   wrapGetInitialPropsWithSentry: () => (/* binding */ wrapGetInitialPropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function\n *\n * @param origGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetInitialPropsWithSentry(origGetInitialProps) {\n  return new Proxy(origGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: context.pathname,\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const initialProps\n\n = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._asyncNullishCoalesce)((await tracedGetInitialProps.apply(thisArg, args)), async () => ( {})); // Next.js allows undefined to be returned from a getInitialPropsFunction.\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.getRootSpan)(activeSpan) : undefined)));\n\n        if (requestSpan) {\n          initialProps._sentryTraceData = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.spanToTraceHeader)(requestSpan);\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getDynamicSamplingContextFromSpan)(requestSpan);\n          initialProps._sentryBaggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n        }\n\n        return initialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideGetInitialProps = wrapGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RjtBQUN5RDtBQUNyRTtBQUMvQjtBQUMyRTs7QUFFeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFPO0FBQ2pCO0FBQ0E7O0FBRUEsTUFBTSxrRUFBb0I7O0FBRTFCO0FBQ0EsY0FBYyxXQUFXOztBQUV6QiwwQ0FBMEMsZ0ZBQXdCO0FBQ2xFLHNCQUFzQiw2REFBYyxFQUFFLG1EQUFTOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2REFBYztBQUN0QyxzQ0FBc0MsdUZBQStCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7O0FBRUEsU0FBUyxvRUFBcUIscUVBQXFFLElBQUk7O0FBRXZHLDJCQUEyQiwyREFBYTtBQUN4Qyw0QkFBNEIsK0RBQWdCLENBQUMsMEVBQWtCLDZCQUE2Qix5REFBVzs7QUFFdkc7QUFDQSwwQ0FBMEMsK0RBQWlCOztBQUUzRCx5Q0FBeUMsZ0ZBQWlDO0FBQzFFLHdDQUF3QywyRkFBMkM7QUFDbkY7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRThFO0FBQzlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcz9jYWMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9udWxsaXNoQ29hbGVzY2UsIF9hc3luY051bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCBnZXRBY3RpdmVTcGFuLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBnZXRDbGllbnQsIGdldFJvb3RTcGFuIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgZ2V0U3BhbkZyb21SZXF1ZXN0LCB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3V0aWxzL3dyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSB1c2VyJ3MgZXhwb3J0ZWQgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0gb3JpZ0dldEluaXRpYWxQcm9wcyBUaGUgdXNlcidzIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uXG4gKiBAcGFyYW0gcGFyYW1ldGVyaXplZFJvdXRlIFRoZSBwYWdlJ3MgcGFyYW1ldGVyaXplZCByb3V0ZVxuICogQHJldHVybnMgQSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5KG9yaWdHZXRJbml0aWFsUHJvcHMpIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnR2V0SW5pdGlhbFByb3BzLCB7XG4gICAgYXBwbHk6IGFzeW5jICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgaWYgKGlzQnVpbGQoKSkge1xuICAgICAgICByZXR1cm4gd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG5cbiAgICAgIGFkZFRyYWNpbmdFeHRlbnNpb25zKCk7XG5cbiAgICAgIGNvbnN0IFtjb250ZXh0XSA9IGFyZ3M7XG4gICAgICBjb25zdCB7IHJlcSwgcmVzIH0gPSBjb250ZXh0O1xuXG4gICAgICBjb25zdCBlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24od3JhcHBpbmdUYXJnZXQpO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IF9vcHRpb25hbENoYWluKFtnZXRDbGllbnQsICdjYWxsJywgXyA9PiBfKCksICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldE9wdGlvbnMsICdjYWxsJywgXzMgPT4gXzMoKV0pO1xuXG4gICAgICAvLyBHZW5lcmFsbHkgd2UgY2FuIGFzc3VtZSB0aGF0IGByZXFgIGFuZCBgcmVzYCBhcmUgYWx3YXlzIGRlZmluZWQgb24gdGhlIHNlcnZlcjpcbiAgICAgIC8vIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2UvZGF0YS1mZXRjaGluZy9nZXQtaW5pdGlhbC1wcm9wcyNjb250ZXh0LW9iamVjdFxuICAgICAgLy8gVGhpcyBkb2VzIG5vdCBzZWVtIHRvIGJlIHRoZSBjYXNlIGluIGRldiBtb2RlLiBCZWNhdXNlIHdlIGhhdmUgbm8gY2xlYW4gd2F5IG9mIGFzc29jaWF0aW5nIHRoZSB0aGUgZGF0YSBmZXRjaGVyXG4gICAgICAvLyBzcGFuIHdpdGggZWFjaCBvdGhlciB3aGVuIHRoZXJlIGFyZSBubyByZXEgb3IgcmVzIG9iamVjdHMsIHdlIHNpbXBseSBkbyBub3QgdHJhY2UgdGhlbSBhdCBhbGwgaGVyZS5cbiAgICAgIGlmIChyZXEgJiYgcmVzICYmIF9vcHRpb25hbENoYWluKFtvcHRpb25zLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC5pbnN0cnVtZW50ZXJdKSA9PT0gJ3NlbnRyeScpIHtcbiAgICAgICAgY29uc3QgdHJhY2VkR2V0SW5pdGlhbFByb3BzID0gd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlcihlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMsIHJlcSwgcmVzLCB7XG4gICAgICAgICAgZGF0YUZldGNoZXJSb3V0ZU5hbWU6IGNvbnRleHQucGF0aG5hbWUsXG4gICAgICAgICAgcmVxdWVzdGVkUm91dGVOYW1lOiBjb250ZXh0LnBhdGhuYW1lLFxuICAgICAgICAgIGRhdGFGZXRjaGluZ01ldGhvZE5hbWU6ICdnZXRJbml0aWFsUHJvcHMnLFxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBpbml0aWFsUHJvcHNcblxuID0gYXdhaXQgX2FzeW5jTnVsbGlzaENvYWxlc2NlKChhd2FpdCB0cmFjZWRHZXRJbml0aWFsUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncykpLCBhc3luYyAoKSA9PiAoIHt9KSk7IC8vIE5leHQuanMgYWxsb3dzIHVuZGVmaW5lZCB0byBiZSByZXR1cm5lZCBmcm9tIGEgZ2V0SW5pdGlhbFByb3BzRnVuY3Rpb24uXG5cbiAgICAgICAgY29uc3QgYWN0aXZlU3BhbiA9IGdldEFjdGl2ZVNwYW4oKTtcbiAgICAgICAgY29uc3QgcmVxdWVzdFNwYW4gPSBfbnVsbGlzaENvYWxlc2NlKGdldFNwYW5Gcm9tUmVxdWVzdChyZXEpLCAoKSA9PiAoIChhY3RpdmVTcGFuID8gZ2V0Um9vdFNwYW4oYWN0aXZlU3BhbikgOiB1bmRlZmluZWQpKSk7XG5cbiAgICAgICAgaWYgKHJlcXVlc3RTcGFuKSB7XG4gICAgICAgICAgaW5pdGlhbFByb3BzLl9zZW50cnlUcmFjZURhdGEgPSBzcGFuVG9UcmFjZUhlYWRlcihyZXF1ZXN0U3Bhbik7XG5cbiAgICAgICAgICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHJlcXVlc3RTcGFuKTtcbiAgICAgICAgICBpbml0aWFsUHJvcHMuX3NlbnRyeUJhZ2dhZ2UgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluaXRpYWxQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeWAgaW5zdGVhZC5cbiAqL1xuY29uc3Qgd2l0aFNlbnRyeVNlcnZlclNpZGVHZXRJbml0aWFsUHJvcHMgPSB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeVNlcnZlclNpZGVHZXRJbml0aWFsUHJvcHMsIHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryGetServerSideProps: () => (/* binding */ withSentryGetServerSideProps),\n/* harmony export */   wrapGetServerSidePropsWithSentry: () => (/* binding */ wrapGetServerSidePropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/getRootSpan.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getServerSideProps` function\n *\n * @param origGetServerSideProps The user's `getServerSideProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetServerSidePropsWithSentry(\n  origGetServerSideProps,\n  parameterizedRoute,\n) {\n  return new Proxy(origGetServerSideProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetServerSideProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        const tracedGetServerSideProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withTracedServerSideDataFetcher)(errorWrappedGetServerSideProps, req, res, {\n          dataFetcherRouteName: parameterizedRoute,\n          requestedRouteName: parameterizedRoute,\n          dataFetchingMethodName: 'getServerSideProps',\n        });\n\n        const serverSideProps = await (tracedGetServerSideProps.apply(thisArg, args)\n\n);\n\n        if (serverSideProps && 'props' in serverSideProps) {\n          const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getActiveSpan)();\n          const requestTransaction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getRootSpan)(activeSpan) : undefined)));\n          if (requestTransaction) {\n            serverSideProps.props._sentryTraceData = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.spanToTraceHeader)(requestTransaction);\n\n            const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(requestTransaction);\n            serverSideProps.props._sentryBaggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n          }\n        }\n\n        return serverSideProps;\n      } else {\n        return errorWrappedGetServerSideProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n/**\n * @deprecated Use `withSentryGetServerSideProps` instead.\n */\nconst withSentryGetServerSideProps = wrapGetServerSidePropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetServerSidePropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQ2dGO0FBQ3JFO0FBQy9CO0FBQzJFOztBQUV4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMERBQU87QUFDakI7QUFDQTs7QUFFQSxNQUFNLGtFQUFvQjs7QUFFMUI7QUFDQSxjQUFjLFdBQVc7O0FBRXpCLDZDQUE2QyxnRkFBd0I7QUFDckUsc0JBQXNCLDZEQUFjLEVBQUUsbURBQVM7O0FBRS9DLFVBQVUsNkRBQWM7QUFDeEIseUNBQXlDLHVGQUErQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBO0FBQ0EsNkJBQTZCLDJEQUFhO0FBQzFDLHFDQUFxQywrREFBZ0IsQ0FBQywwRUFBa0IsNkJBQTZCLHlEQUFXO0FBQ2hIO0FBQ0EscURBQXFELCtEQUFpQjs7QUFFdEUsMkNBQTJDLCtFQUFpQztBQUM1RSxtREFBbUQsMkZBQTJDO0FBQzlGO0FBQ0E7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcz8xM2YwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9udWxsaXNoQ29hbGVzY2UsIF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgZ2V0QWN0aXZlU3Bhbiwgc3BhblRvVHJhY2VIZWFkZXIsIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tU3BhbiwgZ2V0Q2xpZW50LCBnZXRSb290U3BhbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBpc0J1aWxkIH0gZnJvbSAnLi91dGlscy9pc0J1aWxkLmpzJztcbmltcG9ydCB7IGdldFNwYW5Gcm9tUmVxdWVzdCwgd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uLCB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyIH0gZnJvbSAnLi91dGlscy93cmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgdXNlcidzIGV4cG9ydGVkIGBnZXRTZXJ2ZXJTaWRlUHJvcHNgIGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIG9yaWdHZXRTZXJ2ZXJTaWRlUHJvcHMgVGhlIHVzZXIncyBgZ2V0U2VydmVyU2lkZVByb3BzYCBmdW5jdGlvblxuICogQHBhcmFtIHBhcmFtZXRlcml6ZWRSb3V0ZSBUaGUgcGFnZSdzIHBhcmFtZXRlcml6ZWQgcm91dGVcbiAqIEByZXR1cm5zIEEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSBmdW5jdGlvblxuICovXG5mdW5jdGlvbiB3cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeShcbiAgb3JpZ0dldFNlcnZlclNpZGVQcm9wcyxcbiAgcGFyYW1ldGVyaXplZFJvdXRlLFxuKSB7XG4gIHJldHVybiBuZXcgUHJveHkob3JpZ0dldFNlcnZlclNpZGVQcm9wcywge1xuICAgIGFwcGx5OiBhc3luYyAod3JhcHBpbmdUYXJnZXQsIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIGlmIChpc0J1aWxkKCkpIHtcbiAgICAgICAgcmV0dXJuIHdyYXBwaW5nVGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBhZGRUcmFjaW5nRXh0ZW5zaW9ucygpO1xuXG4gICAgICBjb25zdCBbY29udGV4dF0gPSBhcmdzO1xuICAgICAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcblxuICAgICAgY29uc3QgZXJyb3JXcmFwcGVkR2V0U2VydmVyU2lkZVByb3BzID0gd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uKHdyYXBwaW5nVGFyZ2V0KTtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSBfb3B0aW9uYWxDaGFpbihbZ2V0Q2xpZW50LCAnY2FsbCcsIF8gPT4gXygpLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5nZXRPcHRpb25zLCAnY2FsbCcsIF8zID0+IF8zKCldKTtcblxuICAgICAgaWYgKF9vcHRpb25hbENoYWluKFtvcHRpb25zLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC5pbnN0cnVtZW50ZXJdKSA9PT0gJ3NlbnRyeScpIHtcbiAgICAgICAgY29uc3QgdHJhY2VkR2V0U2VydmVyU2lkZVByb3BzID0gd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlcihlcnJvcldyYXBwZWRHZXRTZXJ2ZXJTaWRlUHJvcHMsIHJlcSwgcmVzLCB7XG4gICAgICAgICAgZGF0YUZldGNoZXJSb3V0ZU5hbWU6IHBhcmFtZXRlcml6ZWRSb3V0ZSxcbiAgICAgICAgICByZXF1ZXN0ZWRSb3V0ZU5hbWU6IHBhcmFtZXRlcml6ZWRSb3V0ZSxcbiAgICAgICAgICBkYXRhRmV0Y2hpbmdNZXRob2ROYW1lOiAnZ2V0U2VydmVyU2lkZVByb3BzJyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3Qgc2VydmVyU2lkZVByb3BzID0gYXdhaXQgKHRyYWNlZEdldFNlcnZlclNpZGVQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKVxuXG4pO1xuXG4gICAgICAgIGlmIChzZXJ2ZXJTaWRlUHJvcHMgJiYgJ3Byb3BzJyBpbiBzZXJ2ZXJTaWRlUHJvcHMpIHtcbiAgICAgICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgICAgIGNvbnN0IHJlcXVlc3RUcmFuc2FjdGlvbiA9IF9udWxsaXNoQ29hbGVzY2UoZ2V0U3BhbkZyb21SZXF1ZXN0KHJlcSksICgpID0+ICggKGFjdGl2ZVNwYW4gPyBnZXRSb290U3BhbihhY3RpdmVTcGFuKSA6IHVuZGVmaW5lZCkpKTtcbiAgICAgICAgICBpZiAocmVxdWVzdFRyYW5zYWN0aW9uKSB7XG4gICAgICAgICAgICBzZXJ2ZXJTaWRlUHJvcHMucHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9IHNwYW5Ub1RyYWNlSGVhZGVyKHJlcXVlc3RUcmFuc2FjdGlvbik7XG5cbiAgICAgICAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4ocmVxdWVzdFRyYW5zYWN0aW9uKTtcbiAgICAgICAgICAgIHNlcnZlclNpZGVQcm9wcy5wcm9wcy5fc2VudHJ5QmFnZ2FnZSA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNlcnZlclNpZGVQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBlcnJvcldyYXBwZWRHZXRTZXJ2ZXJTaWRlUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3aXRoU2VudHJ5R2V0U2VydmVyU2lkZVByb3BzYCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5R2V0U2VydmVyU2lkZVByb3BzID0gd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnk7XG5cbmV4cG9ydCB7IHdpdGhTZW50cnlHZXRTZXJ2ZXJTaWRlUHJvcHMsIHdyYXBHZXRTZXJ2ZXJTaWRlUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSentryGetStaticProps: () => (/* binding */ withSentryGetStaticProps),\n/* harmony export */   wrapGetStaticPropsWithSentry: () => (/* binding */ wrapGetStaticPropsWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getStaticProps` function\n *\n * @param origGetStaticProps The user's `getStaticProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetStaticPropsWithSentry(\n  origGetStaticPropsa,\n  parameterizedRoute,\n) {\n  return new Proxy(origGetStaticPropsa, {\n    apply: (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n      const errorWrappedGetStaticProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.withErrorInstrumentation)(wrappingTarget);\n      const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([options, 'optionalAccess', _4 => _4.instrumenter]) === 'sentry') {\n        return (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_2__.callDataFetcherTraced)(errorWrappedGetStaticProps, args, {\n          parameterizedRoute,\n          dataFetchingMethodName: 'getStaticProps',\n        });\n      }\n\n      return errorWrappedGetStaticProps.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapGetStaticPropsWithSentry` instead.\n */\nconst withSentryGetStaticProps = wrapGetStaticPropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetStaticPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0M7QUFDZ0I7QUFDbEI7QUFDNkM7O0FBRTFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwREFBTztBQUNqQjtBQUNBOztBQUVBLE1BQU0sa0VBQW9COztBQUUxQix5Q0FBeUMsZ0ZBQXdCO0FBQ2pFLHNCQUFzQiw2REFBYyxFQUFFLG1EQUFTOztBQUUvQyxVQUFVLDZEQUFjO0FBQ3hCLGVBQWUsNkVBQXFCO0FBQ3BDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVrRTtBQUNsRSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeS5qcz82MjdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgZ2V0Q2xpZW50IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgY2FsbERhdGFGZXRjaGVyVHJhY2VkLCB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3V0aWxzL3dyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSB1c2VyJ3MgZXhwb3J0ZWQgYGdldFN0YXRpY1Byb3BzYCBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSBvcmlnR2V0U3RhdGljUHJvcHMgVGhlIHVzZXIncyBgZ2V0U3RhdGljUHJvcHNgIGZ1bmN0aW9uXG4gKiBAcGFyYW0gcGFyYW1ldGVyaXplZFJvdXRlIFRoZSBwYWdlJ3MgcGFyYW1ldGVyaXplZCByb3V0ZVxuICogQHJldHVybnMgQSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkoXG4gIG9yaWdHZXRTdGF0aWNQcm9wc2EsXG4gIHBhcmFtZXRlcml6ZWRSb3V0ZSxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdHZXRTdGF0aWNQcm9wc2EsIHtcbiAgICBhcHBseTogKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICBpZiAoaXNCdWlsZCgpKSB7XG4gICAgICAgIHJldHVybiB3cmFwcGluZ1RhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgYWRkVHJhY2luZ0V4dGVuc2lvbnMoKTtcblxuICAgICAgY29uc3QgZXJyb3JXcmFwcGVkR2V0U3RhdGljUHJvcHMgPSB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24od3JhcHBpbmdUYXJnZXQpO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IF9vcHRpb25hbENoYWluKFtnZXRDbGllbnQsICdjYWxsJywgXyA9PiBfKCksICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldE9wdGlvbnMsICdjYWxsJywgXzMgPT4gXzMoKV0pO1xuXG4gICAgICBpZiAoX29wdGlvbmFsQ2hhaW4oW29wdGlvbnMsICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80Lmluc3RydW1lbnRlcl0pID09PSAnc2VudHJ5Jykge1xuICAgICAgICByZXR1cm4gY2FsbERhdGFGZXRjaGVyVHJhY2VkKGVycm9yV3JhcHBlZEdldFN0YXRpY1Byb3BzLCBhcmdzLCB7XG4gICAgICAgICAgcGFyYW1ldGVyaXplZFJvdXRlLFxuICAgICAgICAgIGRhdGFGZXRjaGluZ01ldGhvZE5hbWU6ICdnZXRTdGF0aWNQcm9wcycsXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZXJyb3JXcmFwcGVkR2V0U3RhdGljUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5YCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5R2V0U3RhdGljUHJvcHMgPSB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5O1xuXG5leHBvcnQgeyB3aXRoU2VudHJ5R2V0U3RhdGljUHJvcHMsIHdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapMiddlewareWithSentry: () => (/* binding */ wrapMiddlewareWithSentry)\n/* harmony export */ });\n/* harmony import */ var _utils_edgeWrapperUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/edgeWrapperUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js\");\n\n\n/**\n * Wraps Next.js middleware with Sentry error and performance instrumentation.\n *\n * @param middleware The middleware handler.\n * @returns a wrapped middleware handler.\n */\nfunction wrapMiddlewareWithSentry(\n  middleware,\n) {\n  return new Proxy(middleware, {\n    apply: (wrappingTarget, thisArg, args) => {\n      return (0,_utils_edgeWrapperUtils_js__WEBPACK_IMPORTED_MODULE_0__.withEdgeWrapping)(wrappingTarget, {\n        spanDescription: 'middleware',\n        spanOp: 'middleware.nextjs',\n        mechanismFunctionName: 'withSentryMiddleware',\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapMiddlewareWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwTWlkZGxld2FyZVdpdGhTZW50cnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRFQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBNaWRkbGV3YXJlV2l0aFNlbnRyeS5qcz8wNzZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhFZGdlV3JhcHBpbmcgfSBmcm9tICcuL3V0aWxzL2VkZ2VXcmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIFdyYXBzIE5leHQuanMgbWlkZGxld2FyZSB3aXRoIFNlbnRyeSBlcnJvciBhbmQgcGVyZm9ybWFuY2UgaW5zdHJ1bWVudGF0aW9uLlxuICpcbiAqIEBwYXJhbSBtaWRkbGV3YXJlIFRoZSBtaWRkbGV3YXJlIGhhbmRsZXIuXG4gKiBAcmV0dXJucyBhIHdyYXBwZWQgbWlkZGxld2FyZSBoYW5kbGVyLlxuICovXG5mdW5jdGlvbiB3cmFwTWlkZGxld2FyZVdpdGhTZW50cnkoXG4gIG1pZGRsZXdhcmUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eShtaWRkbGV3YXJlLCB7XG4gICAgYXBwbHk6ICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgcmV0dXJuIHdpdGhFZGdlV3JhcHBpbmcod3JhcHBpbmdUYXJnZXQsIHtcbiAgICAgICAgc3BhbkRlc2NyaXB0aW9uOiAnbWlkZGxld2FyZScsXG4gICAgICAgIHNwYW5PcDogJ21pZGRsZXdhcmUubmV4dGpzJyxcbiAgICAgICAgbWVjaGFuaXNtRnVuY3Rpb25OYW1lOiAnd2l0aFNlbnRyeU1pZGRsZXdhcmUnLFxuICAgICAgfSkuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IHdyYXBNaWRkbGV3YXJlV2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcE1pZGRsZXdhcmVXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapPageComponentWithSentry: () => (/* binding */ wrapPageComponentWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n\n\n\n\nfunction isReactClassComponent(target) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof target === 'function' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([target, 'optionalAccess', _ => _.prototype, 'optionalAccess', _2 => _2.isReactComponent]);\n}\n\n/**\n * Wraps a page component with Sentry error instrumentation.\n */\nfunction wrapPageComponentWithSentry(pageComponent) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n  if (isReactClassComponent(pageComponent)) {\n    return class SentryWrappedPageComponent extends pageComponent {\n       render(...args) {\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.runWithAsyncContext)(() => {\n          const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentScope)();\n          // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n          const sentryTraceData =\n            typeof this.props === 'object' &&\n            this.props !== null &&\n            '_sentryTraceData' in this.props &&\n            typeof this.props._sentryTraceData === 'string'\n              ? this.props._sentryTraceData\n              : undefined;\n\n          if (sentryTraceData) {\n            const traceparentData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.extractTraceparentData)(sentryTraceData);\n            scope.setContext('trace', {\n              span_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _3 => _3.parentSpanId]),\n              trace_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _4 => _4.traceId]),\n            });\n          }\n\n          try {\n            return super.render(...args);\n          } catch (e) {\n            (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureException)(e, {\n              mechanism: {\n                handled: false,\n              },\n            });\n            throw e;\n          }\n        });\n      }\n    };\n  } else if (typeof pageComponent === 'function') {\n    return new Proxy(pageComponent, {\n      apply(target, thisArg, argArray) {\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.runWithAsyncContext)(() => {\n          const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentScope)();\n          // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n          const sentryTraceData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([argArray, 'optionalAccess', _5 => _5[0], 'optionalAccess', _6 => _6._sentryTraceData]);\n\n          if (sentryTraceData) {\n            const traceparentData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.extractTraceparentData)(sentryTraceData);\n            scope.setContext('trace', {\n              span_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _7 => _7.parentSpanId]),\n              trace_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _8 => _8.traceId]),\n            });\n          }\n\n          try {\n            return target.apply(thisArg, argArray);\n          } catch (e) {\n            (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureException)(e, {\n              mechanism: {\n                handled: false,\n              },\n            });\n            throw e;\n          }\n        });\n      },\n    });\n  } else {\n    return pageComponent;\n  }\n}\n\n\n//# sourceMappingURL=wrapPageComponentWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwUGFnZUNvbXBvbmVudFdpdGhTZW50cnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStDO0FBQzZEO0FBQ3JEOztBQUV2RDtBQUNBO0FBQ0EseUNBQXlDLDZEQUFjO0FBQ3ZEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxrRUFBb0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpRUFBbUI7QUFDbEMsd0JBQXdCLDZEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MscUVBQXNCO0FBQzFEO0FBQ0EsdUJBQXVCLDZEQUFjO0FBQ3JDLHdCQUF3Qiw2REFBYztBQUN0QyxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWixZQUFZLDhEQUFnQjtBQUM1QjtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGVBQWUsaUVBQW1CO0FBQ2xDLHdCQUF3Qiw2REFBZTtBQUN2QztBQUNBLGtDQUFrQyw2REFBYzs7QUFFaEQ7QUFDQSxvQ0FBb0MscUVBQXNCO0FBQzFEO0FBQ0EsdUJBQXVCLDZEQUFjO0FBQ3JDLHdCQUF3Qiw2REFBYztBQUN0QyxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWixZQUFZLDhEQUFnQjtBQUM1QjtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFdUM7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBQYWdlQ29tcG9uZW50V2l0aFNlbnRyeS5qcz8xMmY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgcnVuV2l0aEFzeW5jQ29udGV4dCwgZ2V0Q3VycmVudFNjb3BlLCBjYXB0dXJlRXhjZXB0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGV4dHJhY3RUcmFjZXBhcmVudERhdGEgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuZnVuY3Rpb24gaXNSZWFjdENsYXNzQ29tcG9uZW50KHRhcmdldCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gIHJldHVybiB0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nICYmIF9vcHRpb25hbENoYWluKFt0YXJnZXQsICdvcHRpb25hbEFjY2VzcycsIF8gPT4gXy5wcm90b3R5cGUsICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmlzUmVhY3RDb21wb25lbnRdKTtcbn1cblxuLyoqXG4gKiBXcmFwcyBhIHBhZ2UgY29tcG9uZW50IHdpdGggU2VudHJ5IGVycm9yIGluc3RydW1lbnRhdGlvbi5cbiAqL1xuZnVuY3Rpb24gd3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5KHBhZ2VDb21wb25lbnQpIHtcbiAgYWRkVHJhY2luZ0V4dGVuc2lvbnMoKTtcbiAgaWYgKGlzUmVhY3RDbGFzc0NvbXBvbmVudChwYWdlQ29tcG9uZW50KSkge1xuICAgIHJldHVybiBjbGFzcyBTZW50cnlXcmFwcGVkUGFnZUNvbXBvbmVudCBleHRlbmRzIHBhZ2VDb21wb25lbnQge1xuICAgICAgIHJlbmRlciguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBydW5XaXRoQXN5bmNDb250ZXh0KCgpID0+IHtcbiAgICAgICAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICAgICAgICAgIC8vIFdlIGV4dHJhY3QgdGhlIHNlbnRyeSB0cmFjZSBkYXRhIHRoYXQgaXMgcHV0IGluIHRoZSBjb21wb25lbnQgcHJvcHMgYnkgZGF0YWZldGNoZXIgd3JhcHBlcnNcbiAgICAgICAgICBjb25zdCBzZW50cnlUcmFjZURhdGEgPVxuICAgICAgICAgICAgdHlwZW9mIHRoaXMucHJvcHMgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICB0aGlzLnByb3BzICE9PSBudWxsICYmXG4gICAgICAgICAgICAnX3NlbnRyeVRyYWNlRGF0YScgaW4gdGhpcy5wcm9wcyAmJlxuICAgICAgICAgICAgdHlwZW9mIHRoaXMucHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgICAgPyB0aGlzLnByb3BzLl9zZW50cnlUcmFjZURhdGFcbiAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICAgICAgICBpZiAoc2VudHJ5VHJhY2VEYXRhKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlRGF0YSk7XG4gICAgICAgICAgICBzY29wZS5zZXRDb250ZXh0KCd0cmFjZScsIHtcbiAgICAgICAgICAgICAgc3Bhbl9pZDogX29wdGlvbmFsQ2hhaW4oW3RyYWNlcGFyZW50RGF0YSwgJ29wdGlvbmFsQWNjZXNzJywgXzMgPT4gXzMucGFyZW50U3BhbklkXSksXG4gICAgICAgICAgICAgIHRyYWNlX2lkOiBfb3B0aW9uYWxDaGFpbihbdHJhY2VwYXJlbnREYXRhLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC50cmFjZUlkXSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHN1cGVyLnJlbmRlciguLi5hcmdzKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGUsIHtcbiAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwYWdlQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIG5ldyBQcm94eShwYWdlQ29tcG9uZW50LCB7XG4gICAgICBhcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ0FycmF5KSB7XG4gICAgICAgIHJldHVybiBydW5XaXRoQXN5bmNDb250ZXh0KCgpID0+IHtcbiAgICAgICAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICAgICAgICAgIC8vIFdlIGV4dHJhY3QgdGhlIHNlbnRyeSB0cmFjZSBkYXRhIHRoYXQgaXMgcHV0IGluIHRoZSBjb21wb25lbnQgcHJvcHMgYnkgZGF0YWZldGNoZXIgd3JhcHBlcnNcbiAgICAgICAgICBjb25zdCBzZW50cnlUcmFjZURhdGEgPSBfb3B0aW9uYWxDaGFpbihbYXJnQXJyYXksICdvcHRpb25hbEFjY2VzcycsIF81ID0+IF81WzBdLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNiA9PiBfNi5fc2VudHJ5VHJhY2VEYXRhXSk7XG5cbiAgICAgICAgICBpZiAoc2VudHJ5VHJhY2VEYXRhKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlRGF0YSk7XG4gICAgICAgICAgICBzY29wZS5zZXRDb250ZXh0KCd0cmFjZScsIHtcbiAgICAgICAgICAgICAgc3Bhbl9pZDogX29wdGlvbmFsQ2hhaW4oW3RyYWNlcGFyZW50RGF0YSwgJ29wdGlvbmFsQWNjZXNzJywgXzcgPT4gXzcucGFyZW50U3BhbklkXSksXG4gICAgICAgICAgICAgIHRyYWNlX2lkOiBfb3B0aW9uYWxDaGFpbihbdHJhY2VwYXJlbnREYXRhLCAnb3B0aW9uYWxBY2Nlc3MnLCBfOCA9PiBfOC50cmFjZUlkXSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdBcnJheSk7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlLCB7XG4gICAgICAgICAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICAgICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwYWdlQ29tcG9uZW50O1xuICB9XG59XG5cbmV4cG9ydCB7IHdyYXBQYWdlQ29tcG9uZW50V2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapRouteHandlerWithSentry: () => (/* binding */ wrapRouteHandlerWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/platformSupportsStreaming.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/platformSupportsStreaming.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n\n\n\n/**\n * Wraps a Next.js route handler with performance and error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapRouteHandlerWithSentry(\n  routeHandler,\n  context,\n) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n  // eslint-disable-next-line deprecation/deprecation\n  const { method, parameterizedRoute, baggageHeader, sentryTraceHeader, headers } = context;\n  return new Proxy(routeHandler, {\n    apply: (originalFunction, thisArg, args) => {\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(async isolationScope => {\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: headers ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.winterCGHeadersToDict)(headers) : undefined,\n          },\n        });\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.continueTrace)(\n          {\n            sentryTrace: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._nullishCoalesce)(sentryTraceHeader, () => ( (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([headers, 'optionalAccess', _ => _.get, 'call', _2 => _2('sentry-trace')]))), () => ( undefined)),\n            baggage: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._nullishCoalesce)(baggageHeader, () => ( (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([headers, 'optionalAccess', _3 => _3.get, 'call', _4 => _4('baggage')]))),\n          },\n          async () => {\n            try {\n              return await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startSpan)(\n                {\n                  op: 'http.server',\n                  name: `${method} ${parameterizedRoute}`,\n                  attributes: {\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_6__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_6__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                  },\n                },\n                async span => {\n                  const response = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.handleCallbackErrors)(\n                    () => originalFunction.apply(thisArg, args),\n                    error => {\n                      // Next.js throws errors when calling `redirect()`. We don't wanna report these.\n                      if (!(0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_8__.isRedirectNavigationError)(error)) {\n                        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                          mechanism: {\n                            handled: false,\n                          },\n                        });\n                      }\n                    },\n                  );\n\n                  try {\n                    span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.setHttpStatus)(span, response.status);\n                  } catch (e) {\n                    // best effort - response may be undefined?\n                  }\n\n                  return response;\n                },\n              );\n            } finally {\n              if (!(0,_utils_platformSupportsStreaming_js__WEBPACK_IMPORTED_MODULE_10__.platformSupportsStreaming)() || \"nodejs\" === 'edge') {\n                // 1. Edge transport requires manual flushing\n                // 2. Lambdas require manual flushing to prevent execution freeze before the event is sent\n                await (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__.flushQueue)();\n              }\n            }\n          },\n        );\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapRouteHandlerWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQzRKO0FBQ3ZLO0FBQ29CO0FBQ087QUFDN0I7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFvQjtBQUN0QjtBQUNBLFVBQVUsd0VBQXdFO0FBQ2xGO0FBQ0E7QUFDQSxhQUFhLGdFQUFrQjtBQUMvQjtBQUNBO0FBQ0EsK0JBQStCLG9FQUFxQjtBQUNwRCxXQUFXO0FBQ1gsU0FBUztBQUNULGVBQWUsMkRBQWE7QUFDNUI7QUFDQSx5QkFBeUIsK0RBQWdCLENBQUMsK0RBQWdCLDRCQUE0Qiw2REFBYztBQUNwRyxxQkFBcUIsK0RBQWdCLHdCQUF3Qiw2REFBYztBQUMzRSxXQUFXO0FBQ1g7QUFDQTtBQUNBLDJCQUEyQix1REFBUztBQUNwQztBQUNBO0FBQ0EsMkJBQTJCLFFBQVEsRUFBRSxtQkFBbUI7QUFDeEQ7QUFDQSxxQkFBcUIsMEVBQWdDO0FBQ3JELHFCQUFxQiwwRUFBZ0M7QUFDckQsbUJBQW1CO0FBQ25CLGlCQUFpQjtBQUNqQjtBQUNBLHlDQUF5QyxrRUFBb0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVGQUF5QjtBQUNwRCx3QkFBd0IsOERBQWdCO0FBQ3hDO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IseUJBQXlCO0FBQ3pCO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBO0FBQ0EsNEJBQTRCLDJEQUFhO0FBQ3pDLG9CQUFvQjtBQUNwQjtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsY0FBYztBQUNkLG1CQUFtQiwrRkFBeUIsTUFBTSxRQUF3QjtBQUMxRTtBQUNBO0FBQ0Esc0JBQXNCLGtFQUFVO0FBQ2hDO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBSb3V0ZUhhbmRsZXJXaXRoU2VudHJ5LmpzP2Q4NTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCB3aXRoSXNvbGF0aW9uU2NvcGUsIGNvbnRpbnVlVHJhY2UsIHN0YXJ0U3BhbiwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0UsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOLCBoYW5kbGVDYWxsYmFja0Vycm9ycywgY2FwdHVyZUV4Y2VwdGlvbiwgc2V0SHR0cFN0YXR1cyB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyB3aW50ZXJDR0hlYWRlcnNUb0RpY3QgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzUmVkaXJlY3ROYXZpZ2F0aW9uRXJyb3IgfSBmcm9tICcuL25leHROYXZpZ2F0aW9uRXJyb3JVdGlscy5qcyc7XG5pbXBvcnQgeyBwbGF0Zm9ybVN1cHBvcnRzU3RyZWFtaW5nIH0gZnJvbSAnLi91dGlscy9wbGF0Zm9ybVN1cHBvcnRzU3RyZWFtaW5nLmpzJztcbmltcG9ydCB7IGZsdXNoUXVldWUgfSBmcm9tICcuL3V0aWxzL3Jlc3BvbnNlRW5kLmpzJztcblxuLyoqXG4gKiBXcmFwcyBhIE5leHQuanMgcm91dGUgaGFuZGxlciB3aXRoIHBlcmZvcm1hbmNlIGFuZCBlcnJvciBpbnN0cnVtZW50YXRpb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiB3cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeShcbiAgcm91dGVIYW5kbGVyLFxuICBjb250ZXh0LFxuKSB7XG4gIGFkZFRyYWNpbmdFeHRlbnNpb25zKCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB7IG1ldGhvZCwgcGFyYW1ldGVyaXplZFJvdXRlLCBiYWdnYWdlSGVhZGVyLCBzZW50cnlUcmFjZUhlYWRlciwgaGVhZGVycyB9ID0gY29udGV4dDtcbiAgcmV0dXJuIG5ldyBQcm94eShyb3V0ZUhhbmRsZXIsIHtcbiAgICBhcHBseTogKG9yaWdpbmFsRnVuY3Rpb24sIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIHJldHVybiB3aXRoSXNvbGF0aW9uU2NvcGUoYXN5bmMgaXNvbGF0aW9uU2NvcGUgPT4ge1xuICAgICAgICBpc29sYXRpb25TY29wZS5zZXRTREtQcm9jZXNzaW5nTWV0YWRhdGEoe1xuICAgICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMgPyB3aW50ZXJDR0hlYWRlcnNUb0RpY3QoaGVhZGVycykgOiB1bmRlZmluZWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjb250aW51ZVRyYWNlKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbnRyeVRyYWNlOiBfbnVsbGlzaENvYWxlc2NlKF9udWxsaXNoQ29hbGVzY2Uoc2VudHJ5VHJhY2VIZWFkZXIsICgpID0+ICggX29wdGlvbmFsQ2hhaW4oW2hlYWRlcnMsICdvcHRpb25hbEFjY2VzcycsIF8gPT4gXy5nZXQsICdjYWxsJywgXzIgPT4gXzIoJ3NlbnRyeS10cmFjZScpXSkpKSwgKCkgPT4gKCB1bmRlZmluZWQpKSxcbiAgICAgICAgICAgIGJhZ2dhZ2U6IF9udWxsaXNoQ29hbGVzY2UoYmFnZ2FnZUhlYWRlciwgKCkgPT4gKCBfb3B0aW9uYWxDaGFpbihbaGVhZGVycywgJ29wdGlvbmFsQWNjZXNzJywgXzMgPT4gXzMuZ2V0LCAnY2FsbCcsIF80ID0+IF80KCdiYWdnYWdlJyldKSkpLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHN0YXJ0U3BhbihcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBvcDogJ2h0dHAuc2VydmVyJyxcbiAgICAgICAgICAgICAgICAgIG5hbWU6IGAke21ldGhvZH0gJHtwYXJhbWV0ZXJpemVkUm91dGV9YCxcbiAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ3JvdXRlJyxcbiAgICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXTogJ2F1dG8uZnVuY3Rpb24ubmV4dGpzJyxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhc3luYyBzcGFuID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGFuZGxlQ2FsbGJhY2tFcnJvcnMoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IG9yaWdpbmFsRnVuY3Rpb24uYXBwbHkodGhpc0FyZywgYXJncyksXG4gICAgICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBOZXh0LmpzIHRocm93cyBlcnJvcnMgd2hlbiBjYWxsaW5nIGByZWRpcmVjdCgpYC4gV2UgZG9uJ3Qgd2FubmEgcmVwb3J0IHRoZXNlLlxuICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZXJyb3IsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBzcGFuICYmIHNldEh0dHBTdGF0dXMoc3BhbiwgcmVzcG9uc2Uuc3RhdHVzKTtcbiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYmVzdCBlZmZvcnQgLSByZXNwb25zZSBtYXkgYmUgdW5kZWZpbmVkP1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgIGlmICghcGxhdGZvcm1TdXBwb3J0c1N0cmVhbWluZygpIHx8IHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSA9PT0gJ2VkZ2UnKSB7XG4gICAgICAgICAgICAgICAgLy8gMS4gRWRnZSB0cmFuc3BvcnQgcmVxdWlyZXMgbWFudWFsIGZsdXNoaW5nXG4gICAgICAgICAgICAgICAgLy8gMi4gTGFtYmRhcyByZXF1aXJlIG1hbnVhbCBmbHVzaGluZyB0byBwcmV2ZW50IGV4ZWN1dGlvbiBmcmVlemUgYmVmb3JlIHRoZSBldmVudCBpcyBzZW50XG4gICAgICAgICAgICAgICAgYXdhaXQgZmx1c2hRdWV1ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyB3cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFJvdXRlSGFuZGxlcldpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapServerComponentWithSentry: () => (/* binding */ wrapServerComponentWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_commonObjectTracing_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/commonObjectTracing.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/commonObjectTracing.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n\n\n\n\n\n\n\n/**\n * Wraps an `app` directory server component with Sentry error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapServerComponentWithSentry(\n  appDirComponent,\n  context,\n) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n  const { componentRoute, componentType } = context;\n\n  // Even though users may define server components as async functions, for the client bundles\n  // Next.js will turn them into synchronous functions and it will transform any `await`s into instances of the `use`\n  // hook. 🤯\n  return new Proxy(appDirComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      // TODO: If we ever allow withIsolationScope to take a scope, we should pass a scope here that is shared between all of the server components, similar to what `commonObjectToPropagationContext` does.\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(isolationScope => {\n        const completeHeadersDict = context.headers\n          ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.winterCGHeadersToDict)(context.headers)\n          : {};\n\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: completeHeadersDict,\n          },\n        });\n\n        const incomingPropagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.propagationContextFromHeaders)(\n          // eslint-disable-next-line deprecation/deprecation\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._nullishCoalesce)(context.sentryTraceHeader, () => ( completeHeadersDict['sentry-trace'])),\n          // eslint-disable-next-line deprecation/deprecation\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._nullishCoalesce)(context.baggageHeader, () => ( completeHeadersDict['baggage'])),\n        );\n\n        const propagationContext = (0,_utils_commonObjectTracing_js__WEBPACK_IMPORTED_MODULE_5__.commonObjectToPropagationContext)(context.headers, incomingPropagationContext);\n        isolationScope.setPropagationContext(propagationContext);\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)().setPropagationContext(propagationContext);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.startSpanManual)(\n          {\n            op: 'function.nextjs',\n            name: `${componentType} Server Component (${componentRoute})`,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_7__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'component',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_7__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n            },\n          },\n          span => {\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.handleCallbackErrors)(\n              () => originalFunction.apply(thisArg, args),\n              error => {\n                if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_9__.isNotFoundNavigationError)(error)) {\n                  // We don't want to report \"not-found\"s\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__._optionalChain)([span, 'optionalAccess', _ => _.setStatus, 'call', _2 => _2('not_found')]);\n                } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_9__.isRedirectNavigationError)(error)) {\n                  // We don't want to report redirects\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__._optionalChain)([span, 'optionalAccess', _3 => _3.setStatus, 'call', _4 => _4('ok')]);\n                } else {\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__._optionalChain)([span, 'optionalAccess', _5 => _5.setStatus, 'call', _6 => _6('internal_error')]);\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                    mechanism: {\n                      handled: false,\n                    },\n                  });\n                }\n              },\n              () => {\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__._optionalChain)([span, 'optionalAccess', _7 => _7.end, 'call', _8 => _8()]);\n\n                // flushQueue should not throw\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                (0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_11__.flushQueue)();\n              },\n            );\n          },\n        );\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapServerComponentWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwU2VydmVyQ29tcG9uZW50V2l0aFNlbnRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQ3FKO0FBQ2pJO0FBQ2dCO0FBQ25CO0FBQzlCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxrRUFBb0I7QUFDdEIsVUFBVSxnQ0FBZ0M7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0VBQWtCO0FBQy9CO0FBQ0EsWUFBWSxvRUFBcUI7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7O0FBRVQsMkNBQTJDLDRFQUE2QjtBQUN4RTtBQUNBLFVBQVUsK0RBQWdCO0FBQzFCO0FBQ0EsVUFBVSwrREFBZ0I7QUFDMUI7O0FBRUEsbUNBQW1DLCtGQUFnQztBQUNuRTtBQUNBLFFBQVEsNkRBQWU7O0FBRXZCLGVBQWUsNkRBQWU7QUFDOUI7QUFDQTtBQUNBLHFCQUFxQixlQUFlLG9CQUFvQixlQUFlO0FBQ3ZFO0FBQ0EsZUFBZSwwRUFBZ0M7QUFDL0MsZUFBZSwwRUFBZ0M7QUFDL0MsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBLG1CQUFtQixrRUFBb0I7QUFDdkM7QUFDQTtBQUNBLG9CQUFvQix1RkFBeUI7QUFDN0M7QUFDQSxrQkFBa0IsOERBQWM7QUFDaEMsa0JBQWtCLFNBQVMsdUZBQXlCO0FBQ3BEO0FBQ0Esa0JBQWtCLDhEQUFjO0FBQ2hDLGtCQUFrQjtBQUNsQixrQkFBa0IsOERBQWM7QUFDaEMsa0JBQWtCLDhEQUFnQjtBQUNsQztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLGdCQUFnQiw4REFBYzs7QUFFOUI7QUFDQTtBQUNBLGdCQUFnQixrRUFBVTtBQUMxQixlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFeUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBTZXJ2ZXJDb21wb25lbnRXaXRoU2VudHJ5LmpzPzUyMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSwgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zLCB3aXRoSXNvbGF0aW9uU2NvcGUsIGdldEN1cnJlbnRTY29wZSwgc3RhcnRTcGFuTWFudWFsLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIGhhbmRsZUNhbGxiYWNrRXJyb3JzLCBjYXB0dXJlRXhjZXB0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHdpbnRlckNHSGVhZGVyc1RvRGljdCwgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzTm90Rm91bmROYXZpZ2F0aW9uRXJyb3IsIGlzUmVkaXJlY3ROYXZpZ2F0aW9uRXJyb3IgfSBmcm9tICcuL25leHROYXZpZ2F0aW9uRXJyb3JVdGlscy5qcyc7XG5pbXBvcnQgeyBjb21tb25PYmplY3RUb1Byb3BhZ2F0aW9uQ29udGV4dCB9IGZyb20gJy4vdXRpbHMvY29tbW9uT2JqZWN0VHJhY2luZy5qcyc7XG5pbXBvcnQgeyBmbHVzaFF1ZXVlIH0gZnJvbSAnLi91dGlscy9yZXNwb25zZUVuZC5qcyc7XG5cbi8qKlxuICogV3JhcHMgYW4gYGFwcGAgZGlyZWN0b3J5IHNlcnZlciBjb21wb25lbnQgd2l0aCBTZW50cnkgZXJyb3IgaW5zdHJ1bWVudGF0aW9uLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gd3JhcFNlcnZlckNvbXBvbmVudFdpdGhTZW50cnkoXG4gIGFwcERpckNvbXBvbmVudCxcbiAgY29udGV4dCxcbikge1xuICBhZGRUcmFjaW5nRXh0ZW5zaW9ucygpO1xuICBjb25zdCB7IGNvbXBvbmVudFJvdXRlLCBjb21wb25lbnRUeXBlIH0gPSBjb250ZXh0O1xuXG4gIC8vIEV2ZW4gdGhvdWdoIHVzZXJzIG1heSBkZWZpbmUgc2VydmVyIGNvbXBvbmVudHMgYXMgYXN5bmMgZnVuY3Rpb25zLCBmb3IgdGhlIGNsaWVudCBidW5kbGVzXG4gIC8vIE5leHQuanMgd2lsbCB0dXJuIHRoZW0gaW50byBzeW5jaHJvbm91cyBmdW5jdGlvbnMgYW5kIGl0IHdpbGwgdHJhbnNmb3JtIGFueSBgYXdhaXRgcyBpbnRvIGluc3RhbmNlcyBvZiB0aGUgYHVzZWBcbiAgLy8gaG9vay4g8J+kr1xuICByZXR1cm4gbmV3IFByb3h5KGFwcERpckNvbXBvbmVudCwge1xuICAgIGFwcGx5OiAob3JpZ2luYWxGdW5jdGlvbiwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgLy8gVE9ETzogSWYgd2UgZXZlciBhbGxvdyB3aXRoSXNvbGF0aW9uU2NvcGUgdG8gdGFrZSBhIHNjb3BlLCB3ZSBzaG91bGQgcGFzcyBhIHNjb3BlIGhlcmUgdGhhdCBpcyBzaGFyZWQgYmV0d2VlbiBhbGwgb2YgdGhlIHNlcnZlciBjb21wb25lbnRzLCBzaW1pbGFyIHRvIHdoYXQgYGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0YCBkb2VzLlxuICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZShpc29sYXRpb25TY29wZSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbXBsZXRlSGVhZGVyc0RpY3QgPSBjb250ZXh0LmhlYWRlcnNcbiAgICAgICAgICA/IHdpbnRlckNHSGVhZGVyc1RvRGljdChjb250ZXh0LmhlYWRlcnMpXG4gICAgICAgICAgOiB7fTtcblxuICAgICAgICBpc29sYXRpb25TY29wZS5zZXRTREtQcm9jZXNzaW5nTWV0YWRhdGEoe1xuICAgICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICAgIGhlYWRlcnM6IGNvbXBsZXRlSGVhZGVyc0RpY3QsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgaW5jb21pbmdQcm9wYWdhdGlvbkNvbnRleHQgPSBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyhcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgICAgICBfbnVsbGlzaENvYWxlc2NlKGNvbnRleHQuc2VudHJ5VHJhY2VIZWFkZXIsICgpID0+ICggY29tcGxldGVIZWFkZXJzRGljdFsnc2VudHJ5LXRyYWNlJ10pKSxcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgICAgICBfbnVsbGlzaENvYWxlc2NlKGNvbnRleHQuYmFnZ2FnZUhlYWRlciwgKCkgPT4gKCBjb21wbGV0ZUhlYWRlcnNEaWN0WydiYWdnYWdlJ10pKSxcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBwcm9wYWdhdGlvbkNvbnRleHQgPSBjb21tb25PYmplY3RUb1Byb3BhZ2F0aW9uQ29udGV4dChjb250ZXh0LmhlYWRlcnMsIGluY29taW5nUHJvcGFnYXRpb25Db250ZXh0KTtcbiAgICAgICAgaXNvbGF0aW9uU2NvcGUuc2V0UHJvcGFnYXRpb25Db250ZXh0KHByb3BhZ2F0aW9uQ29udGV4dCk7XG4gICAgICAgIGdldEN1cnJlbnRTY29wZSgpLnNldFByb3BhZ2F0aW9uQ29udGV4dChwcm9wYWdhdGlvbkNvbnRleHQpO1xuXG4gICAgICAgIHJldHVybiBzdGFydFNwYW5NYW51YWwoXG4gICAgICAgICAge1xuICAgICAgICAgICAgb3A6ICdmdW5jdGlvbi5uZXh0anMnLFxuICAgICAgICAgICAgbmFtZTogYCR7Y29tcG9uZW50VHlwZX0gU2VydmVyIENvbXBvbmVudCAoJHtjb21wb25lbnRSb3V0ZX0pYCxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ2NvbXBvbmVudCcsXG4gICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTl06ICdhdXRvLmZ1bmN0aW9uLm5leHRqcycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc3BhbiA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlQ2FsbGJhY2tFcnJvcnMoXG4gICAgICAgICAgICAgICgpID0+IG9yaWdpbmFsRnVuY3Rpb24uYXBwbHkodGhpc0FyZywgYXJncyksXG4gICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gcmVwb3J0IFwibm90LWZvdW5kXCJzXG4gICAgICAgICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXyA9PiBfLnNldFN0YXR1cywgJ2NhbGwnLCBfMiA9PiBfMignbm90X2ZvdW5kJyldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlzUmVkaXJlY3ROYXZpZ2F0aW9uRXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHJlcG9ydCByZWRpcmVjdHNcbiAgICAgICAgICAgICAgICAgIF9vcHRpb25hbENoYWluKFtzcGFuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMyA9PiBfMy5zZXRTdGF0dXMsICdjYWxsJywgXzQgPT4gXzQoJ29rJyldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF81ID0+IF81LnNldFN0YXR1cywgJ2NhbGwnLCBfNiA9PiBfNignaW50ZXJuYWxfZXJyb3InKV0pO1xuICAgICAgICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlcnJvciwge1xuICAgICAgICAgICAgICAgICAgICBtZWNoYW5pc206IHtcbiAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgIF9vcHRpb25hbENoYWluKFtzcGFuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNyA9PiBfNy5lbmQsICdjYWxsJywgXzggPT4gXzgoKV0pO1xuXG4gICAgICAgICAgICAgICAgLy8gZmx1c2hRdWV1ZSBzaG91bGQgbm90IHRocm93XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1mbG9hdGluZy1wcm9taXNlc1xuICAgICAgICAgICAgICAgIGZsdXNoUXVldWUoKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyB3cmFwU2VydmVyQ29tcG9uZW50V2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFNlcnZlckNvbXBvbmVudFdpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/server/httpIntegration.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/server/httpIntegration.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Http: () => (/* binding */ Http)\n/* harmony export */ });\n/* harmony import */ var _sentry_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/node */ \"(rsc)/./node_modules/@sentry/node/esm/index.js\");\n\n\n/**\n * A custom HTTP integration where we always enable tracing.\n */\nclass Http extends _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Integrations.Http {\n   constructor(options) {\n    super({\n      ...options,\n      tracing: true,\n    });\n  }\n}\n\n\n//# sourceMappingURL=httpIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL3NlcnZlci9odHRwSW50ZWdyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzREFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9zZXJ2ZXIvaHR0cEludGVncmF0aW9uLmpzP2MwYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdyYXRpb25zIH0gZnJvbSAnQHNlbnRyeS9ub2RlJztcblxuLyoqXG4gKiBBIGN1c3RvbSBIVFRQIGludGVncmF0aW9uIHdoZXJlIHdlIGFsd2F5cyBlbmFibGUgdHJhY2luZy5cbiAqL1xuY2xhc3MgSHR0cCBleHRlbmRzIEludGVncmF0aW9ucy5IdHRwIHtcbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcih7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdHJhY2luZzogdHJ1ZSxcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgeyBIdHRwIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwSW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/server/httpIntegration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/server/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/server/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_USER_INCLUDES: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_USER_INCLUDES),\n/* harmony export */   ErrorBoundary: () => (/* binding */ ErrorBoundary),\n/* harmony export */   Handlers: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Handlers),\n/* harmony export */   Http: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Http),\n/* harmony export */   Hub: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Hub),\n/* harmony export */   IS_BUILD: () => (/* binding */ IS_BUILD),\n/* harmony export */   Integrations: () => (/* binding */ Integrations),\n/* harmony export */   NodeClient: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.NodeClient),\n/* harmony export */   SDK_VERSION: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_OP: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_OP),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE),\n/* harmony export */   Scope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Scope),\n/* harmony export */   Undici: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Undici),\n/* harmony export */   addBreadcrumb: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.addBreadcrumb),\n/* harmony export */   addEventProcessor: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.addEventProcessor),\n/* harmony export */   addGlobalEventProcessor: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor),\n/* harmony export */   addIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.addIntegration),\n/* harmony export */   addRequestDataToEvent: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent),\n/* harmony export */   anrIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.anrIntegration),\n/* harmony export */   autoDiscoverNodePerformanceMonitoringIntegrations: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.autoDiscoverNodePerformanceMonitoringIntegrations),\n/* harmony export */   captureCheckIn: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureCheckIn),\n/* harmony export */   captureConsoleIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureConsoleIntegration),\n/* harmony export */   captureEvent: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureEvent),\n/* harmony export */   captureException: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureException),\n/* harmony export */   captureMessage: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureMessage),\n/* harmony export */   captureSession: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.captureSession),\n/* harmony export */   captureUnderscoreErrorException: () => (/* reexport safe */ _common_error_js__WEBPACK_IMPORTED_MODULE_2__.captureUnderscoreErrorException),\n/* harmony export */   close: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.close),\n/* harmony export */   configureScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.configureScope),\n/* harmony export */   consoleIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.consoleIntegration),\n/* harmony export */   contextLinesIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.contextLinesIntegration),\n/* harmony export */   continueTrace: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.continueTrace),\n/* harmony export */   createGetModuleFromFilename: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.createGetModuleFromFilename),\n/* harmony export */   createReduxEnhancer: () => (/* binding */ createReduxEnhancer),\n/* harmony export */   createTransport: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.createTransport),\n/* harmony export */   cron: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.cron),\n/* harmony export */   debugIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.debugIntegration),\n/* harmony export */   dedupeIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.dedupeIntegration),\n/* harmony export */   deepReadDirSync: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.deepReadDirSync),\n/* harmony export */   defaultIntegrations: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.defaultIntegrations),\n/* harmony export */   defaultStackParser: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.defaultStackParser),\n/* harmony export */   enableAnrDetection: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.enableAnrDetection),\n/* harmony export */   endSession: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.endSession),\n/* harmony export */   extraErrorDataIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.extraErrorDataIntegration),\n/* harmony export */   extractRequestData: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.extractRequestData),\n/* harmony export */   extractTraceparentData: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData),\n/* harmony export */   flush: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.flush),\n/* harmony export */   functionToStringIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.functionToStringIntegration),\n/* harmony export */   getActiveSpan: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan),\n/* harmony export */   getActiveTransaction: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getActiveTransaction),\n/* harmony export */   getClient: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getClient),\n/* harmony export */   getCurrentHub: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub),\n/* harmony export */   getCurrentScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope),\n/* harmony export */   getDefaultIntegrations: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getDefaultIntegrations),\n/* harmony export */   getGlobalScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getGlobalScope),\n/* harmony export */   getHubFromCarrier: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getHubFromCarrier),\n/* harmony export */   getIsolationScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope),\n/* harmony export */   getModuleFromFilename: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getModuleFromFilename),\n/* harmony export */   getSentryRelease: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getSentryRelease),\n/* harmony export */   getSpanStatusFromHttpCode: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.getSpanStatusFromHttpCode),\n/* harmony export */   hapiErrorPlugin: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.hapiErrorPlugin),\n/* harmony export */   hapiIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.hapiIntegration),\n/* harmony export */   httpClientIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.httpClientIntegration),\n/* harmony export */   httpIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.httpIntegration),\n/* harmony export */   inboundFiltersIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.inboundFiltersIntegration),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   isBuild: () => (/* binding */ deprecatedIsBuild),\n/* harmony export */   isInitialized: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.isInitialized),\n/* harmony export */   lastEventId: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.lastEventId),\n/* harmony export */   linkedErrorsIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.linkedErrorsIntegration),\n/* harmony export */   localVariablesIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.localVariablesIntegration),\n/* harmony export */   makeMain: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.makeMain),\n/* harmony export */   makeNodeTransport: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.makeNodeTransport),\n/* harmony export */   metrics: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.metrics),\n/* harmony export */   modulesIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.modulesIntegration),\n/* harmony export */   nativeNodeFetchintegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.nativeNodeFetchintegration),\n/* harmony export */   nodeContextIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.nodeContextIntegration),\n/* harmony export */   onUncaughtExceptionIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.onUncaughtExceptionIntegration),\n/* harmony export */   onUnhandledRejectionIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.onUnhandledRejectionIntegration),\n/* harmony export */   parameterize: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.parameterize),\n/* harmony export */   reportingObserverIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.reportingObserverIntegration),\n/* harmony export */   requestDataIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.requestDataIntegration),\n/* harmony export */   rewriteFramesIntegration: () => (/* reexport safe */ _rewriteFramesIntegration_js__WEBPACK_IMPORTED_MODULE_1__.rewriteFramesIntegration),\n/* harmony export */   runWithAsyncContext: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext),\n/* harmony export */   sessionTimingIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.sessionTimingIntegration),\n/* harmony export */   setContext: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setContext),\n/* harmony export */   setCurrentClient: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setCurrentClient),\n/* harmony export */   setExtra: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setExtra),\n/* harmony export */   setExtras: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setExtras),\n/* harmony export */   setHttpStatus: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setHttpStatus),\n/* harmony export */   setMeasurement: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setMeasurement),\n/* harmony export */   setTag: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setTag),\n/* harmony export */   setTags: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setTags),\n/* harmony export */   setUser: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.setUser),\n/* harmony export */   showReportDialog: () => (/* binding */ showReportDialog),\n/* harmony export */   spanStatusfromHttpCode: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.spanStatusfromHttpCode),\n/* harmony export */   spotlightIntegration: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.spotlightIntegration),\n/* harmony export */   startActiveSpan: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startActiveSpan),\n/* harmony export */   startInactiveSpan: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startInactiveSpan),\n/* harmony export */   startSession: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startSession),\n/* harmony export */   startSpan: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startSpan),\n/* harmony export */   startSpanManual: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startSpanManual),\n/* harmony export */   startTransaction: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.startTransaction),\n/* harmony export */   trace: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.trace),\n/* harmony export */   trpcMiddleware: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.trpcMiddleware),\n/* harmony export */   withActiveSpan: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.withActiveSpan),\n/* harmony export */   withErrorBoundary: () => (/* binding */ withErrorBoundary),\n/* harmony export */   withIsolationScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.withIsolationScope),\n/* harmony export */   withMonitor: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.withMonitor),\n/* harmony export */   withScope: () => (/* reexport safe */ _sentry_node__WEBPACK_IMPORTED_MODULE_0__.withScope),\n/* harmony export */   withSentry: () => (/* reexport safe */ _common_wrapApiHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_16__.withSentry),\n/* harmony export */   withSentryAPI: () => (/* reexport safe */ _common_wrapApiHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_16__.withSentryAPI),\n/* harmony export */   withSentryGetServerSideProps: () => (/* reexport safe */ _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.withSentryGetServerSideProps),\n/* harmony export */   withSentryGetStaticProps: () => (/* reexport safe */ _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.withSentryGetStaticProps),\n/* harmony export */   withSentryServerSideAppGetInitialProps: () => (/* reexport safe */ _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.withSentryServerSideAppGetInitialProps),\n/* harmony export */   withSentryServerSideDocumentGetInitialProps: () => (/* reexport safe */ _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.withSentryServerSideDocumentGetInitialProps),\n/* harmony export */   withSentryServerSideErrorGetInitialProps: () => (/* reexport safe */ _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.withSentryServerSideErrorGetInitialProps),\n/* harmony export */   withSentryServerSideGetInitialProps: () => (/* reexport safe */ _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.withSentryServerSideGetInitialProps),\n/* harmony export */   withServerActionInstrumentation: () => (/* reexport safe */ _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_15__.withServerActionInstrumentation),\n/* harmony export */   wrapApiHandlerWithSentry: () => (/* reexport safe */ _common_wrapApiHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_16__.wrapApiHandlerWithSentry),\n/* harmony export */   wrapApiHandlerWithSentryVercelCrons: () => (/* reexport safe */ _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_11__.wrapApiHandlerWithSentryVercelCrons),\n/* harmony export */   wrapAppGetInitialPropsWithSentry: () => (/* reexport safe */ _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.wrapAppGetInitialPropsWithSentry),\n/* harmony export */   wrapDocumentGetInitialPropsWithSentry: () => (/* reexport safe */ _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.wrapDocumentGetInitialPropsWithSentry),\n/* harmony export */   wrapErrorGetInitialPropsWithSentry: () => (/* reexport safe */ _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.wrapErrorGetInitialPropsWithSentry),\n/* harmony export */   wrapGenerationFunctionWithSentry: () => (/* reexport safe */ _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_14__.wrapGenerationFunctionWithSentry),\n/* harmony export */   wrapGetInitialPropsWithSentry: () => (/* reexport safe */ _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.wrapGetInitialPropsWithSentry),\n/* harmony export */   wrapGetServerSidePropsWithSentry: () => (/* reexport safe */ _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.wrapGetServerSidePropsWithSentry),\n/* harmony export */   wrapGetStaticPropsWithSentry: () => (/* reexport safe */ _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.wrapGetStaticPropsWithSentry),\n/* harmony export */   wrapMiddlewareWithSentry: () => (/* reexport safe */ _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_12__.wrapMiddlewareWithSentry),\n/* harmony export */   wrapPageComponentWithSentry: () => (/* reexport safe */ _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_13__.wrapPageComponentWithSentry),\n/* harmony export */   wrapRouteHandlerWithSentry: () => (/* reexport safe */ _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_10__.wrapRouteHandlerWithSentry),\n/* harmony export */   wrapServerComponentWithSentry: () => (/* reexport safe */ _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_9__.wrapServerComponentWithSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/sdkMetadata.js\");\n/* harmony import */ var _sentry_node__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @sentry/node */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/node */ \"(rsc)/./node_modules/@sentry/node/esm/index.js\");\n/* harmony import */ var _sentry_node__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sentry/node */ \"(rsc)/./node_modules/@sentry/node/esm/sdk.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../common/debug-build.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n/* harmony import */ var _common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../common/devErrorSymbolicationEventProcessor.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\");\n/* harmony import */ var _common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../common/getVercelEnv.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\");\n/* harmony import */ var _common_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../common/utils/isBuild.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _httpIntegration_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./httpIntegration.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/server/httpIntegration.js\");\n/* harmony import */ var _onUncaughtExceptionIntegration_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./onUncaughtExceptionIntegration.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/server/onUncaughtExceptionIntegration.js\");\n/* harmony import */ var _rewriteFramesIntegration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rewriteFramesIntegration.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/server/rewriteFramesIntegration.js\");\n/* harmony import */ var _common_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/_error.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/_error.js\");\n/* harmony import */ var _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/wrapGetStaticPropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/wrapGetInitialPropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/wrapAppGetInitialPropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/wrapDocumentGetInitialPropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/wrapErrorGetInitialPropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/wrapGetServerSidePropsWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js\");\n/* harmony import */ var _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/wrapServerComponentWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js\");\n/* harmony import */ var _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/wrapRouteHandlerWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js\");\n/* harmony import */ var _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/wrapApiHandlerWithSentryVercelCrons.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js\");\n/* harmony import */ var _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/wrapMiddlewareWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js\");\n/* harmony import */ var _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/wrapPageComponentWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js\");\n/* harmony import */ var _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../common/wrapGenerationFunctionWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js\");\n/* harmony import */ var _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../common/withServerActionInstrumentation.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js\");\n/* harmony import */ var _common_wrapApiHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/wrapApiHandlerWithSentry.js */ \"(rsc)/./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentry.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Integrations = {\n  ..._sentry_node__WEBPACK_IMPORTED_MODULE_0__.Integrations,\n  Http: _httpIntegration_js__WEBPACK_IMPORTED_MODULE_17__.Http,\n  OnUncaughtException: _onUncaughtExceptionIntegration_js__WEBPACK_IMPORTED_MODULE_18__.OnUncaughtException,\n};\n\n/**\n * A passthrough error boundary for the server that doesn't depend on any react. Error boundaries don't catch SSR errors\n * so they should simply be a passthrough.\n */\nconst ErrorBoundary = (props) => {\n  if (!props.children) {\n    return null;\n  }\n\n  if (typeof props.children === 'function') {\n    return (props.children )();\n  }\n\n  // since Next.js >= 10 requires React ^16.6.0 we are allowed to return children like this here\n  return props.children ;\n};\n\n/**\n * A passthrough redux enhancer for the server that doesn't depend on anything from the `@sentry/react` package.\n */\nfunction createReduxEnhancer() {\n  return (createStore) => createStore;\n}\n\n/**\n * A passthrough error boundary wrapper for the server that doesn't depend on any react. Error boundaries don't catch\n * SSR errors so they should simply be a passthrough.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n) {\n  return WrappedComponent ;\n}\n\n/**\n * Just a passthrough since we're on the server and showing the report dialog on the server doesn't make any sense.\n */\nfunction showReportDialog() {\n  return;\n}\n\n// TODO (v8): Remove this\n/**\n * @deprecated This constant will be removed in the next major update.\n */\nconst IS_BUILD = (0,_common_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_19__.isBuild)();\n\nconst IS_VERCEL = !!process.env.VERCEL;\n\n/** Inits the Sentry NextJS SDK on node. */\nfunction init(options) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_20__.addTracingExtensions)();\n\n  if ((0,_common_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_19__.isBuild)()) {\n    return;\n  }\n\n  const customDefaultIntegrations = [\n    ...(0,_sentry_node__WEBPACK_IMPORTED_MODULE_21__.getDefaultIntegrations)(options).filter(\n      integration => !['Http', 'OnUncaughtException'].includes(integration.name),\n    ),\n    (0,_rewriteFramesIntegration_js__WEBPACK_IMPORTED_MODULE_1__.rewriteFramesIntegration)(),\n    new _httpIntegration_js__WEBPACK_IMPORTED_MODULE_17__.Http(),\n    new _onUncaughtExceptionIntegration_js__WEBPACK_IMPORTED_MODULE_18__.OnUncaughtException(),\n  ];\n\n  const opts = {\n    environment: process.env.SENTRY_ENVIRONMENT || (0,_common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_22__.getVercelEnv)(false) || \"development\",\n    defaultIntegrations: customDefaultIntegrations,\n    ...options,\n    // Right now we only capture frontend sessions for Next.js\n    autoSessionTracking: false,\n  };\n\n  if (_common_debug_build_js__WEBPACK_IMPORTED_MODULE_23__.DEBUG_BUILD && opts.debug) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.logger.enable();\n  }\n\n  _common_debug_build_js__WEBPACK_IMPORTED_MODULE_23__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.logger.log('Initializing SDK...');\n\n  if (sdkAlreadyInitialized()) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_23__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.logger.log('SDK already initialized');\n    return;\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_25__.applySdkMetadata)(opts, 'nextjs', ['nextjs', 'node']);\n\n  (0,_sentry_node__WEBPACK_IMPORTED_MODULE_21__.init)(opts);\n\n  const filterTransactions = event => {\n    return event.type === 'transaction' && event.transaction === '/404' ? null : event;\n  };\n\n  filterTransactions.id = 'NextServer404TransactionFilter';\n\n  const scope = (0,_sentry_node__WEBPACK_IMPORTED_MODULE_26__.getCurrentScope)();\n  scope.setTag('runtime', 'node');\n  if (IS_VERCEL) {\n    scope.setTag('vercel', true);\n  }\n\n  scope.addEventProcessor(filterTransactions);\n\n  if (true) {\n    scope.addEventProcessor(_common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_27__.devErrorSymbolicationEventProcessor);\n  }\n\n  _common_debug_build_js__WEBPACK_IMPORTED_MODULE_23__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.logger.log('SDK successfully initialized');\n}\n\nfunction sdkAlreadyInitialized() {\n  return !!(0,_sentry_node__WEBPACK_IMPORTED_MODULE_26__.getClient)();\n}\n\n// TODO (v8): Remove this\n/**\n * @deprecated This constant will be removed in the next major update.\n */\nconst deprecatedIsBuild = () => (0,_common_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_19__.isBuild)();\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/server/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/server/onUncaughtExceptionIntegration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/server/onUncaughtExceptionIntegration.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnUncaughtException: () => (/* binding */ OnUncaughtException)\n/* harmony export */ });\n/* harmony import */ var _sentry_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/node */ \"(rsc)/./node_modules/@sentry/node/esm/index.js\");\n\n\n/**\n * A custom OnUncaughtException integration that does not exit by default.\n */\nclass OnUncaughtException extends _sentry_node__WEBPACK_IMPORTED_MODULE_0__.Integrations.OnUncaughtException {\n   constructor(options) {\n    super({\n      exitEvenIfOtherHandlersAreRegistered: false,\n      ...options,\n    });\n  }\n}\n\n\n//# sourceMappingURL=onUncaughtExceptionIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL3NlcnZlci9vblVuY2F1Z2h0RXhjZXB0aW9uSW50ZWdyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzREFBWTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9zZXJ2ZXIvb25VbmNhdWdodEV4Y2VwdGlvbkludGVncmF0aW9uLmpzPzgwMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdyYXRpb25zIH0gZnJvbSAnQHNlbnRyeS9ub2RlJztcblxuLyoqXG4gKiBBIGN1c3RvbSBPblVuY2F1Z2h0RXhjZXB0aW9uIGludGVncmF0aW9uIHRoYXQgZG9lcyBub3QgZXhpdCBieSBkZWZhdWx0LlxuICovXG5jbGFzcyBPblVuY2F1Z2h0RXhjZXB0aW9uIGV4dGVuZHMgSW50ZWdyYXRpb25zLk9uVW5jYXVnaHRFeGNlcHRpb24ge1xuICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKHtcbiAgICAgIGV4aXRFdmVuSWZPdGhlckhhbmRsZXJzQXJlUmVnaXN0ZXJlZDogZmFsc2UsXG4gICAgICAuLi5vcHRpb25zLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7IE9uVW5jYXVnaHRFeGNlcHRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9uVW5jYXVnaHRFeGNlcHRpb25JbnRlZ3JhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/server/onUncaughtExceptionIntegration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/nextjs/esm/server/rewriteFramesIntegration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/server/rewriteFramesIntegration.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customRewriteFramesIntegration: () => (/* binding */ customRewriteFramesIntegration),\n/* harmony export */   rewriteFramesIntegration: () => (/* binding */ rewriteFramesIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/rewriteframes.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js\");\n\n\n\n\n\n\nconst globalWithInjectedValues = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ\n\n;\n\nconst customRewriteFramesIntegration = ((options) => {\n  // This value is injected at build time, based on the output directory specified in the build config. Though a default\n  // is set there, we set it here as well, just in case something has gone wrong with the injection.\n  const distDirName = globalWithInjectedValues.__rewriteFramesDistDir__;\n\n  if (distDirName) {\n    // nextjs always puts the build directory at the project root level, which is also where you run `next start` from, so\n    // we can read in the project directory from the currently running process\n    const distDirAbsPath = path__WEBPACK_IMPORTED_MODULE_0__.resolve(distDirName).replace(/(\\/|\\\\)$/, ''); // We strip trailing slashes because \"app:///_next\" also doesn't have one\n    // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- user input is escaped\n    const SOURCEMAP_FILENAME_REGEX = new RegExp((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.escapeStringForRegex)(distDirAbsPath));\n\n    return (0,_sentry_integrations__WEBPACK_IMPORTED_MODULE_3__.rewriteFramesIntegration)({\n      iteratee: frame => {\n        frame.filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([frame, 'access', _ => _.filename, 'optionalAccess', _2 => _2.replace, 'call', _3 => _3(SOURCEMAP_FILENAME_REGEX, 'app:///_next')]);\n        return frame;\n      },\n      ...options,\n    });\n  }\n\n  // Do nothing if we can't find a distDirName\n  return {\n    // eslint-disable-next-line deprecation/deprecation\n    name: _sentry_integrations__WEBPACK_IMPORTED_MODULE_3__.RewriteFrames.id,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce: () => {},\n    processEvent: event => event,\n  };\n}) ;\n\nconst rewriteFramesIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.defineIntegration)(customRewriteFramesIntegration);\n\n\n//# sourceMappingURL=rewriteFramesIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL3NlcnZlci9yZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQStDO0FBQ2xCO0FBQ29CO0FBQzREO0FBQzVDOztBQUVqRSxpQ0FBaUMscURBQVU7O0FBRTNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5Q0FBWSx1Q0FBdUM7QUFDOUU7QUFDQSxnREFBZ0QsbUVBQW9COztBQUVwRSxXQUFXLDhFQUEwQjtBQUNyQztBQUNBLHlCQUF5Qiw2REFBYztBQUN2QztBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLCtEQUFhO0FBQ3ZCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxDQUFDOztBQUVELGlDQUFpQywrREFBaUI7O0FBRWtCO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL3NlcnZlci9yZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24uanM/ZWU4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGRlZmluZUludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbiBhcyByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24kMSwgUmV3cml0ZUZyYW1lcyB9IGZyb20gJ0BzZW50cnkvaW50ZWdyYXRpb25zJztcbmltcG9ydCB7IGVzY2FwZVN0cmluZ0ZvclJlZ2V4LCBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IGdsb2JhbFdpdGhJbmplY3RlZFZhbHVlcyA9IEdMT0JBTF9PQkpcblxuO1xuXG5jb25zdCBjdXN0b21SZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMpID0+IHtcbiAgLy8gVGhpcyB2YWx1ZSBpcyBpbmplY3RlZCBhdCBidWlsZCB0aW1lLCBiYXNlZCBvbiB0aGUgb3V0cHV0IGRpcmVjdG9yeSBzcGVjaWZpZWQgaW4gdGhlIGJ1aWxkIGNvbmZpZy4gVGhvdWdoIGEgZGVmYXVsdFxuICAvLyBpcyBzZXQgdGhlcmUsIHdlIHNldCBpdCBoZXJlIGFzIHdlbGwsIGp1c3QgaW4gY2FzZSBzb21ldGhpbmcgaGFzIGdvbmUgd3Jvbmcgd2l0aCB0aGUgaW5qZWN0aW9uLlxuICBjb25zdCBkaXN0RGlyTmFtZSA9IGdsb2JhbFdpdGhJbmplY3RlZFZhbHVlcy5fX3Jld3JpdGVGcmFtZXNEaXN0RGlyX187XG5cbiAgaWYgKGRpc3REaXJOYW1lKSB7XG4gICAgLy8gbmV4dGpzIGFsd2F5cyBwdXRzIHRoZSBidWlsZCBkaXJlY3RvcnkgYXQgdGhlIHByb2plY3Qgcm9vdCBsZXZlbCwgd2hpY2ggaXMgYWxzbyB3aGVyZSB5b3UgcnVuIGBuZXh0IHN0YXJ0YCBmcm9tLCBzb1xuICAgIC8vIHdlIGNhbiByZWFkIGluIHRoZSBwcm9qZWN0IGRpcmVjdG9yeSBmcm9tIHRoZSBjdXJyZW50bHkgcnVubmluZyBwcm9jZXNzXG4gICAgY29uc3QgZGlzdERpckFic1BhdGggPSBwYXRoLnJlc29sdmUoZGlzdERpck5hbWUpLnJlcGxhY2UoLyhcXC98XFxcXCkkLywgJycpOyAvLyBXZSBzdHJpcCB0cmFpbGluZyBzbGFzaGVzIGJlY2F1c2UgXCJhcHA6Ly8vX25leHRcIiBhbHNvIGRvZXNuJ3QgaGF2ZSBvbmVcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHNlbnRyeS1pbnRlcm5hbC9zZGsvbm8tcmVnZXhwLWNvbnN0cnVjdG9yIC0tIHVzZXIgaW5wdXQgaXMgZXNjYXBlZFxuICAgIGNvbnN0IFNPVVJDRU1BUF9GSUxFTkFNRV9SRUdFWCA9IG5ldyBSZWdFeHAoZXNjYXBlU3RyaW5nRm9yUmVnZXgoZGlzdERpckFic1BhdGgpKTtcblxuICAgIHJldHVybiByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24kMSh7XG4gICAgICBpdGVyYXRlZTogZnJhbWUgPT4ge1xuICAgICAgICBmcmFtZS5maWxlbmFtZSA9IF9vcHRpb25hbENoYWluKFtmcmFtZSwgJ2FjY2VzcycsIF8gPT4gXy5maWxlbmFtZSwgJ29wdGlvbmFsQWNjZXNzJywgXzIgPT4gXzIucmVwbGFjZSwgJ2NhbGwnLCBfMyA9PiBfMyhTT1VSQ0VNQVBfRklMRU5BTUVfUkVHRVgsICdhcHA6Ly8vX25leHQnKV0pO1xuICAgICAgICByZXR1cm4gZnJhbWU7XG4gICAgICB9LFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIERvIG5vdGhpbmcgaWYgd2UgY2FuJ3QgZmluZCBhIGRpc3REaXJOYW1lXG4gIHJldHVybiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgbmFtZTogUmV3cml0ZUZyYW1lcy5pZCxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc2V0dXBPbmNlOiAoKSA9PiB7fSxcbiAgICBwcm9jZXNzRXZlbnQ6IGV2ZW50ID0+IGV2ZW50LFxuICB9O1xufSkgO1xuXG5jb25zdCByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihjdXN0b21SZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24pO1xuXG5leHBvcnQgeyBjdXN0b21SZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24sIHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV3cml0ZUZyYW1lc0ludGVncmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/nextjs/esm/server/rewriteFramesIntegration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/async/domain.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/async/domain.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDomainAsyncContextStrategy: () => (/* binding */ setDomainAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domain */ \"domain\");\n/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(domain__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n\nfunction getActiveDomain() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return domain__WEBPACK_IMPORTED_MODULE_0__.active ;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHub() {\n  const activeDomain = getActiveDomain();\n\n  // If there's no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(activeDomain);\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(activeDomain);\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction createNewHub(parent) {\n  const carrier = {};\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(carrier, parent);\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(carrier);\n}\n\nfunction runWithAsyncContext(callback, options) {\n  const activeDomain = getActiveDomain();\n\n  if (activeDomain && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'optionalAccess', _ => _.reuseExisting])) {\n    // We're already in a domain, so we don't need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain__WEBPACK_IMPORTED_MODULE_0__.create() ;\n\n  const parentHub = activeDomain ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHubOnCarrier)(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nfunction setDomainAsyncContextStrategy() {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setAsyncContextStrategy)({ getCurrentHub, runWithAsyncContext });\n}\n\n\n//# sourceMappingURL=domain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9hc3luYy9kb21haW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0M7QUFDZDtBQUM4RTs7QUFFL0c7QUFDQTtBQUNBLFNBQVMsMENBQWdCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLGdFQUFrQjs7QUFFcEIsU0FBUywrREFBaUI7QUFDMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnRUFBa0I7QUFDcEIsU0FBUywrREFBaUI7QUFDMUI7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsNkRBQWM7QUFDcEM7QUFDQTtBQUNBOztBQUVBLGdCQUFnQiwwQ0FBYTs7QUFFN0IsbUNBQW1DLCtEQUFpQjtBQUNwRDtBQUNBLEVBQUUsNkRBQWU7O0FBRWpCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHFFQUF1QixHQUFHLG9DQUFvQztBQUNoRTs7QUFFeUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL2FzeW5jL2RvbWFpbi5qcz9jNGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgKiBhcyBkb21haW4gZnJvbSAnZG9tYWluJztcbmltcG9ydCB7IHNldEFzeW5jQ29udGV4dFN0cmF0ZWd5LCBlbnN1cmVIdWJPbkNhcnJpZXIsIGdldEh1YkZyb21DYXJyaWVyLCBzZXRIdWJPbkNhcnJpZXIgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuXG5mdW5jdGlvbiBnZXRBY3RpdmVEb21haW4oKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgcmV0dXJuIChkb21haW4gKS5hY3RpdmUgO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmZ1bmN0aW9uIGdldEN1cnJlbnRIdWIoKSB7XG4gIGNvbnN0IGFjdGl2ZURvbWFpbiA9IGdldEFjdGl2ZURvbWFpbigpO1xuXG4gIC8vIElmIHRoZXJlJ3Mgbm8gYWN0aXZlIGRvbWFpbiwganVzdCByZXR1cm4gdW5kZWZpbmVkIGFuZCB0aGUgZ2xvYmFsIGh1YiB3aWxsIGJlIHVzZWRcbiAgaWYgKCFhY3RpdmVEb21haW4pIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgZW5zdXJlSHViT25DYXJyaWVyKGFjdGl2ZURvbWFpbik7XG5cbiAgcmV0dXJuIGdldEh1YkZyb21DYXJyaWVyKGFjdGl2ZURvbWFpbik7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuZnVuY3Rpb24gY3JlYXRlTmV3SHViKHBhcmVudCkge1xuICBjb25zdCBjYXJyaWVyID0ge307XG4gIGVuc3VyZUh1Yk9uQ2FycmllcihjYXJyaWVyLCBwYXJlbnQpO1xuICByZXR1cm4gZ2V0SHViRnJvbUNhcnJpZXIoY2Fycmllcik7XG59XG5cbmZ1bmN0aW9uIHJ1bldpdGhBc3luY0NvbnRleHQoY2FsbGJhY2ssIG9wdGlvbnMpIHtcbiAgY29uc3QgYWN0aXZlRG9tYWluID0gZ2V0QWN0aXZlRG9tYWluKCk7XG5cbiAgaWYgKGFjdGl2ZURvbWFpbiAmJiBfb3B0aW9uYWxDaGFpbihbb3B0aW9ucywgJ29wdGlvbmFsQWNjZXNzJywgXyA9PiBfLnJldXNlRXhpc3RpbmddKSkge1xuICAgIC8vIFdlJ3JlIGFscmVhZHkgaW4gYSBkb21haW4sIHNvIHdlIGRvbid0IG5lZWQgdG8gY3JlYXRlIGEgbmV3IG9uZSwganVzdCBjYWxsIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBjdXJyZW50IGh1YlxuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9XG5cbiAgY29uc3QgbG9jYWwgPSBkb21haW4uY3JlYXRlKCkgO1xuXG4gIGNvbnN0IHBhcmVudEh1YiA9IGFjdGl2ZURvbWFpbiA/IGdldEh1YkZyb21DYXJyaWVyKGFjdGl2ZURvbWFpbikgOiB1bmRlZmluZWQ7XG4gIGNvbnN0IG5ld0h1YiA9IGNyZWF0ZU5ld0h1YihwYXJlbnRIdWIpO1xuICBzZXRIdWJPbkNhcnJpZXIobG9jYWwsIG5ld0h1Yik7XG5cbiAgcmV0dXJuIGxvY2FsLmJpbmQoKCkgPT4ge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9KSgpO1xufVxuXG4vKipcbiAqIFNldHMgdGhlIGFzeW5jIGNvbnRleHQgc3RyYXRlZ3kgdG8gdXNlIE5vZGUuanMgZG9tYWlucy5cbiAqL1xuZnVuY3Rpb24gc2V0RG9tYWluQXN5bmNDb250ZXh0U3RyYXRlZ3koKSB7XG4gIHNldEFzeW5jQ29udGV4dFN0cmF0ZWd5KHsgZ2V0Q3VycmVudEh1YiwgcnVuV2l0aEFzeW5jQ29udGV4dCB9KTtcbn1cblxuZXhwb3J0IHsgc2V0RG9tYWluQXN5bmNDb250ZXh0U3RyYXRlZ3kgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbWFpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/async/domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/async/hooks.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/async/hooks.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setHooksAsyncContextStrategy: () => (/* binding */ setHooksAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var async_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async_hooks */ \"async_hooks\");\n/* harmony import */ var async_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(async_hooks__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nlet asyncStorage;\n\n/**\n * Sets the async context strategy to use AsyncLocalStorage which requires Node v12.17.0 or v13.10.0.\n */\nfunction setHooksAsyncContextStrategy() {\n  if (!asyncStorage) {\n    // eslint-disable-next-line deprecation/deprecation\n    asyncStorage = new async_hooks__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorage();\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  function getCurrentHub() {\n    return asyncStorage.getStore();\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  function createNewHub(parent) {\n    const carrier = {};\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(carrier, parent);\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(carrier);\n  }\n\n  function runWithAsyncContext(callback, options) {\n    const existingHub = getCurrentHub();\n\n    if (existingHub && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'optionalAccess', _ => _.reuseExisting])) {\n      // We're already in an async context, so we don't need to create a new one\n      // just call the callback with the current hub\n      return callback();\n    }\n\n    const newHub = createNewHub(existingHub);\n\n    return asyncStorage.run(newHub, () => {\n      return callback();\n    });\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setAsyncContextStrategy)({ getCurrentHub, runWithAsyncContext });\n}\n\n\n//# sourceMappingURL=hooks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9hc3luYy9ob29rcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUMrQztBQUNuRDs7QUFFM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMERBQWdDO0FBQ3ZEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0VBQWtCO0FBQ3RCLFdBQVcsK0RBQWlCO0FBQzVCOztBQUVBO0FBQ0E7O0FBRUEsdUJBQXVCLDZEQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsRUFBRSxxRUFBdUIsR0FBRyxvQ0FBb0M7QUFDaEU7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9hc3luYy9ob29rcy5qcz82YzMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBzZXRBc3luY0NvbnRleHRTdHJhdGVneSwgZW5zdXJlSHViT25DYXJyaWVyLCBnZXRIdWJGcm9tQ2FycmllciB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgKiBhcyBhc3luY19ob29rcyBmcm9tICdhc3luY19ob29rcyc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxubGV0IGFzeW5jU3RvcmFnZTtcblxuLyoqXG4gKiBTZXRzIHRoZSBhc3luYyBjb250ZXh0IHN0cmF0ZWd5IHRvIHVzZSBBc3luY0xvY2FsU3RvcmFnZSB3aGljaCByZXF1aXJlcyBOb2RlIHYxMi4xNy4wIG9yIHYxMy4xMC4wLlxuICovXG5mdW5jdGlvbiBzZXRIb29rc0FzeW5jQ29udGV4dFN0cmF0ZWd5KCkge1xuICBpZiAoIWFzeW5jU3RvcmFnZSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIGFzeW5jU3RvcmFnZSA9IG5ldyAoYXN5bmNfaG9va3MgKS5Bc3luY0xvY2FsU3RvcmFnZSgpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnRIdWIoKSB7XG4gICAgcmV0dXJuIGFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGZ1bmN0aW9uIGNyZWF0ZU5ld0h1YihwYXJlbnQpIHtcbiAgICBjb25zdCBjYXJyaWVyID0ge307XG4gICAgZW5zdXJlSHViT25DYXJyaWVyKGNhcnJpZXIsIHBhcmVudCk7XG4gICAgcmV0dXJuIGdldEh1YkZyb21DYXJyaWVyKGNhcnJpZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gcnVuV2l0aEFzeW5jQ29udGV4dChjYWxsYmFjaywgb3B0aW9ucykge1xuICAgIGNvbnN0IGV4aXN0aW5nSHViID0gZ2V0Q3VycmVudEh1YigpO1xuXG4gICAgaWYgKGV4aXN0aW5nSHViICYmIF9vcHRpb25hbENoYWluKFtvcHRpb25zLCAnb3B0aW9uYWxBY2Nlc3MnLCBfID0+IF8ucmV1c2VFeGlzdGluZ10pKSB7XG4gICAgICAvLyBXZSdyZSBhbHJlYWR5IGluIGFuIGFzeW5jIGNvbnRleHQsIHNvIHdlIGRvbid0IG5lZWQgdG8gY3JlYXRlIGEgbmV3IG9uZVxuICAgICAgLy8ganVzdCBjYWxsIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBjdXJyZW50IGh1YlxuICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgfVxuXG4gICAgY29uc3QgbmV3SHViID0gY3JlYXRlTmV3SHViKGV4aXN0aW5nSHViKTtcblxuICAgIHJldHVybiBhc3luY1N0b3JhZ2UucnVuKG5ld0h1YiwgKCkgPT4ge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gIH1cblxuICBzZXRBc3luY0NvbnRleHRTdHJhdGVneSh7IGdldEN1cnJlbnRIdWIsIHJ1bldpdGhBc3luY0NvbnRleHQgfSk7XG59XG5cbmV4cG9ydCB7IHNldEhvb2tzQXN5bmNDb250ZXh0U3RyYXRlZ3kgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/async/hooks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/async/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/async/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setNodeAsyncContextStrategy: () => (/* binding */ setNodeAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* harmony import */ var _domain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./domain.js */ \"(rsc)/./node_modules/@sentry/node/esm/async/domain.js\");\n/* harmony import */ var _hooks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hooks.js */ \"(rsc)/./node_modules/@sentry/node/esm/async/hooks.js\");\n\n\n\n\n/**\n * Sets the correct async context strategy for Node.js\n *\n * Node.js >= 14 uses AsyncLocalStorage\n * Node.js < 14 uses domains\n */\nfunction setNodeAsyncContextStrategy() {\n  if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_0__.NODE_VERSION.major >= 14) {\n    (0,_hooks_js__WEBPACK_IMPORTED_MODULE_1__.setHooksAsyncContextStrategy)();\n  } else {\n    (0,_domain_js__WEBPACK_IMPORTED_MODULE_2__.setDomainAsyncContextStrategy)();\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9hc3luYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlEO0FBQ1c7QUFDRjs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlEQUFZO0FBQ2xCLElBQUksdUVBQTRCO0FBQ2hDLElBQUk7QUFDSixJQUFJLHlFQUE2QjtBQUNqQztBQUNBOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vYXN5bmMvaW5kZXguanM/NjllNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOT0RFX1ZFUlNJT04gfSBmcm9tICcuLi9ub2RlVmVyc2lvbi5qcyc7XG5pbXBvcnQgeyBzZXREb21haW5Bc3luY0NvbnRleHRTdHJhdGVneSB9IGZyb20gJy4vZG9tYWluLmpzJztcbmltcG9ydCB7IHNldEhvb2tzQXN5bmNDb250ZXh0U3RyYXRlZ3kgfSBmcm9tICcuL2hvb2tzLmpzJztcblxuLyoqXG4gKiBTZXRzIHRoZSBjb3JyZWN0IGFzeW5jIGNvbnRleHQgc3RyYXRlZ3kgZm9yIE5vZGUuanNcbiAqXG4gKiBOb2RlLmpzID49IDE0IHVzZXMgQXN5bmNMb2NhbFN0b3JhZ2VcbiAqIE5vZGUuanMgPCAxNCB1c2VzIGRvbWFpbnNcbiAqL1xuZnVuY3Rpb24gc2V0Tm9kZUFzeW5jQ29udGV4dFN0cmF0ZWd5KCkge1xuICBpZiAoTk9ERV9WRVJTSU9OLm1ham9yID49IDE0KSB7XG4gICAgc2V0SG9va3NBc3luY0NvbnRleHRTdHJhdGVneSgpO1xuICB9IGVsc2Uge1xuICAgIHNldERvbWFpbkFzeW5jQ29udGV4dFN0cmF0ZWd5KCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgc2V0Tm9kZUFzeW5jQ29udGV4dFN0cmF0ZWd5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/async/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/client.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/node/esm/client.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeClient: () => (/* binding */ NodeClient)\n/* harmony export */ });\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/server-runtime-client.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/sdkMetadata.js\");\n\n\n\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass NodeClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_2__.ServerRuntimeClient {\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.applySdkMetadata)(options, 'node');\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new util__WEBPACK_IMPORTED_MODULE_1__.TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os__WEBPACK_IMPORTED_MODULE_0__.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF5QjtBQUNVO0FBQ2tDOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNkRBQW1CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDhEQUFnQjs7QUFFcEI7QUFDQTtBQUNBLHVCQUF1Qiw2Q0FBVztBQUNsQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrQ0FBK0M7QUFDaEUsMEVBQTBFLHdDQUFXO0FBQ3JGOztBQUVBO0FBQ0E7QUFDQTs7QUFFc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL2NsaWVudC5qcz9kMGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG9zIGZyb20gJ29zJztcbmltcG9ydCB7IFRleHRFbmNvZGVyIH0gZnJvbSAndXRpbCc7XG5pbXBvcnQgeyBTZXJ2ZXJSdW50aW1lQ2xpZW50LCBhcHBseVNka01ldGFkYXRhIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcblxuLyoqXG4gKiBUaGUgU2VudHJ5IE5vZGUgU0RLIENsaWVudC5cbiAqXG4gKiBAc2VlIE5vZGVDbGllbnRPcHRpb25zIGZvciBkb2N1bWVudGF0aW9uIG9uIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAqIEBzZWUgU2VudHJ5Q2xpZW50IGZvciB1c2FnZSBkb2N1bWVudGF0aW9uLlxuICovXG5jbGFzcyBOb2RlQ2xpZW50IGV4dGVuZHMgU2VydmVyUnVudGltZUNsaWVudCB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IE5vZGUgU0RLIGluc3RhbmNlLlxuICAgKiBAcGFyYW0gb3B0aW9ucyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoaXMgU0RLLlxuICAgKi9cbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBhcHBseVNka01ldGFkYXRhKG9wdGlvbnMsICdub2RlJyk7XG5cbiAgICAvLyBVbnRpbCBub2RlIHN1cHBvcnRzIGdsb2JhbCBUZXh0RW5jb2RlciBpbiBhbGwgdmVyc2lvbnMgd2Ugc3VwcG9ydCwgd2UgYXJlIGZvcmNlZCB0byBwYXNzIGl0IGZyb20gdXRpbFxuICAgIG9wdGlvbnMudHJhbnNwb3J0T3B0aW9ucyA9IHtcbiAgICAgIHRleHRFbmNvZGVyOiBuZXcgVGV4dEVuY29kZXIoKSxcbiAgICAgIC4uLm9wdGlvbnMudHJhbnNwb3J0T3B0aW9ucyxcbiAgICB9O1xuXG4gICAgY29uc3QgY2xpZW50T3B0aW9ucyA9IHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBwbGF0Zm9ybTogJ25vZGUnLFxuICAgICAgcnVudGltZTogeyBuYW1lOiAnbm9kZScsIHZlcnNpb246IGdsb2JhbC5wcm9jZXNzLnZlcnNpb24gfSxcbiAgICAgIHNlcnZlck5hbWU6IG9wdGlvbnMuc2VydmVyTmFtZSB8fCBnbG9iYWwucHJvY2Vzcy5lbnYuU0VOVFJZX05BTUUgfHwgb3MuaG9zdG5hbWUoKSxcbiAgICB9O1xuXG4gICAgc3VwZXIoY2xpZW50T3B0aW9ucyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgTm9kZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/cron/common.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/cron/common.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceCronNames: () => (/* binding */ replaceCronNames)\n/* harmony export */ });\nconst replacements = [\n  ['january', '1'],\n  ['february', '2'],\n  ['march', '3'],\n  ['april', '4'],\n  ['may', '5'],\n  ['june', '6'],\n  ['july', '7'],\n  ['august', '8'],\n  ['september', '9'],\n  ['october', '10'],\n  ['november', '11'],\n  ['december', '12'],\n  ['jan', '1'],\n  ['feb', '2'],\n  ['mar', '3'],\n  ['apr', '4'],\n  ['may', '5'],\n  ['jun', '6'],\n  ['jul', '7'],\n  ['aug', '8'],\n  ['sep', '9'],\n  ['oct', '10'],\n  ['nov', '11'],\n  ['dec', '12'],\n  ['sunday', '0'],\n  ['monday', '1'],\n  ['tuesday', '2'],\n  ['wednesday', '3'],\n  ['thursday', '4'],\n  ['friday', '5'],\n  ['saturday', '6'],\n  ['sun', '0'],\n  ['mon', '1'],\n  ['tue', '2'],\n  ['wed', '3'],\n  ['thu', '4'],\n  ['fri', '5'],\n  ['sat', '6'],\n];\n\n/**\n * Replaces names in cron expressions\n */\nfunction replaceCronNames(cronExpression) {\n  return replacements.reduce(\n    // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n    (acc, [name, replacement]) => acc.replace(new RegExp(name, 'gi'), replacement),\n    cronExpression,\n  );\n}\n\n\n//# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL2NvbW1vbi5qcz8zYmVkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcGxhY2VtZW50cyA9IFtcbiAgWydqYW51YXJ5JywgJzEnXSxcbiAgWydmZWJydWFyeScsICcyJ10sXG4gIFsnbWFyY2gnLCAnMyddLFxuICBbJ2FwcmlsJywgJzQnXSxcbiAgWydtYXknLCAnNSddLFxuICBbJ2p1bmUnLCAnNiddLFxuICBbJ2p1bHknLCAnNyddLFxuICBbJ2F1Z3VzdCcsICc4J10sXG4gIFsnc2VwdGVtYmVyJywgJzknXSxcbiAgWydvY3RvYmVyJywgJzEwJ10sXG4gIFsnbm92ZW1iZXInLCAnMTEnXSxcbiAgWydkZWNlbWJlcicsICcxMiddLFxuICBbJ2phbicsICcxJ10sXG4gIFsnZmViJywgJzInXSxcbiAgWydtYXInLCAnMyddLFxuICBbJ2FwcicsICc0J10sXG4gIFsnbWF5JywgJzUnXSxcbiAgWydqdW4nLCAnNiddLFxuICBbJ2p1bCcsICc3J10sXG4gIFsnYXVnJywgJzgnXSxcbiAgWydzZXAnLCAnOSddLFxuICBbJ29jdCcsICcxMCddLFxuICBbJ25vdicsICcxMSddLFxuICBbJ2RlYycsICcxMiddLFxuICBbJ3N1bmRheScsICcwJ10sXG4gIFsnbW9uZGF5JywgJzEnXSxcbiAgWyd0dWVzZGF5JywgJzInXSxcbiAgWyd3ZWRuZXNkYXknLCAnMyddLFxuICBbJ3RodXJzZGF5JywgJzQnXSxcbiAgWydmcmlkYXknLCAnNSddLFxuICBbJ3NhdHVyZGF5JywgJzYnXSxcbiAgWydzdW4nLCAnMCddLFxuICBbJ21vbicsICcxJ10sXG4gIFsndHVlJywgJzInXSxcbiAgWyd3ZWQnLCAnMyddLFxuICBbJ3RodScsICc0J10sXG4gIFsnZnJpJywgJzUnXSxcbiAgWydzYXQnLCAnNiddLFxuXTtcblxuLyoqXG4gKiBSZXBsYWNlcyBuYW1lcyBpbiBjcm9uIGV4cHJlc3Npb25zXG4gKi9cbmZ1bmN0aW9uIHJlcGxhY2VDcm9uTmFtZXMoY3JvbkV4cHJlc3Npb24pIHtcbiAgcmV0dXJuIHJlcGxhY2VtZW50cy5yZWR1Y2UoXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBzZW50cnktaW50ZXJuYWwvc2RrL25vLXJlZ2V4cC1jb25zdHJ1Y3RvclxuICAgIChhY2MsIFtuYW1lLCByZXBsYWNlbWVudF0pID0+IGFjYy5yZXBsYWNlKG5ldyBSZWdFeHAobmFtZSwgJ2dpJyksIHJlcGxhY2VtZW50KSxcbiAgICBjcm9uRXhwcmVzc2lvbixcbiAgKTtcbn1cblxuZXhwb3J0IHsgcmVwbGFjZUNyb25OYW1lcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/cron/common.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/cron/cron.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/node/esm/cron/cron.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrumentCron: () => (/* binding */ instrumentCron)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/common.js\");\n\n\n\nconst ERROR_TEXT = 'Automatic instrumentation of CronJob only supports crontab string';\n\n/**\n * Instruments the `cron` library to send a check-in event to Sentry for each job execution.\n *\n * ```ts\n * import * as Sentry from '@sentry/node';\n * import { CronJob } from 'cron';\n *\n * const CronJobWithCheckIn = Sentry.cron.instrumentCron(CronJob, 'my-cron-job');\n *\n * // use the constructor\n * const job = new CronJobWithCheckIn('* * * * *', () => {\n *  console.log('You will see this message every minute');\n * });\n *\n * // or from\n * const job = CronJobWithCheckIn.from({ cronTime: '* * * * *', onTick: () => {\n *   console.log('You will see this message every minute');\n * });\n * ```\n */\nfunction instrumentCron(lib, monitorSlug) {\n  let jobScheduled = false;\n\n  return new Proxy(lib, {\n    construct(target, args) {\n      const [cronTime, onTick, onComplete, start, timeZone, ...rest] = args;\n\n      if (typeof cronTime !== 'string') {\n        throw new Error(ERROR_TEXT);\n      }\n\n      if (jobScheduled) {\n        throw new Error(`A job named '${monitorSlug}' has already been scheduled`);\n      }\n\n      jobScheduled = true;\n\n      const cronString = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.replaceCronNames)(cronTime);\n\n      function monitoredTick(context, onComplete) {\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withMonitor)(\n          monitorSlug,\n          () => {\n            return onTick(context, onComplete);\n          },\n          {\n            schedule: { type: 'crontab', value: cronString },\n            timezone: timeZone || undefined,\n          },\n        );\n      }\n\n      return new target(cronTime, monitoredTick, onComplete, start, timeZone, ...rest);\n    },\n    get(target, prop) {\n      if (prop === 'from') {\n        return (param) => {\n          const { cronTime, onTick, timeZone } = param;\n\n          if (typeof cronTime !== 'string') {\n            throw new Error(ERROR_TEXT);\n          }\n\n          if (jobScheduled) {\n            throw new Error(`A job named '${monitorSlug}' has already been scheduled`);\n          }\n\n          jobScheduled = true;\n\n          const cronString = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.replaceCronNames)(cronTime);\n\n          param.onTick = (context, onComplete) => {\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withMonitor)(\n              monitorSlug,\n              () => {\n                return onTick(context, onComplete);\n              },\n              {\n                schedule: { type: 'crontab', value: cronString },\n                timezone: timeZone || undefined,\n              },\n            );\n          };\n\n          return target.from(param);\n        };\n      } else {\n        return target[prop];\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL2Nyb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ0k7O0FBRS9DOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdDQUF3QyxZQUFZO0FBQ3BEOztBQUVBOztBQUVBLHlCQUF5Qiw0REFBZ0I7O0FBRXpDO0FBQ0EsZUFBZSx5REFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSx3QkFBd0Isb0NBQW9DO0FBQzVEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZCQUE2Qjs7QUFFL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNENBQTRDLFlBQVk7QUFDeEQ7O0FBRUE7O0FBRUEsNkJBQTZCLDREQUFnQjs7QUFFN0M7QUFDQSxtQkFBbUIseURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsNEJBQTRCLG9DQUFvQztBQUNoRTtBQUNBLGVBQWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL2Nyb24uanM/NDQyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoTW9uaXRvciB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyByZXBsYWNlQ3Jvbk5hbWVzIH0gZnJvbSAnLi9jb21tb24uanMnO1xuXG5jb25zdCBFUlJPUl9URVhUID0gJ0F1dG9tYXRpYyBpbnN0cnVtZW50YXRpb24gb2YgQ3JvbkpvYiBvbmx5IHN1cHBvcnRzIGNyb250YWIgc3RyaW5nJztcblxuLyoqXG4gKiBJbnN0cnVtZW50cyB0aGUgYGNyb25gIGxpYnJhcnkgdG8gc2VuZCBhIGNoZWNrLWluIGV2ZW50IHRvIFNlbnRyeSBmb3IgZWFjaCBqb2IgZXhlY3V0aW9uLlxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgKiBhcyBTZW50cnkgZnJvbSAnQHNlbnRyeS9ub2RlJztcbiAqIGltcG9ydCB7IENyb25Kb2IgfSBmcm9tICdjcm9uJztcbiAqXG4gKiBjb25zdCBDcm9uSm9iV2l0aENoZWNrSW4gPSBTZW50cnkuY3Jvbi5pbnN0cnVtZW50Q3JvbihDcm9uSm9iLCAnbXktY3Jvbi1qb2InKTtcbiAqXG4gKiAvLyB1c2UgdGhlIGNvbnN0cnVjdG9yXG4gKiBjb25zdCBqb2IgPSBuZXcgQ3JvbkpvYldpdGhDaGVja0luKCcqICogKiAqIConLCAoKSA9PiB7XG4gKiAgY29uc29sZS5sb2coJ1lvdSB3aWxsIHNlZSB0aGlzIG1lc3NhZ2UgZXZlcnkgbWludXRlJyk7XG4gKiB9KTtcbiAqXG4gKiAvLyBvciBmcm9tXG4gKiBjb25zdCBqb2IgPSBDcm9uSm9iV2l0aENoZWNrSW4uZnJvbSh7IGNyb25UaW1lOiAnKiAqICogKiAqJywgb25UaWNrOiAoKSA9PiB7XG4gKiAgIGNvbnNvbGUubG9nKCdZb3Ugd2lsbCBzZWUgdGhpcyBtZXNzYWdlIGV2ZXJ5IG1pbnV0ZScpO1xuICogfSk7XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gaW5zdHJ1bWVudENyb24obGliLCBtb25pdG9yU2x1Zykge1xuICBsZXQgam9iU2NoZWR1bGVkID0gZmFsc2U7XG5cbiAgcmV0dXJuIG5ldyBQcm94eShsaWIsIHtcbiAgICBjb25zdHJ1Y3QodGFyZ2V0LCBhcmdzKSB7XG4gICAgICBjb25zdCBbY3JvblRpbWUsIG9uVGljaywgb25Db21wbGV0ZSwgc3RhcnQsIHRpbWVab25lLCAuLi5yZXN0XSA9IGFyZ3M7XG5cbiAgICAgIGlmICh0eXBlb2YgY3JvblRpbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihFUlJPUl9URVhUKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGpvYlNjaGVkdWxlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEEgam9iIG5hbWVkICcke21vbml0b3JTbHVnfScgaGFzIGFscmVhZHkgYmVlbiBzY2hlZHVsZWRgKTtcbiAgICAgIH1cblxuICAgICAgam9iU2NoZWR1bGVkID0gdHJ1ZTtcblxuICAgICAgY29uc3QgY3JvblN0cmluZyA9IHJlcGxhY2VDcm9uTmFtZXMoY3JvblRpbWUpO1xuXG4gICAgICBmdW5jdGlvbiBtb25pdG9yZWRUaWNrKGNvbnRleHQsIG9uQ29tcGxldGUpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhNb25pdG9yKFxuICAgICAgICAgIG1vbml0b3JTbHVnLFxuICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBvblRpY2soY29udGV4dCwgb25Db21wbGV0ZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzY2hlZHVsZTogeyB0eXBlOiAnY3JvbnRhYicsIHZhbHVlOiBjcm9uU3RyaW5nIH0sXG4gICAgICAgICAgICB0aW1lem9uZTogdGltZVpvbmUgfHwgdW5kZWZpbmVkLFxuICAgICAgICAgIH0sXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuZXcgdGFyZ2V0KGNyb25UaW1lLCBtb25pdG9yZWRUaWNrLCBvbkNvbXBsZXRlLCBzdGFydCwgdGltZVpvbmUsIC4uLnJlc3QpO1xuICAgIH0sXG4gICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgaWYgKHByb3AgPT09ICdmcm9tJykge1xuICAgICAgICByZXR1cm4gKHBhcmFtKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBjcm9uVGltZSwgb25UaWNrLCB0aW1lWm9uZSB9ID0gcGFyYW07XG5cbiAgICAgICAgICBpZiAodHlwZW9mIGNyb25UaW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKEVSUk9SX1RFWFQpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChqb2JTY2hlZHVsZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQSBqb2IgbmFtZWQgJyR7bW9uaXRvclNsdWd9JyBoYXMgYWxyZWFkeSBiZWVuIHNjaGVkdWxlZGApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGpvYlNjaGVkdWxlZCA9IHRydWU7XG5cbiAgICAgICAgICBjb25zdCBjcm9uU3RyaW5nID0gcmVwbGFjZUNyb25OYW1lcyhjcm9uVGltZSk7XG5cbiAgICAgICAgICBwYXJhbS5vblRpY2sgPSAoY29udGV4dCwgb25Db21wbGV0ZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHdpdGhNb25pdG9yKFxuICAgICAgICAgICAgICBtb25pdG9yU2x1ZyxcbiAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBvblRpY2soY29udGV4dCwgb25Db21wbGV0ZSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlZHVsZTogeyB0eXBlOiAnY3JvbnRhYicsIHZhbHVlOiBjcm9uU3RyaW5nIH0sXG4gICAgICAgICAgICAgICAgdGltZXpvbmU6IHRpbWVab25lIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHJldHVybiB0YXJnZXQuZnJvbShwYXJhbSk7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyBpbnN0cnVtZW50Q3JvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3Jvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/cron/cron.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/cron/node-cron.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/node/esm/cron/node-cron.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrumentNodeCron: () => (/* binding */ instrumentNodeCron)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/common.js\");\n\n\n\n\n/**\n * Wraps the `node-cron` library with check-in monitoring.\n *\n * ```ts\n * import * as Sentry from \"@sentry/node\";\n * import cron from \"node-cron\";\n *\n * const cronWithCheckIn = Sentry.cron.instrumentNodeCron(cron);\n *\n * cronWithCheckIn.schedule(\n *   \"* * * * *\",\n *   () => {\n *     console.log(\"running a task every minute\");\n *   },\n *   { name: \"my-cron-job\" },\n * );\n * ```\n */\nfunction instrumentNodeCron(lib) {\n  return new Proxy(lib, {\n    get(target, prop) {\n      if (prop === 'schedule' && target.schedule) {\n        // When 'get' is called for schedule, return a proxied version of the schedule function\n        return new Proxy(target.schedule, {\n          apply(target, thisArg, argArray) {\n            const [expression, , options] = argArray;\n\n            if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([options, 'optionalAccess', _ => _.name])) {\n              throw new Error('Missing \"name\" for scheduled job. A name is required for Sentry check-in monitoring.');\n            }\n\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withMonitor)(\n              options.name,\n              () => {\n                return target.apply(thisArg, argArray);\n              },\n              {\n                schedule: { type: 'crontab', value: (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.replaceCronNames)(expression) },\n                timezone: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([options, 'optionalAccess', _2 => _2.timezone]),\n              },\n            );\n          },\n        });\n      } else {\n        return target[prop];\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=node-cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL25vZGUtY3Jvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStDO0FBQ0o7QUFDSTs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sT0FBTyxxQkFBcUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsNkRBQWM7QUFDL0I7QUFDQTs7QUFFQSxtQkFBbUIseURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsNEJBQTRCLHdCQUF3Qiw0REFBZ0IsY0FBYztBQUNsRiwwQkFBMEIsNkRBQWM7QUFDeEMsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVCxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL25vZGUtY3Jvbi5qcz80MjhhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyB3aXRoTW9uaXRvciB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyByZXBsYWNlQ3Jvbk5hbWVzIH0gZnJvbSAnLi9jb21tb24uanMnO1xuXG4vKipcbiAqIFdyYXBzIHRoZSBgbm9kZS1jcm9uYCBsaWJyYXJ5IHdpdGggY2hlY2staW4gbW9uaXRvcmluZy5cbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gXCJAc2VudHJ5L25vZGVcIjtcbiAqIGltcG9ydCBjcm9uIGZyb20gXCJub2RlLWNyb25cIjtcbiAqXG4gKiBjb25zdCBjcm9uV2l0aENoZWNrSW4gPSBTZW50cnkuY3Jvbi5pbnN0cnVtZW50Tm9kZUNyb24oY3Jvbik7XG4gKlxuICogY3JvbldpdGhDaGVja0luLnNjaGVkdWxlKFxuICogICBcIiogKiAqICogKlwiLFxuICogICAoKSA9PiB7XG4gKiAgICAgY29uc29sZS5sb2coXCJydW5uaW5nIGEgdGFzayBldmVyeSBtaW51dGVcIik7XG4gKiAgIH0sXG4gKiAgIHsgbmFtZTogXCJteS1jcm9uLWpvYlwiIH0sXG4gKiApO1xuICogYGBgXG4gKi9cbmZ1bmN0aW9uIGluc3RydW1lbnROb2RlQ3JvbihsaWIpIHtcbiAgcmV0dXJuIG5ldyBQcm94eShsaWIsIHtcbiAgICBnZXQodGFyZ2V0LCBwcm9wKSB7XG4gICAgICBpZiAocHJvcCA9PT0gJ3NjaGVkdWxlJyAmJiB0YXJnZXQuc2NoZWR1bGUpIHtcbiAgICAgICAgLy8gV2hlbiAnZ2V0JyBpcyBjYWxsZWQgZm9yIHNjaGVkdWxlLCByZXR1cm4gYSBwcm94aWVkIHZlcnNpb24gb2YgdGhlIHNjaGVkdWxlIGZ1bmN0aW9uXG4gICAgICAgIHJldHVybiBuZXcgUHJveHkodGFyZ2V0LnNjaGVkdWxlLCB7XG4gICAgICAgICAgYXBwbHkodGFyZ2V0LCB0aGlzQXJnLCBhcmdBcnJheSkge1xuICAgICAgICAgICAgY29uc3QgW2V4cHJlc3Npb24sICwgb3B0aW9uc10gPSBhcmdBcnJheTtcblxuICAgICAgICAgICAgaWYgKCFfb3B0aW9uYWxDaGFpbihbb3B0aW9ucywgJ29wdGlvbmFsQWNjZXNzJywgXyA9PiBfLm5hbWVdKSkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgXCJuYW1lXCIgZm9yIHNjaGVkdWxlZCBqb2IuIEEgbmFtZSBpcyByZXF1aXJlZCBmb3IgU2VudHJ5IGNoZWNrLWluIG1vbml0b3JpbmcuJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB3aXRoTW9uaXRvcihcbiAgICAgICAgICAgICAgb3B0aW9ucy5uYW1lLFxuICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdBcnJheSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlZHVsZTogeyB0eXBlOiAnY3JvbnRhYicsIHZhbHVlOiByZXBsYWNlQ3Jvbk5hbWVzKGV4cHJlc3Npb24pIH0sXG4gICAgICAgICAgICAgICAgdGltZXpvbmU6IF9vcHRpb25hbENoYWluKFtvcHRpb25zLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi50aW1lem9uZV0pLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0YXJnZXRbcHJvcF07XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGluc3RydW1lbnROb2RlQ3JvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1jcm9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/cron/node-cron.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/cron/node-schedule.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/cron/node-schedule.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrumentNodeSchedule: () => (/* binding */ instrumentNodeSchedule)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/common.js\");\n\n\n\n/**\n * Instruments the `node-schedule` library to send a check-in event to Sentry for each job execution.\n *\n * ```ts\n * import * as Sentry from '@sentry/node';\n * import * as schedule from 'node-schedule';\n *\n * const scheduleWithCheckIn = Sentry.cron.instrumentNodeSchedule(schedule);\n *\n * const job = scheduleWithCheckIn.scheduleJob('my-cron-job', '* * * * *', () => {\n *  console.log('You will see this message every minute');\n * });\n * ```\n */\nfunction instrumentNodeSchedule(lib) {\n  return new Proxy(lib, {\n    get(target, prop) {\n      if (prop === 'scheduleJob') {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return new Proxy(target.scheduleJob, {\n          apply(target, thisArg, argArray) {\n            const [nameOrExpression, expressionOrCallback] = argArray;\n\n            if (typeof nameOrExpression !== 'string' || typeof expressionOrCallback !== 'string') {\n              throw new Error(\n                \"Automatic instrumentation of 'node-schedule' requires the first parameter of 'scheduleJob' to be a job name string and the second parameter to be a crontab string\",\n              );\n            }\n\n            const monitorSlug = nameOrExpression;\n            const expression = expressionOrCallback;\n\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withMonitor)(\n              monitorSlug,\n              () => {\n                return target.apply(thisArg, argArray);\n              },\n              {\n                schedule: { type: 'crontab', value: (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.replaceCronNames)(expression) },\n              },\n            );\n          },\n        });\n      }\n\n      return target[prop];\n    },\n  });\n}\n\n\n//# sourceMappingURL=node-schedule.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9jcm9uL25vZGUtc2NoZWR1bGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ0k7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1CQUFtQix5REFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSw0QkFBNEIsd0JBQXdCLDREQUFnQixjQUFjO0FBQ2xGLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vY3Jvbi9ub2RlLXNjaGVkdWxlLmpzPzNlMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2l0aE1vbml0b3IgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgcmVwbGFjZUNyb25OYW1lcyB9IGZyb20gJy4vY29tbW9uLmpzJztcblxuLyoqXG4gKiBJbnN0cnVtZW50cyB0aGUgYG5vZGUtc2NoZWR1bGVgIGxpYnJhcnkgdG8gc2VuZCBhIGNoZWNrLWluIGV2ZW50IHRvIFNlbnRyeSBmb3IgZWFjaCBqb2IgZXhlY3V0aW9uLlxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgKiBhcyBTZW50cnkgZnJvbSAnQHNlbnRyeS9ub2RlJztcbiAqIGltcG9ydCAqIGFzIHNjaGVkdWxlIGZyb20gJ25vZGUtc2NoZWR1bGUnO1xuICpcbiAqIGNvbnN0IHNjaGVkdWxlV2l0aENoZWNrSW4gPSBTZW50cnkuY3Jvbi5pbnN0cnVtZW50Tm9kZVNjaGVkdWxlKHNjaGVkdWxlKTtcbiAqXG4gKiBjb25zdCBqb2IgPSBzY2hlZHVsZVdpdGhDaGVja0luLnNjaGVkdWxlSm9iKCdteS1jcm9uLWpvYicsICcqICogKiAqIConLCAoKSA9PiB7XG4gKiAgY29uc29sZS5sb2coJ1lvdSB3aWxsIHNlZSB0aGlzIG1lc3NhZ2UgZXZlcnkgbWludXRlJyk7XG4gKiB9KTtcbiAqIGBgYFxuICovXG5mdW5jdGlvbiBpbnN0cnVtZW50Tm9kZVNjaGVkdWxlKGxpYikge1xuICByZXR1cm4gbmV3IFByb3h5KGxpYiwge1xuICAgIGdldCh0YXJnZXQsIHByb3ApIHtcbiAgICAgIGlmIChwcm9wID09PSAnc2NoZWR1bGVKb2InKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eSh0YXJnZXQuc2NoZWR1bGVKb2IsIHtcbiAgICAgICAgICBhcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ0FycmF5KSB7XG4gICAgICAgICAgICBjb25zdCBbbmFtZU9yRXhwcmVzc2lvbiwgZXhwcmVzc2lvbk9yQ2FsbGJhY2tdID0gYXJnQXJyYXk7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmFtZU9yRXhwcmVzc2lvbiAhPT0gJ3N0cmluZycgfHwgdHlwZW9mIGV4cHJlc3Npb25PckNhbGxiYWNrICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgXCJBdXRvbWF0aWMgaW5zdHJ1bWVudGF0aW9uIG9mICdub2RlLXNjaGVkdWxlJyByZXF1aXJlcyB0aGUgZmlyc3QgcGFyYW1ldGVyIG9mICdzY2hlZHVsZUpvYicgdG8gYmUgYSBqb2IgbmFtZSBzdHJpbmcgYW5kIHRoZSBzZWNvbmQgcGFyYW1ldGVyIHRvIGJlIGEgY3JvbnRhYiBzdHJpbmdcIixcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgbW9uaXRvclNsdWcgPSBuYW1lT3JFeHByZXNzaW9uO1xuICAgICAgICAgICAgY29uc3QgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb25PckNhbGxiYWNrO1xuXG4gICAgICAgICAgICByZXR1cm4gd2l0aE1vbml0b3IoXG4gICAgICAgICAgICAgIG1vbml0b3JTbHVnLFxuICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdBcnJheSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlZHVsZTogeyB0eXBlOiAnY3JvbnRhYicsIHZhbHVlOiByZXBsYWNlQ3Jvbk5hbWVzKGV4cHJlc3Npb24pIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyBpbnN0cnVtZW50Tm9kZVNjaGVkdWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXNjaGVkdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/cron/node-schedule.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/debug-build.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/debug-build.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9kZWJ1Zy1idWlsZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vZGVidWctYnVpbGQuanM/ZDJhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnQgeyBERUJVR19CVUlMRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/handlers.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/node/esm/handlers.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorHandler: () => (/* binding */ errorHandler),\n/* harmony export */   extractRequestData: () => (/* reexport safe */ _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__.extractRequestData),\n/* harmony export */   parseRequest: () => (/* reexport safe */ _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__.parseRequest),\n/* harmony export */   requestHandler: () => (/* binding */ requestHandler),\n/* harmony export */   tracingHandler: () => (/* binding */ tracingHandler),\n/* harmony export */   trpcMiddleware: () => (/* binding */ trpcMiddleware)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/node/esm/debug-build.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sdk.js */ \"(rsc)/./node_modules/@sentry/node/esm/sdk.js\");\n/* harmony import */ var _trpc_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./trpc.js */ \"(rsc)/./node_modules/@sentry/node/esm/trpc.js\");\n/* harmony import */ var _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestDataDeprecated.js */ \"(rsc)/./node_modules/@sentry/node/esm/requestDataDeprecated.js\");\n\n\n\n\n\n\n\n\n/**\n * Express-compatible tracing handler.\n * @see Exposed as `Handlers.tracingHandler`\n */\nfunction tracingHandler()\n\n {\n  return function sentryTracingMiddleware(\n    req,\n    res,\n    next,\n  ) {\n    const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n\n    if (\n      !options ||\n      options.instrumenter !== 'sentry' ||\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([req, 'access', _4 => _4.method, 'optionalAccess', _5 => _5.toUpperCase, 'call', _6 => _6()]) === 'OPTIONS' ||\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([req, 'access', _7 => _7.method, 'optionalAccess', _8 => _8.toUpperCase, 'call', _9 => _9()]) === 'HEAD'\n    ) {\n      return next();\n    }\n\n    const sentryTrace = req.headers && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isString)(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined;\n    const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([req, 'access', _10 => _10.headers, 'optionalAccess', _11 => _11.baggage]);\n    if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.hasTracingEnabled)(options)) {\n      return next();\n    }\n\n    const [name, source] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractPathForTransaction)(req, { path: true, method: true });\n    const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.continueTrace)({ sentryTrace, baggage }, ctx =>\n      // TODO: Refactor this to use `startSpan()`\n      // eslint-disable-next-line deprecation/deprecation\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.startTransaction)(\n        {\n          name,\n          op: 'http.server',\n          origin: 'auto.http.node.tracingHandler',\n          ...ctx,\n          data: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_7__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          },\n          metadata: {\n            // eslint-disable-next-line deprecation/deprecation\n            ...ctx.metadata,\n            // The request should already have been stored in `scope.sdkProcessingMetadata` (which will become\n            // `event.sdkProcessingMetadata` the same way the metadata here will) by `sentryRequestMiddleware`, but on the\n            // off chance someone is using `sentryTracingMiddleware` without `sentryRequestMiddleware`, it doesn't hurt to\n            // be sure\n            request: req,\n          },\n        },\n        // extra context passed to the tracesSampler\n        { request: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractRequestData)(req) },\n      ),\n    );\n\n    // We put the transaction on the scope so users can attach children to it\n    // eslint-disable-next-line deprecation/deprecation\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)().setSpan(transaction);\n\n    // We also set __sentry_transaction on the response so people can grab the transaction there to add\n    // spans to it later.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (res ).__sentry_transaction = transaction;\n\n    res.once('finish', () => {\n      // Push `transaction.finish` to the next event loop so open spans have a chance to finish before the transaction\n      // closes\n      setImmediate(() => {\n        // eslint-disable-next-line deprecation/deprecation\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.addRequestDataToTransaction)(transaction, req);\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.setHttpStatus)(transaction, res.statusCode);\n        transaction.end();\n      });\n    });\n\n    next();\n  };\n}\n\n/**\n * Backwards compatibility shim which can be removed in v8. Forces the given options to follow the\n * `AddRequestDataToEventOptions` interface.\n *\n * TODO (v8): Get rid of this, and stop passing `requestDataOptionsFromExpressHandler` to `setSDKProcessingMetadata`.\n */\nfunction convertReqHandlerOptsToAddReqDataOpts(\n  reqHandlerOptions = {},\n) {\n  let addRequestDataOptions;\n\n  if ('include' in reqHandlerOptions) {\n    addRequestDataOptions = { include: reqHandlerOptions.include };\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ip, request, transaction, user } = reqHandlerOptions ;\n\n    if (ip || request || transaction || user) {\n      addRequestDataOptions = { include: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.dropUndefinedKeys)({ ip, request, transaction, user }) };\n    }\n  }\n\n  return addRequestDataOptions;\n}\n\n/**\n * Express compatible request handler.\n * @see Exposed as `Handlers.requestHandler`\n */\nfunction requestHandler(\n  options,\n) {\n  // TODO (v8): Get rid of this\n  const requestDataOptions = convertReqHandlerOptsToAddReqDataOpts(options);\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  // Initialise an instance of SessionFlusher on the client when `autoSessionTracking` is enabled and the\n  // `requestHandler` middleware is used indicating that we are running in SessionAggregates mode\n  if (client && (0,_sdk_js__WEBPACK_IMPORTED_MODULE_10__.isAutoSessionTrackingEnabled)(client)) {\n    client.initSessionFlusher();\n\n    // If Scope contains a Single mode Session, it is removed in favor of using Session Aggregates mode\n    const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n    if (scope.getSession()) {\n      scope.setSession();\n    }\n  }\n\n  return function sentryRequestMiddleware(\n    req,\n    res,\n    next,\n  ) {\n    if (options && options.flushTimeout && options.flushTimeout > 0) {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _end = res.end;\n      res.end = function (chunk, encoding, cb) {\n        void (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.flush)(options.flushTimeout)\n          .then(() => {\n            _end.call(this, chunk, encoding, cb);\n          })\n          .then(null, e => {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_11__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.logger.error(e);\n            _end.call(this, chunk, encoding, cb);\n          });\n      };\n    }\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.runWithAsyncContext)(() => {\n      const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n      scope.setSDKProcessingMetadata({\n        request: req,\n        // TODO (v8): Stop passing this\n        requestDataOptionsFromExpressHandler: requestDataOptions,\n      });\n\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n      if ((0,_sdk_js__WEBPACK_IMPORTED_MODULE_10__.isAutoSessionTrackingEnabled)(client)) {\n        // Set `status` of `RequestSession` to Ok, at the beginning of the request\n        scope.setRequestSession({ status: 'ok' });\n      }\n\n      res.once('finish', () => {\n        const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n        if ((0,_sdk_js__WEBPACK_IMPORTED_MODULE_10__.isAutoSessionTrackingEnabled)(client)) {\n          setImmediate(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (client && (client )._captureRequestSession) {\n              // Calling _captureRequestSession to capture request session at the end of the request by incrementing\n              // the correct SessionAggregates bucket i.e. crashed, errored or exited\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n              (client )._captureRequestSession();\n            }\n          });\n        }\n      });\n      next();\n    });\n  };\n}\n\n/** JSDoc */\n\n/** JSDoc */\nfunction getStatusCodeFromResponse(error) {\n  const statusCode = error.status || error.statusCode || error.status_code || (error.output && error.output.statusCode);\n  return statusCode ? parseInt(statusCode , 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error) {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n\n/**\n * Express compatible error handler.\n * @see Exposed as `Handlers.errorHandler`\n */\nfunction errorHandler(options\n\n)\n\n {\n  return function sentryErrorMiddleware(\n    error,\n    _req,\n    res,\n    next,\n  ) {\n    const shouldHandleError = (options && options.shouldHandleError) || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withScope)(_scope => {\n        // The request should already have been stored in `scope.sdkProcessingMetadata` by `sentryRequestMiddleware`,\n        // but on the off chance someone is using `sentryErrorMiddleware` without `sentryRequestMiddleware`, it doesn't\n        // hurt to be sure\n        _scope.setSDKProcessingMetadata({ request: _req });\n\n        // For some reason we need to set the transaction on the scope again\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const transaction = (res ).__sentry_transaction ;\n        if (transaction && !(0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getActiveSpan)()) {\n          // eslint-disable-next-line deprecation/deprecation\n          _scope.setSpan(transaction);\n        }\n\n        const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n        if (client && (0,_sdk_js__WEBPACK_IMPORTED_MODULE_10__.isAutoSessionTrackingEnabled)(client)) {\n          // Check if the `SessionFlusher` is instantiated on the client to go into this branch that marks the\n          // `requestSession.status` as `Crashed`, and this check is necessary because the `SessionFlusher` is only\n          // instantiated when the the`requestHandler` middleware is initialised, which indicates that we should be\n          // running in SessionAggregates mode\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          const isSessionAggregatesMode = (client )._sessionFlusher !== undefined;\n          if (isSessionAggregatesMode) {\n            const requestSession = _scope.getRequestSession();\n            // If an error bubbles to the `errorHandler`, then this is an unhandled error, and should be reported as a\n            // Crashed session. The `_requestSession.status` is checked to ensure that this error is happening within\n            // the bounds of a request, and if so the status is updated\n            if (requestSession && requestSession.status !== undefined) {\n              requestSession.status = 'crashed';\n            }\n          }\n        }\n\n        const eventId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(error, { mechanism: { type: 'middleware', handled: false } });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (res ).sentry = eventId;\n        next(error);\n      });\n\n      return;\n    }\n\n    next(error);\n  };\n}\n\n/**\n * Sentry tRPC middleware that names the handling transaction after the called procedure.\n *\n * Use the Sentry tRPC middleware in combination with the Sentry server integration,\n * e.g. Express Request Handlers or Next.js SDK.\n *\n * @deprecated Please use the top level export instead:\n * ```\n * // OLD\n * import * as Sentry from '@sentry/node';\n * Sentry.Handlers.trpcMiddleware();\n *\n * // NEW\n * import * as Sentry from '@sentry/node';\n * Sentry.trpcMiddleware();\n * ```\n */\n// eslint-disable-next-line deprecation/deprecation\nconst trpcMiddleware = _trpc_js__WEBPACK_IMPORTED_MODULE_14__.trpcMiddleware;\n\n\n//# sourceMappingURL=handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/handlers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/node/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_USER_INCLUDES: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.DEFAULT_USER_INCLUDES),\n/* harmony export */   Handlers: () => (/* reexport module object */ _handlers_js__WEBPACK_IMPORTED_MODULE_28__),\n/* harmony export */   Http: () => (/* reexport safe */ _integrations_http_js__WEBPACK_IMPORTED_MODULE_48__.Http),\n/* harmony export */   Hub: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Hub),\n/* harmony export */   Integrations: () => (/* binding */ Integrations),\n/* harmony export */   NodeClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_21__.NodeClient),\n/* harmony export */   SDK_VERSION: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_OP: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE),\n/* harmony export */   SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE),\n/* harmony export */   Scope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.Scope),\n/* harmony export */   Undici: () => (/* reexport safe */ _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_47__.Undici),\n/* harmony export */   addBreadcrumb: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.addBreadcrumb),\n/* harmony export */   addEventProcessor: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_5__.addEventProcessor),\n/* harmony export */   addGlobalEventProcessor: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.addGlobalEventProcessor),\n/* harmony export */   addIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_7__.addIntegration),\n/* harmony export */   addRequestDataToEvent: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.addRequestDataToEvent),\n/* harmony export */   anrIntegration: () => (/* reexport safe */ _integrations_anr_index_js__WEBPACK_IMPORTED_MODULE_45__.anrIntegration),\n/* harmony export */   autoDiscoverNodePerformanceMonitoringIntegrations: () => (/* reexport safe */ _tracing_index_js__WEBPACK_IMPORTED_MODULE_20__.autoDiscoverNodePerformanceMonitoringIntegrations),\n/* harmony export */   captureCheckIn: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.captureCheckIn),\n/* harmony export */   captureConsoleIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_29__.captureConsoleIntegration),\n/* harmony export */   captureEvent: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.captureEvent),\n/* harmony export */   captureException: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.captureException),\n/* harmony export */   captureMessage: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.captureMessage),\n/* harmony export */   captureSession: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.captureSession),\n/* harmony export */   close: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.close),\n/* harmony export */   configureScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.configureScope),\n/* harmony export */   consoleIntegration: () => (/* reexport safe */ _integrations_console_js__WEBPACK_IMPORTED_MODULE_37__.consoleIntegration),\n/* harmony export */   contextLinesIntegration: () => (/* reexport safe */ _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_41__.contextLinesIntegration),\n/* harmony export */   continueTrace: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.continueTrace),\n/* harmony export */   createGetModuleFromFilename: () => (/* reexport safe */ _module_js__WEBPACK_IMPORTED_MODULE_26__.createGetModuleFromFilename),\n/* harmony export */   createTransport: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_9__.createTransport),\n/* harmony export */   cron: () => (/* binding */ cron),\n/* harmony export */   debugIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_30__.debugIntegration),\n/* harmony export */   dedupeIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_31__.dedupeIntegration),\n/* harmony export */   deepReadDirSync: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_25__.deepReadDirSync),\n/* harmony export */   defaultIntegrations: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_23__.defaultIntegrations),\n/* harmony export */   defaultStackParser: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_23__.defaultStackParser),\n/* harmony export */   enableAnrDetection: () => (/* reexport safe */ _integrations_anr_legacy_js__WEBPACK_IMPORTED_MODULE_27__.enableAnrDetection),\n/* harmony export */   endSession: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.endSession),\n/* harmony export */   extraErrorDataIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_32__.extraErrorDataIntegration),\n/* harmony export */   extractRequestData: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.extractRequestData),\n/* harmony export */   extractTraceparentData: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_10__.extractTraceparentData),\n/* harmony export */   flush: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.flush),\n/* harmony export */   functionToStringIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_11__.functionToStringIntegration),\n/* harmony export */   getActiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.getActiveSpan),\n/* harmony export */   getActiveTransaction: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_10__.getActiveTransaction),\n/* harmony export */   getClient: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient),\n/* harmony export */   getCurrentHub: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub),\n/* harmony export */   getCurrentScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.getCurrentScope),\n/* harmony export */   getDefaultIntegrations: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_23__.getDefaultIntegrations),\n/* harmony export */   getGlobalScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.getGlobalScope),\n/* harmony export */   getHubFromCarrier: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getHubFromCarrier),\n/* harmony export */   getIsolationScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope),\n/* harmony export */   getModuleFromFilename: () => (/* binding */ getModuleFromFilename),\n/* harmony export */   getSentryRelease: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_23__.getSentryRelease),\n/* harmony export */   getSpanStatusFromHttpCode: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_12__.getSpanStatusFromHttpCode),\n/* harmony export */   hapiErrorPlugin: () => (/* reexport safe */ _integrations_hapi_index_js__WEBPACK_IMPORTED_MODULE_46__.hapiErrorPlugin),\n/* harmony export */   hapiIntegration: () => (/* reexport safe */ _integrations_hapi_index_js__WEBPACK_IMPORTED_MODULE_46__.hapiIntegration),\n/* harmony export */   httpClientIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_33__.httpClientIntegration),\n/* harmony export */   httpIntegration: () => (/* reexport safe */ _integrations_http_js__WEBPACK_IMPORTED_MODULE_48__.httpIntegration),\n/* harmony export */   inboundFiltersIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_13__.inboundFiltersIntegration),\n/* harmony export */   init: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_23__.init),\n/* harmony export */   isInitialized: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.isInitialized),\n/* harmony export */   lastEventId: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.lastEventId),\n/* harmony export */   linkedErrorsIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_14__.linkedErrorsIntegration),\n/* harmony export */   localVariablesIntegration: () => (/* reexport safe */ _integrations_local_variables_index_js__WEBPACK_IMPORTED_MODULE_43__.localVariablesIntegration),\n/* harmony export */   makeMain: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.makeMain),\n/* harmony export */   makeNodeTransport: () => (/* reexport safe */ _transports_http_js__WEBPACK_IMPORTED_MODULE_22__.makeNodeTransport),\n/* harmony export */   metrics: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_15__.metrics),\n/* harmony export */   modulesIntegration: () => (/* reexport safe */ _integrations_modules_js__WEBPACK_IMPORTED_MODULE_40__.modulesIntegration),\n/* harmony export */   nativeNodeFetchintegration: () => (/* reexport safe */ _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_47__.nativeNodeFetchintegration),\n/* harmony export */   nodeContextIntegration: () => (/* reexport safe */ _integrations_context_js__WEBPACK_IMPORTED_MODULE_42__.nodeContextIntegration),\n/* harmony export */   onUncaughtExceptionIntegration: () => (/* reexport safe */ _integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_38__.onUncaughtExceptionIntegration),\n/* harmony export */   onUnhandledRejectionIntegration: () => (/* reexport safe */ _integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_39__.onUnhandledRejectionIntegration),\n/* harmony export */   parameterize: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_16__.parameterize),\n/* harmony export */   reportingObserverIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_34__.reportingObserverIntegration),\n/* harmony export */   requestDataIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_17__.requestDataIntegration),\n/* harmony export */   rewriteFramesIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_35__.rewriteFramesIntegration),\n/* harmony export */   runWithAsyncContext: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext),\n/* harmony export */   sessionTimingIntegration: () => (/* reexport safe */ _sentry_integrations__WEBPACK_IMPORTED_MODULE_36__.sessionTimingIntegration),\n/* harmony export */   setContext: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setContext),\n/* harmony export */   setCurrentClient: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_18__.setCurrentClient),\n/* harmony export */   setExtra: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setExtra),\n/* harmony export */   setExtras: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setExtras),\n/* harmony export */   setHttpStatus: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_12__.setHttpStatus),\n/* harmony export */   setMeasurement: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_19__.setMeasurement),\n/* harmony export */   setTag: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setTag),\n/* harmony export */   setTags: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setTags),\n/* harmony export */   setUser: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.setUser),\n/* harmony export */   spanStatusfromHttpCode: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_12__.spanStatusfromHttpCode),\n/* harmony export */   spotlightIntegration: () => (/* reexport safe */ _integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_44__.spotlightIntegration),\n/* harmony export */   startActiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.startActiveSpan),\n/* harmony export */   startInactiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.startInactiveSpan),\n/* harmony export */   startSession: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.startSession),\n/* harmony export */   startSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.startSpan),\n/* harmony export */   startSpanManual: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.startSpanManual),\n/* harmony export */   startTransaction: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.startTransaction),\n/* harmony export */   trace: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.trace),\n/* harmony export */   trpcMiddleware: () => (/* reexport safe */ _trpc_js__WEBPACK_IMPORTED_MODULE_49__.trpcMiddleware),\n/* harmony export */   withActiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.withActiveSpan),\n/* harmony export */   withIsolationScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.withIsolationScope),\n/* harmony export */   withMonitor: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.withMonitor),\n/* harmony export */   withScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.withScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/metrics/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/parameterize.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/measurement.js\");\n/* harmony import */ var _tracing_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./tracing/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/tracing/index.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./client.js */ \"(rsc)/./node_modules/@sentry/node/esm/client.js\");\n/* harmony import */ var _transports_http_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./transports/http.js */ \"(rsc)/./node_modules/@sentry/node/esm/transports/http.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sdk.js */ \"(rsc)/./node_modules/@sentry/node/esm/sdk.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@sentry/node/esm/utils.js\");\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./module.js */ \"(rsc)/./node_modules/@sentry/node/esm/module.js\");\n/* harmony import */ var _integrations_anr_legacy_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./integrations/anr/legacy.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/anr/legacy.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./handlers.js */ \"(rsc)/./node_modules/@sentry/node/esm/handlers.js\");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./integrations/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/index.js\");\n/* harmony import */ var _tracing_integrations_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./tracing/integrations.js */ \"(rsc)/./node_modules/@sentry/node/esm/tracing/integrations.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/captureconsole.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/debug.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/dedupe.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/extraerrordata.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/httpclient.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/reportingobserver.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/rewriteframes.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @sentry/integrations */ \"(rsc)/./node_modules/@sentry/integrations/esm/sessiontiming.js\");\n/* harmony import */ var _integrations_console_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./integrations/console.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/console.js\");\n/* harmony import */ var _integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./integrations/onuncaughtexception.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js\");\n/* harmony import */ var _integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./integrations/onunhandledrejection.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js\");\n/* harmony import */ var _integrations_modules_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./integrations/modules.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/modules.js\");\n/* harmony import */ var _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./integrations/contextlines.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/contextlines.js\");\n/* harmony import */ var _integrations_context_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./integrations/context.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/context.js\");\n/* harmony import */ var _integrations_local_variables_index_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./integrations/local-variables/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/index.js\");\n/* harmony import */ var _integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./integrations/spotlight.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/spotlight.js\");\n/* harmony import */ var _integrations_anr_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./integrations/anr/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/anr/index.js\");\n/* harmony import */ var _integrations_hapi_index_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./integrations/hapi/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/hapi/index.js\");\n/* harmony import */ var _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./integrations/undici/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/undici/index.js\");\n/* harmony import */ var _integrations_http_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./integrations/http.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/http.js\");\n/* harmony import */ var _trpc_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./trpc.js */ \"(rsc)/./node_modules/@sentry/node/esm/trpc.js\");\n/* harmony import */ var _cron_cron_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./cron/cron.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/cron.js\");\n/* harmony import */ var _cron_node_cron_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./cron/node-cron.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/node-cron.js\");\n/* harmony import */ var _cron_node_schedule_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./cron/node-schedule.js */ \"(rsc)/./node_modules/@sentry/node/esm/cron/node-schedule.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @deprecated use `createGetModuleFromFilename` instead.\n */\nconst getModuleFromFilename = (0,_module_js__WEBPACK_IMPORTED_MODULE_26__.createGetModuleFromFilename)();\n\n// TODO: Deprecate this once we migrated tracing integrations\nconst Integrations = {\n  // eslint-disable-next-line deprecation/deprecation\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_50__.Integrations,\n  ..._integrations_index_js__WEBPACK_IMPORTED_MODULE_51__,\n  ..._tracing_integrations_js__WEBPACK_IMPORTED_MODULE_52__,\n};\n\n/** Methods to instrument cron libraries for Sentry check-ins */\nconst cron = {\n  instrumentCron: _cron_cron_js__WEBPACK_IMPORTED_MODULE_53__.instrumentCron,\n  instrumentNodeCron: _cron_node_cron_js__WEBPACK_IMPORTED_MODULE_54__.instrumentNodeCron,\n  instrumentNodeSchedule: _cron_node_schedule_js__WEBPACK_IMPORTED_MODULE_55__.instrumentNodeSchedule,\n};\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4RDtBQUNrZ0M7QUFDeitCO0FBQzlDO0FBQ2dCO0FBQzBEO0FBQ2xCO0FBQ3BEO0FBQ2E7QUFDQTtBQUNRO0FBQ3hCO0FBQ1Y7QUFDaUI7QUFDUztBQUNnTDtBQUMzSztBQUN3QjtBQUNFO0FBQzFCO0FBQ1U7QUFDTjtBQUNpQjtBQUNqQjtBQUNOO0FBQ21CO0FBQ0k7QUFDckI7QUFDcEI7QUFDSztBQUNTO0FBQ1E7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3RUFBMkI7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBLEtBQUssdURBQWM7QUFDbkIsS0FBSyxvREFBSztBQUNWLEtBQUssc0RBQVk7QUFDakI7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsd0JBQXdCO0FBQ3hCOztBQUVxRDtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vaW5kZXguanM/MTQ3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnRlZ3JhdGlvbnMgYXMgSW50ZWdyYXRpb25zJDEgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuZXhwb3J0IHsgSHViLCBTREtfVkVSU0lPTiwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU0FNUExFX1JBVEUsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBTY29wZSwgYWRkQnJlYWRjcnVtYiwgYWRkRXZlbnRQcm9jZXNzb3IsIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBhZGRJbnRlZ3JhdGlvbiwgY2FwdHVyZUNoZWNrSW4sIGNhcHR1cmVFdmVudCwgY2FwdHVyZUV4Y2VwdGlvbiwgY2FwdHVyZU1lc3NhZ2UsIGNhcHR1cmVTZXNzaW9uLCBjbG9zZSwgY29uZmlndXJlU2NvcGUsIGNvbnRpbnVlVHJhY2UsIGNyZWF0ZVRyYW5zcG9ydCwgZW5kU2Vzc2lvbiwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSwgZmx1c2gsIGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbiwgZ2V0QWN0aXZlU3BhbiwgZ2V0QWN0aXZlVHJhbnNhY3Rpb24sIGdldENsaWVudCwgZ2V0Q3VycmVudEh1YiwgZ2V0Q3VycmVudFNjb3BlLCBnZXRHbG9iYWxTY29wZSwgZ2V0SHViRnJvbUNhcnJpZXIsIGdldElzb2xhdGlvblNjb3BlLCBnZXRTcGFuU3RhdHVzRnJvbUh0dHBDb2RlLCBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uLCBpc0luaXRpYWxpemVkLCBsYXN0RXZlbnRJZCwgbGlua2VkRXJyb3JzSW50ZWdyYXRpb24sIG1ha2VNYWluLCBtZXRyaWNzLCBwYXJhbWV0ZXJpemUsIHJlcXVlc3REYXRhSW50ZWdyYXRpb24sIHJ1bldpdGhBc3luY0NvbnRleHQsIHNldENvbnRleHQsIHNldEN1cnJlbnRDbGllbnQsIHNldEV4dHJhLCBzZXRFeHRyYXMsIHNldEh0dHBTdGF0dXMsIHNldE1lYXN1cmVtZW50LCBzZXRUYWcsIHNldFRhZ3MsIHNldFVzZXIsIHNwYW5TdGF0dXNmcm9tSHR0cENvZGUsIHN0YXJ0QWN0aXZlU3Bhbiwgc3RhcnRJbmFjdGl2ZVNwYW4sIHN0YXJ0U2Vzc2lvbiwgc3RhcnRTcGFuLCBzdGFydFNwYW5NYW51YWwsIHN0YXJ0VHJhbnNhY3Rpb24sIHRyYWNlLCB3aXRoQWN0aXZlU3Bhbiwgd2l0aElzb2xhdGlvblNjb3BlLCB3aXRoTW9uaXRvciwgd2l0aFNjb3BlIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmV4cG9ydCB7IGF1dG9EaXNjb3Zlck5vZGVQZXJmb3JtYW5jZU1vbml0b3JpbmdJbnRlZ3JhdGlvbnMgfSBmcm9tICcuL3RyYWNpbmcvaW5kZXguanMnO1xuZXhwb3J0IHsgTm9kZUNsaWVudCB9IGZyb20gJy4vY2xpZW50LmpzJztcbmV4cG9ydCB7IG1ha2VOb2RlVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2h0dHAuanMnO1xuZXhwb3J0IHsgZGVmYXVsdEludGVncmF0aW9ucywgZGVmYXVsdFN0YWNrUGFyc2VyLCBnZXREZWZhdWx0SW50ZWdyYXRpb25zLCBnZXRTZW50cnlSZWxlYXNlLCBpbml0IH0gZnJvbSAnLi9zZGsuanMnO1xuZXhwb3J0IHsgREVGQVVMVF9VU0VSX0lOQ0xVREVTLCBhZGRSZXF1ZXN0RGF0YVRvRXZlbnQsIGV4dHJhY3RSZXF1ZXN0RGF0YSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuZXhwb3J0IHsgZGVlcFJlYWREaXJTeW5jIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVHZXRNb2R1bGVGcm9tRmlsZW5hbWUgfSBmcm9tICcuL21vZHVsZS5qcyc7XG5leHBvcnQgeyBjcmVhdGVHZXRNb2R1bGVGcm9tRmlsZW5hbWUgfSBmcm9tICcuL21vZHVsZS5qcyc7XG5leHBvcnQgeyBlbmFibGVBbnJEZXRlY3Rpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9hbnIvbGVnYWN5LmpzJztcbmltcG9ydCAqIGFzIGhhbmRsZXJzIGZyb20gJy4vaGFuZGxlcnMuanMnO1xuZXhwb3J0IHsgaGFuZGxlcnMgYXMgSGFuZGxlcnMgfTtcbmltcG9ydCAqIGFzIGluZGV4IGZyb20gJy4vaW50ZWdyYXRpb25zL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIGludGVncmF0aW9ucyBmcm9tICcuL3RyYWNpbmcvaW50ZWdyYXRpb25zLmpzJztcbmV4cG9ydCB7IGNhcHR1cmVDb25zb2xlSW50ZWdyYXRpb24sIGRlYnVnSW50ZWdyYXRpb24sIGRlZHVwZUludGVncmF0aW9uLCBleHRyYUVycm9yRGF0YUludGVncmF0aW9uLCBodHRwQ2xpZW50SW50ZWdyYXRpb24sIHJlcG9ydGluZ09ic2VydmVySW50ZWdyYXRpb24sIHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbiwgc2Vzc2lvblRpbWluZ0ludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS9pbnRlZ3JhdGlvbnMnO1xuZXhwb3J0IHsgY29uc29sZUludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvY29uc29sZS5qcyc7XG5leHBvcnQgeyBvblVuY2F1Z2h0RXhjZXB0aW9uSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9vbnVuY2F1Z2h0ZXhjZXB0aW9uLmpzJztcbmV4cG9ydCB7IG9uVW5oYW5kbGVkUmVqZWN0aW9uSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9vbnVuaGFuZGxlZHJlamVjdGlvbi5qcyc7XG5leHBvcnQgeyBtb2R1bGVzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9tb2R1bGVzLmpzJztcbmV4cG9ydCB7IGNvbnRleHRMaW5lc0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvY29udGV4dGxpbmVzLmpzJztcbmV4cG9ydCB7IG5vZGVDb250ZXh0SW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9jb250ZXh0LmpzJztcbmV4cG9ydCB7IGxvY2FsVmFyaWFibGVzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9sb2NhbC12YXJpYWJsZXMvaW5kZXguanMnO1xuZXhwb3J0IHsgc3BvdGxpZ2h0SW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9zcG90bGlnaHQuanMnO1xuZXhwb3J0IHsgYW5ySW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9hbnIvaW5kZXguanMnO1xuZXhwb3J0IHsgaGFwaUVycm9yUGx1Z2luLCBoYXBpSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9oYXBpL2luZGV4LmpzJztcbmV4cG9ydCB7IFVuZGljaSwgbmF0aXZlTm9kZUZldGNoaW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy91bmRpY2kvaW5kZXguanMnO1xuZXhwb3J0IHsgSHR0cCwgaHR0cEludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaHR0cC5qcyc7XG5leHBvcnQgeyB0cnBjTWlkZGxld2FyZSB9IGZyb20gJy4vdHJwYy5qcyc7XG5pbXBvcnQgeyBpbnN0cnVtZW50Q3JvbiB9IGZyb20gJy4vY3Jvbi9jcm9uLmpzJztcbmltcG9ydCB7IGluc3RydW1lbnROb2RlQ3JvbiB9IGZyb20gJy4vY3Jvbi9ub2RlLWNyb24uanMnO1xuaW1wb3J0IHsgaW5zdHJ1bWVudE5vZGVTY2hlZHVsZSB9IGZyb20gJy4vY3Jvbi9ub2RlLXNjaGVkdWxlLmpzJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgYGNyZWF0ZUdldE1vZHVsZUZyb21GaWxlbmFtZWAgaW5zdGVhZC5cbiAqL1xuY29uc3QgZ2V0TW9kdWxlRnJvbUZpbGVuYW1lID0gY3JlYXRlR2V0TW9kdWxlRnJvbUZpbGVuYW1lKCk7XG5cbi8vIFRPRE86IERlcHJlY2F0ZSB0aGlzIG9uY2Ugd2UgbWlncmF0ZWQgdHJhY2luZyBpbnRlZ3JhdGlvbnNcbmNvbnN0IEludGVncmF0aW9ucyA9IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIC4uLkludGVncmF0aW9ucyQxLFxuICAuLi5pbmRleCxcbiAgLi4uaW50ZWdyYXRpb25zLFxufTtcblxuLyoqIE1ldGhvZHMgdG8gaW5zdHJ1bWVudCBjcm9uIGxpYnJhcmllcyBmb3IgU2VudHJ5IGNoZWNrLWlucyAqL1xuY29uc3QgY3JvbiA9IHtcbiAgaW5zdHJ1bWVudENyb24sXG4gIGluc3RydW1lbnROb2RlQ3JvbixcbiAgaW5zdHJ1bWVudE5vZGVTY2hlZHVsZSxcbn07XG5cbmV4cG9ydCB7IEludGVncmF0aW9ucywgY3JvbiwgZ2V0TW9kdWxlRnJvbUZpbGVuYW1lIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/anr/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/anr/index.js ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Anr: () => (/* binding */ Anr),\n/* harmony export */   anrIntegration: () => (/* binding */ anrIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* harmony import */ var _worker_script_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./worker-script.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/anr/worker-script.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\nconst DEFAULT_INTERVAL = 50;\nconst DEFAULT_HANG_THRESHOLD = 5000;\n\nfunction log(message, ...args) {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[ANR] ${message}`, ...args);\n}\n\nfunction globalWithScopeFetchFn() {\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.GLOBAL_OBJ;\n}\n\n/** Fetches merged scope data */\nfunction getScopeData() {\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getGlobalScope)().getScopeData();\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.mergeScopeData)(scope, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getIsolationScope)().getScopeData());\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.mergeScopeData)(scope, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentScope)().getScopeData());\n\n  // We remove attachments because they likely won't serialize well as json\n  scope.attachments = [];\n  // We can't serialize event processor functions\n  scope.eventProcessors = [];\n\n  return scope;\n}\n\n/**\n * We need to use dynamicRequire because worker_threads is not available in node < v12 and webpack error will when\n * targeting those versions\n */\nfunction getWorkerThreads() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicRequire)(module, 'worker_threads');\n}\n\n/**\n * Gets contexts by calling all event processors. This relies on being called after all integrations are setup\n */\nasync function getContexts(client) {\n  let event = { message: 'ANR' };\n  const eventHint = {};\n\n  for (const processor of client.getEventProcessors()) {\n    if (event === null) break;\n    event = await processor(event, eventHint);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__._optionalChain)([event, 'optionalAccess', _2 => _2.contexts]) || {};\n}\n\nconst INTEGRATION_NAME = 'Anr';\n\nconst _anrIntegration = ((options = {}) => {\n  if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_9__.NODE_VERSION.major < 16 || (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_9__.NODE_VERSION.major === 16 && _nodeVersion_js__WEBPACK_IMPORTED_MODULE_9__.NODE_VERSION.minor < 17)) {\n    throw new Error('ANR detection requires Node 16.17.0 or later');\n  }\n\n  let worker;\n  let client;\n\n  // Hookup the scope fetch function to the global object so that it can be called from the worker thread via the\n  // debugger when it pauses\n  const gbl = globalWithScopeFetchFn();\n  gbl.__SENTRY_GET_SCOPES__ = getScopeData;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    startWorker: () => {\n      if (worker) {\n        return;\n      }\n\n      if (client) {\n        worker = _startWorker(client, options);\n      }\n    },\n    stopWorker: () => {\n      if (worker) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        worker.then(stop => {\n          stop();\n          worker = undefined;\n        });\n      }\n    },\n    setup(initClient) {\n      client = initClient;\n\n      // setImmediate is used to ensure that all other integrations have had their setup called first.\n      // This allows us to call into all integrations to fetch the full context\n      setImmediate(() => this.startWorker());\n    },\n  } ;\n}) ;\n\nconst anrIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.defineIntegration)(_anrIntegration) ;\n\n/**\n * Starts a thread to detect App Not Responding (ANR) events\n *\n * ANR detection requires Node 16.17.0 or later\n *\n * @deprecated Use `anrIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Anr = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.convertIntegrationFnToClass)(INTEGRATION_NAME, anrIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Starts the ANR worker thread\n */\nasync function _startWorker(\n  client,\n  integrationOptions,\n) {\n  const dsn = client.getDsn();\n\n  if (!dsn) {\n    return () => {\n      //\n    };\n  }\n\n  const contexts = await getContexts(client);\n\n  // These will not be accurate if sent later from the worker thread\n   (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__._optionalChainDelete)([contexts, 'access', _3 => _3.app, 'optionalAccess', _4 => delete _4.app_memory]);\n   (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__._optionalChainDelete)([contexts, 'access', _5 => _5.device, 'optionalAccess', _6 => delete _6.free_memory]);\n\n  const initOptions = client.getOptions();\n\n  const sdkMetadata = client.getSdkMetadata() || {};\n  if (sdkMetadata.sdk) {\n    sdkMetadata.sdk.integrations = initOptions.integrations.map(i => i.name);\n  }\n\n  const options = {\n    debug: _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.isEnabled(),\n    dsn,\n    environment: initOptions.environment || 'production',\n    release: initOptions.release,\n    dist: initOptions.dist,\n    sdkMetadata,\n    appRootPath: integrationOptions.appRootPath,\n    pollInterval: integrationOptions.pollInterval || DEFAULT_INTERVAL,\n    anrThreshold: integrationOptions.anrThreshold || DEFAULT_HANG_THRESHOLD,\n    captureStackTrace: !!integrationOptions.captureStackTrace,\n    staticTags: integrationOptions.staticTags || {},\n    contexts,\n  };\n\n  if (options.captureStackTrace) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const inspector = __webpack_require__(/*! inspector */ \"inspector\");\n    if (!inspector.url()) {\n      inspector.open(0);\n    }\n  }\n\n  const { Worker } = getWorkerThreads();\n\n  const worker = new Worker(new url__WEBPACK_IMPORTED_MODULE_0__.URL(`data:application/javascript;base64,${_worker_script_js__WEBPACK_IMPORTED_MODULE_12__.base64WorkerScript}`), {\n    workerData: options,\n  });\n\n  process.on('exit', () => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    worker.terminate();\n  });\n\n  const timer = setInterval(() => {\n    try {\n      const currentSession = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentScope)().getSession();\n      // We need to copy the session object and remove the toJSON method so it can be sent to the worker\n      // serialized without making it a SerializedSession\n      const session = currentSession ? { ...currentSession, toJSON: undefined } : undefined;\n      // message the worker to tell it the main event loop is still running\n      worker.postMessage({ session });\n    } catch (_) {\n      //\n    }\n  }, options.pollInterval);\n  // Timer should not block exit\n  timer.unref();\n\n  worker.on('message', (msg) => {\n    if (msg === 'session-ended') {\n      log('ANR event sent from ANR worker. Clearing session in this thread.');\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentScope)().setSession(undefined);\n    }\n  });\n\n  worker.once('error', (err) => {\n    clearInterval(timer);\n    log('ANR worker error', err);\n  });\n\n  worker.once('exit', (code) => {\n    clearInterval(timer);\n    log('ANR worker exit', code);\n  });\n\n  // Ensure this thread can't block app exit\n  worker.unref();\n\n  return () => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    worker.terminate();\n    clearInterval(timer);\n  };\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/anr/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/anr/legacy.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/anr/legacy.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enableAnrDetection: () => (/* binding */ enableAnrDetection)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/anr/index.js\");\n\n\n\n// TODO (v8): Remove this entire file and the `enableAnrDetection` export\n\n/**\n * @deprecated Use the `Anr` integration instead.\n *\n * ```ts\n * import * as Sentry from '@sentry/node';\n *\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [new Sentry.Integrations.Anr({ captureStackTrace: true })],\n * });\n * ```\n */\nfunction enableAnrDetection(options) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() ;\n  // eslint-disable-next-line deprecation/deprecation\n  const integration = new _index_js__WEBPACK_IMPORTED_MODULE_1__.Anr(options);\n  integration.setup(client);\n  return Promise.resolve();\n}\n\n\n//# sourceMappingURL=legacy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvYW5yL2xlZ2FjeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDUjs7QUFFakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCx5QkFBeUI7QUFDM0UsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBUztBQUMxQjtBQUNBLDBCQUEwQiwwQ0FBRztBQUM3QjtBQUNBO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvYW5yL2xlZ2FjeS5qcz85ZmFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENsaWVudCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBBbnIgfSBmcm9tICcuL2luZGV4LmpzJztcblxuLy8gVE9ETyAodjgpOiBSZW1vdmUgdGhpcyBlbnRpcmUgZmlsZSBhbmQgdGhlIGBlbmFibGVBbnJEZXRlY3Rpb25gIGV4cG9ydFxuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSB0aGUgYEFucmAgaW50ZWdyYXRpb24gaW5zdGVhZC5cbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gJ0BzZW50cnkvbm9kZSc7XG4gKlxuICogU2VudHJ5LmluaXQoe1xuICogICBkc246ICdfX0RTTl9fJyxcbiAqICAgaW50ZWdyYXRpb25zOiBbbmV3IFNlbnRyeS5JbnRlZ3JhdGlvbnMuQW5yKHsgY2FwdHVyZVN0YWNrVHJhY2U6IHRydWUgfSldLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gZW5hYmxlQW5yRGV0ZWN0aW9uKG9wdGlvbnMpIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCkgO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgY29uc3QgaW50ZWdyYXRpb24gPSBuZXcgQW5yKG9wdGlvbnMpO1xuICBpbnRlZ3JhdGlvbi5zZXR1cChjbGllbnQpO1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG59XG5cbmV4cG9ydCB7IGVuYWJsZUFuckRldGVjdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGVnYWN5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/anr/legacy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/anr/worker-script.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/anr/worker-script.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64WorkerScript: () => (/* binding */ base64WorkerScript)\n/* harmony export */ });\n/*! @sentry/node 7.112.2 (b6fd7e8) | https://github.com/getsentry/sentry-javascript */\nconst base64WorkerScript=\"\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/anr/worker-script.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/console.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/console.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Console: () => (/* binding */ Console),\n/* harmony export */   consoleIntegration: () => (/* binding */ consoleIntegration)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/console.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/severity.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'Console';\n\nconst _consoleIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addConsoleInstrumentationHandler)(({ args, level }) => {\n        if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n          return;\n        }\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n          {\n            category: 'console',\n            level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.severityLevelFromString)(level),\n            message: util__WEBPACK_IMPORTED_MODULE_0__.format.apply(undefined, args),\n          },\n          {\n            input: [...args],\n            level,\n          },\n        );\n      });\n    },\n  };\n}) ;\n\nconst consoleIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.defineIntegration)(_consoleIntegration);\n\n/**\n * Console module integration.\n * @deprecated Use `consoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Console = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.convertIntegrationFnToClass)(INTEGRATION_NAME, consoleIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvY29uc29sZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE2QjtBQUMyRTtBQUNkOztBQUUxRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLE1BQU0sK0VBQWdDLElBQUksYUFBYTtBQUN2RCxZQUFZLHVEQUFTO0FBQ3JCO0FBQ0E7O0FBRUEsUUFBUSwyREFBYTtBQUNyQjtBQUNBO0FBQ0EsbUJBQW1CLHNFQUF1QjtBQUMxQyxxQkFBcUIsd0NBQVc7QUFDaEMsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELDJCQUEyQiwrREFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseUVBQTJCOztBQUUzQzs7QUFFQTs7QUFFdUM7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL2ludGVncmF0aW9ucy9jb25zb2xlLmpzP2NkZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJztcbmltcG9ydCB7IGRlZmluZUludGVncmF0aW9uLCBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MsIGdldENsaWVudCwgYWRkQnJlYWRjcnVtYiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdDb25zb2xlJztcblxuY29uc3QgX2NvbnNvbGVJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAvLyBUT0RPIHY4OiBSZW1vdmUgdGhpc1xuICAgIHNldHVwT25jZSgpIHt9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgYWRkQ29uc29sZUluc3RydW1lbnRhdGlvbkhhbmRsZXIoKHsgYXJncywgbGV2ZWwgfSkgPT4ge1xuICAgICAgICBpZiAoZ2V0Q2xpZW50KCkgIT09IGNsaWVudCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGFkZEJyZWFkY3J1bWIoXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2F0ZWdvcnk6ICdjb25zb2xlJyxcbiAgICAgICAgICAgIGxldmVsOiBzZXZlcml0eUxldmVsRnJvbVN0cmluZyhsZXZlbCksXG4gICAgICAgICAgICBtZXNzYWdlOiB1dGlsLmZvcm1hdC5hcHBseSh1bmRlZmluZWQsIGFyZ3MpLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW5wdXQ6IFsuLi5hcmdzXSxcbiAgICAgICAgICAgIGxldmVsLFxuICAgICAgICAgIH0sXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBjb25zb2xlSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfY29uc29sZUludGVncmF0aW9uKTtcblxuLyoqXG4gKiBDb25zb2xlIG1vZHVsZSBpbnRlZ3JhdGlvbi5cbiAqIEBkZXByZWNhdGVkIFVzZSBgY29uc29sZUludGVncmF0aW9uKClgIGluc3RlYWQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgQ29uc29sZSA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhJTlRFR1JBVElPTl9OQU1FLCBjb25zb2xlSW50ZWdyYXRpb24pXG5cbjtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5cbmV4cG9ydCB7IENvbnNvbGUsIGNvbnNvbGVJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc29sZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/console.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/context.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/context.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Context: () => (/* binding */ Context),\n/* harmony export */   getDeviceContext: () => (/* binding */ getDeviceContext),\n/* harmony export */   nodeContextIntegration: () => (/* binding */ nodeContextIntegration),\n/* harmony export */   readDirAsync: () => (/* binding */ readDirAsync),\n/* harmony export */   readFileAsync: () => (/* binding */ readFileAsync)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\n// TODO: Required until we drop support for Node v8\nconst readFileAsync = (0,util__WEBPACK_IMPORTED_MODULE_4__.promisify)(fs__WEBPACK_IMPORTED_MODULE_1__.readFile);\nconst readDirAsync = (0,util__WEBPACK_IMPORTED_MODULE_4__.promisify)(fs__WEBPACK_IMPORTED_MODULE_1__.readdir);\n\nconst INTEGRATION_NAME = 'Context';\n\nconst _nodeContextIntegration = ((options = {}) => {\n  let cachedContext;\n\n  const _options = {\n    app: true,\n    os: true,\n    device: true,\n    culture: true,\n    cloudResource: true,\n    ...options,\n  };\n\n  /** Add contexts to the event. Caches the context so we only look it up once. */\n  async function addContext(event) {\n    if (cachedContext === undefined) {\n      cachedContext = _getContexts();\n    }\n\n    const updatedContext = _updateContext(await cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _ => _.contexts, 'optionalAccess', _2 => _2.app]) },\n      os: { ...updatedContext.os, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _3 => _3.contexts, 'optionalAccess', _4 => _4.os]) },\n      device: { ...updatedContext.device, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _5 => _5.contexts, 'optionalAccess', _6 => _6.device]) },\n      culture: { ...updatedContext.culture, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _7 => _7.contexts, 'optionalAccess', _8 => _8.culture]) },\n      cloud_resource: { ...updatedContext.cloud_resource, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _9 => _9.contexts, 'optionalAccess', _10 => _10.cloud_resource]) },\n    };\n\n    return event;\n  }\n\n  /** Get the contexts from node. */\n  async function _getContexts() {\n    const contexts = {};\n\n    if (_options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (_options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (_options.device) {\n      contexts.device = getDeviceContext(_options.device);\n    }\n\n    if (_options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (_options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      return addContext(event);\n    },\n  };\n}) ;\n\nconst nodeContextIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.defineIntegration)(_nodeContextIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `nodeContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Context = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.convertIntegrationFnToClass)(INTEGRATION_NAME, nodeContextIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Updates the context with dynamic values that can change\n */\nfunction _updateContext(contexts) {\n  // Only update properties if they exist\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([contexts, 'optionalAccess', _11 => _11.app, 'optionalAccess', _12 => _12.app_memory])) {\n    contexts.app.app_memory = process.memoryUsage().rss;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([contexts, 'optionalAccess', _13 => _13.device, 'optionalAccess', _14 => _14.free_memory])) {\n    contexts.device.free_memory = os__WEBPACK_IMPORTED_MODULE_2__.freemem();\n  }\n\n  return contexts;\n}\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext() {\n  const platformId = os__WEBPACK_IMPORTED_MODULE_2__.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n      };\n  }\n}\n\nfunction getCultureContext() {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions ).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\nfunction getAppContext() {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n\n  return { app_start_time, app_memory };\n}\n\n/**\n * Gets device information from os\n */\nfunction getDeviceContext(deviceOpt) {\n  const device = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os__WEBPACK_IMPORTED_MODULE_2__.uptime && os__WEBPACK_IMPORTED_MODULE_2__.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os__WEBPACK_IMPORTED_MODULE_2__.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os__WEBPACK_IMPORTED_MODULE_2__.totalmem();\n    device.free_memory = os__WEBPACK_IMPORTED_MODULE_2__.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo = os__WEBPACK_IMPORTED_MODULE_2__.cpus();\n    if (cpuInfo && cpuInfo.length) {\n      const firstCpu = cpuInfo[0];\n\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS\n\n = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex, text) {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo() {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo = {\n    kernel_version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os__WEBPACK_IMPORTED_MODULE_2__.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise((resolve, reject) => {\n      (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execFile)('/usr/bin/sw_vers', (error, stdout) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name) {\n  return name.split(' ')[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo() {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo = {\n    kernel_version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = (0,path__WEBPACK_IMPORTED_MODULE_3__.join)('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) ).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id](contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext() {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/context.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/contextlines.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/contextlines.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContextLines: () => (/* binding */ ContextLines),\n/* harmony export */   contextLinesIntegration: () => (/* binding */ contextLinesIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\n\n\nconst FILE_CONTENT_CACHE = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\nconst INTEGRATION_NAME = 'ContextLines';\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    (0,fs__WEBPACK_IMPORTED_MODULE_0__.readFile)(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\nconst _contextLinesIntegration = ((options = {}) => {\n  const contextLines = options.frameContextLines !== undefined ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) ;\n\nconst contextLinesIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_contextLinesIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `contextLinesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ContextLines = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, contextLinesIntegration)\n\n;\n\nasync function addSourceContext(event, contextLines) {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const enqueuedReadSourceFileTasks = {};\n  const readSourceFileTasks = [];\n\n  if (contextLines > 0 && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([event, 'access', _2 => _2.exception, 'optionalAccess', _3 => _3.values])) {\n    for (const exception of event.exception.values) {\n      if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([exception, 'access', _4 => _4.stacktrace, 'optionalAccess', _5 => _5.frames])) {\n        continue;\n      }\n\n      // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n      // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n      for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n        const frame = exception.stacktrace.frames[i];\n        // Call cache.get to bump the file to the top of the cache and ensure we have not already\n        // enqueued a read operation for this filename\n        if (frame.filename && !enqueuedReadSourceFileTasks[frame.filename] && !FILE_CONTENT_CACHE.get(frame.filename)) {\n          readSourceFileTasks.push(_readSourceFile(frame.filename));\n          enqueuedReadSourceFileTasks[frame.filename] = 1;\n        }\n      }\n    }\n  }\n\n  // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n  // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n  // are guarding from that by wrapping the i/o read operation in a try/catch.\n  if (readSourceFileTasks.length > 0) {\n    await Promise.all(readSourceFileTasks);\n  }\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (contextLines > 0 && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([event, 'access', _6 => _6.exception, 'optionalAccess', _7 => _7.values])) {\n    for (const exception of event.exception.values) {\n      if (exception.stacktrace && exception.stacktrace.frames) {\n        await addSourceContextToFrames(exception.stacktrace.frames, contextLines);\n      }\n    }\n  }\n\n  return event;\n}\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(frames, contextLines) {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined) {\n      const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n      if (sourceFileLines) {\n        try {\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.addContextToFrame)(sourceFileLines, frame, contextLines);\n        } catch (e) {\n          // anomaly, being defensive in case\n          // unlikely to ever happen in practice but can definitely happen in theory\n        }\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename) {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n\n\n//# sourceMappingURL=contextlines.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/contextlines.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/hapi/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/hapi/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hapi: () => (/* binding */ Hapi),\n/* harmony export */   hapiErrorPlugin: () => (/* binding */ hapiErrorPlugin),\n/* harmony export */   hapiIntegration: () => (/* binding */ hapiIntegration),\n/* harmony export */   hapiTracingPlugin: () => (/* binding */ hapiTracingPlugin)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n\nfunction isResponseObject(response) {\n  return response && (response ).statusCode !== undefined;\n}\n\nfunction isErrorEvent(event) {\n  return event && (event ).error !== undefined;\n}\n\nfunction sendErrorToSentry(errorData) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(errorData, {\n    mechanism: {\n      type: 'hapi',\n      handled: false,\n      data: {\n        function: 'hapiErrorPlugin',\n      },\n    },\n  });\n}\n\nconst hapiErrorPlugin = {\n  name: 'SentryHapiErrorPlugin',\n  version: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg) {\n    const server = serverArg ;\n\n    server.events.on('request', (request, event) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)();\n\n      if (isErrorEvent(event)) {\n        sendErrorToSentry(event.error);\n      }\n\n      if (transaction) {\n        transaction.setStatus('internal_error');\n        transaction.end();\n      }\n    });\n  },\n};\n\nconst hapiTracingPlugin = {\n  name: 'SentryHapiTracingPlugin',\n  version: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg) {\n    const server = serverArg ;\n\n    server.ext('onPreHandler', (request, h) => {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.continueTrace)(\n        {\n          sentryTrace: request.headers['sentry-trace'] || undefined,\n          baggage: request.headers['baggage'] || undefined,\n        },\n        transactionContext => {\n          // eslint-disable-next-line deprecation/deprecation\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startTransaction)({\n            ...transactionContext,\n            op: 'hapi.request',\n            name: request.route.path,\n            description: `${request.route.method} ${request.path}`,\n          });\n        },\n      );\n\n      // eslint-disable-next-line deprecation/deprecation\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().setSpan(transaction);\n\n      return h.continue;\n    });\n\n    server.ext('onPreResponse', (request, h) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)();\n\n      if (request.response && isResponseObject(request.response) && transaction) {\n        const response = request.response ;\n        response.header('sentry-trace', (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToTraceHeader)(transaction));\n\n        const dynamicSamplingContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.dynamicSamplingContextToSentryBaggageHeader)(\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getDynamicSamplingContextFromSpan)(transaction),\n        );\n\n        if (dynamicSamplingContext) {\n          response.header('baggage', dynamicSamplingContext);\n        }\n      }\n\n      return h.continue;\n    });\n\n    server.ext('onPostHandler', (request, h) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)();\n\n      if (transaction) {\n        if (request.response && isResponseObject(request.response)) {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.setHttpStatus)(transaction, request.response.statusCode);\n        }\n\n        transaction.end();\n      }\n\n      return h.continue;\n    });\n  },\n};\n\nconst INTEGRATION_NAME = 'Hapi';\n\nconst _hapiIntegration = ((options = {}) => {\n  const server = options.server ;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!server) {\n        return;\n      }\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.fill)(server, 'start', (originalStart) => {\n        return async function () {\n          await this.register(hapiTracingPlugin);\n          await this.register(hapiErrorPlugin);\n          const result = originalStart.apply(this);\n          return result;\n        };\n      });\n    },\n  };\n}) ;\n\nconst hapiIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.defineIntegration)(_hapiIntegration);\n\n/**\n * Hapi Framework Integration.\n * @deprecated Use `hapiIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Hapi = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.convertIntegrationFnToClass)(INTEGRATION_NAME, hapiIntegration);\n\n// eslint-disable-next-line deprecation/deprecation\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvaGFwaS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUEwUDtBQUN4Szs7QUFFbEY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUUsOERBQWdCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxxREFBVztBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBCQUEwQixrRUFBb0I7O0FBRTlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBLFdBQVcscURBQVc7QUFDdEI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCLDJEQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLDhEQUFnQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsc0JBQXNCLEVBQUUsYUFBYTtBQUNqRSxXQUFXO0FBQ1gsU0FBUztBQUNUOztBQUVBO0FBQ0EsTUFBTSw2REFBZTs7QUFFckI7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSwwQkFBMEIsa0VBQW9COztBQUU5QztBQUNBO0FBQ0Esd0NBQXdDLCtEQUFpQjs7QUFFekQsdUNBQXVDLDBGQUEyQztBQUNsRixVQUFVLCtFQUFpQztBQUMzQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLDBCQUEwQixrRUFBb0I7O0FBRTlDO0FBQ0E7QUFDQSxVQUFVLDJEQUFhO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBOztBQUVBLHVDQUF1QztBQUN2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSxtREFBSTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELHdCQUF3QiwrREFBaUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlFQUEyQjs7QUFFeEM7O0FBRXFFO0FBQ3JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvaGFwaS9pbmRleC5qcz9lMzYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUludGVncmF0aW9uLCBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MsIFNES19WRVJTSU9OLCBnZXRBY3RpdmVUcmFuc2FjdGlvbiwgY2FwdHVyZUV4Y2VwdGlvbiwgY29udGludWVUcmFjZSwgc3RhcnRUcmFuc2FjdGlvbiwgZ2V0Q3VycmVudFNjb3BlLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBzZXRIdHRwU3RhdHVzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGZpbGwsIGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuZnVuY3Rpb24gaXNSZXNwb25zZU9iamVjdChyZXNwb25zZSkge1xuICByZXR1cm4gcmVzcG9uc2UgJiYgKHJlc3BvbnNlICkuc3RhdHVzQ29kZSAhPT0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBpc0Vycm9yRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50ICYmIChldmVudCApLmVycm9yICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIHNlbmRFcnJvclRvU2VudHJ5KGVycm9yRGF0YSkge1xuICBjYXB0dXJlRXhjZXB0aW9uKGVycm9yRGF0YSwge1xuICAgIG1lY2hhbmlzbToge1xuICAgICAgdHlwZTogJ2hhcGknLFxuICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGZ1bmN0aW9uOiAnaGFwaUVycm9yUGx1Z2luJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG59XG5cbmNvbnN0IGhhcGlFcnJvclBsdWdpbiA9IHtcbiAgbmFtZTogJ1NlbnRyeUhhcGlFcnJvclBsdWdpbicsXG4gIHZlcnNpb246IFNES19WRVJTSU9OLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICByZWdpc3RlcjogYXN5bmMgZnVuY3Rpb24gKHNlcnZlckFyZykge1xuICAgIGNvbnN0IHNlcnZlciA9IHNlcnZlckFyZyA7XG5cbiAgICBzZXJ2ZXIuZXZlbnRzLm9uKCdyZXF1ZXN0JywgKHJlcXVlc3QsIGV2ZW50KSA9PiB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKTtcblxuICAgICAgaWYgKGlzRXJyb3JFdmVudChldmVudCkpIHtcbiAgICAgICAgc2VuZEVycm9yVG9TZW50cnkoZXZlbnQuZXJyb3IpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHJhbnNhY3Rpb24pIHtcbiAgICAgICAgdHJhbnNhY3Rpb24uc2V0U3RhdHVzKCdpbnRlcm5hbF9lcnJvcicpO1xuICAgICAgICB0cmFuc2FjdGlvbi5lbmQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbn07XG5cbmNvbnN0IGhhcGlUcmFjaW5nUGx1Z2luID0ge1xuICBuYW1lOiAnU2VudHJ5SGFwaVRyYWNpbmdQbHVnaW4nLFxuICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgcmVnaXN0ZXI6IGFzeW5jIGZ1bmN0aW9uIChzZXJ2ZXJBcmcpIHtcbiAgICBjb25zdCBzZXJ2ZXIgPSBzZXJ2ZXJBcmcgO1xuXG4gICAgc2VydmVyLmV4dCgnb25QcmVIYW5kbGVyJywgKHJlcXVlc3QsIGgpID0+IHtcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gY29udGludWVUcmFjZShcbiAgICAgICAge1xuICAgICAgICAgIHNlbnRyeVRyYWNlOiByZXF1ZXN0LmhlYWRlcnNbJ3NlbnRyeS10cmFjZSddIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgICBiYWdnYWdlOiByZXF1ZXN0LmhlYWRlcnNbJ2JhZ2dhZ2UnXSB8fCB1bmRlZmluZWQsXG4gICAgICAgIH0sXG4gICAgICAgIHRyYW5zYWN0aW9uQ29udGV4dCA9PiB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgICAgICAgcmV0dXJuIHN0YXJ0VHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgLi4udHJhbnNhY3Rpb25Db250ZXh0LFxuICAgICAgICAgICAgb3A6ICdoYXBpLnJlcXVlc3QnLFxuICAgICAgICAgICAgbmFtZTogcmVxdWVzdC5yb3V0ZS5wYXRoLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGAke3JlcXVlc3Qucm91dGUubWV0aG9kfSAke3JlcXVlc3QucGF0aH1gLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgKTtcblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgICBnZXRDdXJyZW50U2NvcGUoKS5zZXRTcGFuKHRyYW5zYWN0aW9uKTtcblxuICAgICAgcmV0dXJuIGguY29udGludWU7XG4gICAgfSk7XG5cbiAgICBzZXJ2ZXIuZXh0KCdvblByZVJlc3BvbnNlJywgKHJlcXVlc3QsIGgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBnZXRBY3RpdmVUcmFuc2FjdGlvbigpO1xuXG4gICAgICBpZiAocmVxdWVzdC5yZXNwb25zZSAmJiBpc1Jlc3BvbnNlT2JqZWN0KHJlcXVlc3QucmVzcG9uc2UpICYmIHRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gcmVxdWVzdC5yZXNwb25zZSA7XG4gICAgICAgIHJlc3BvbnNlLmhlYWRlcignc2VudHJ5LXRyYWNlJywgc3BhblRvVHJhY2VIZWFkZXIodHJhbnNhY3Rpb24pKTtcblxuICAgICAgICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcihcbiAgICAgICAgICBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4odHJhbnNhY3Rpb24pLFxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChkeW5hbWljU2FtcGxpbmdDb250ZXh0KSB7XG4gICAgICAgICAgcmVzcG9uc2UuaGVhZGVyKCdiYWdnYWdlJywgZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGguY29udGludWU7XG4gICAgfSk7XG5cbiAgICBzZXJ2ZXIuZXh0KCdvblBvc3RIYW5kbGVyJywgKHJlcXVlc3QsIGgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBnZXRBY3RpdmVUcmFuc2FjdGlvbigpO1xuXG4gICAgICBpZiAodHJhbnNhY3Rpb24pIHtcbiAgICAgICAgaWYgKHJlcXVlc3QucmVzcG9uc2UgJiYgaXNSZXNwb25zZU9iamVjdChyZXF1ZXN0LnJlc3BvbnNlKSkge1xuICAgICAgICAgIHNldEh0dHBTdGF0dXModHJhbnNhY3Rpb24sIHJlcXVlc3QucmVzcG9uc2Uuc3RhdHVzQ29kZSk7XG4gICAgICAgIH1cblxuICAgICAgICB0cmFuc2FjdGlvbi5lbmQoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGguY29udGludWU7XG4gICAgfSk7XG4gIH0sXG59O1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0hhcGknO1xuXG5jb25zdCBfaGFwaUludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3Qgc2VydmVyID0gb3B0aW9ucy5zZXJ2ZXIgO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpZiAoIXNlcnZlcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZpbGwoc2VydmVyLCAnc3RhcnQnLCAob3JpZ2luYWxTdGFydCkgPT4ge1xuICAgICAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGF3YWl0IHRoaXMucmVnaXN0ZXIoaGFwaVRyYWNpbmdQbHVnaW4pO1xuICAgICAgICAgIGF3YWl0IHRoaXMucmVnaXN0ZXIoaGFwaUVycm9yUGx1Z2luKTtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSBvcmlnaW5hbFN0YXJ0LmFwcGx5KHRoaXMpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBoYXBpSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfaGFwaUludGVncmF0aW9uKTtcblxuLyoqXG4gKiBIYXBpIEZyYW1ld29yayBJbnRlZ3JhdGlvbi5cbiAqIEBkZXByZWNhdGVkIFVzZSBgaGFwaUludGVncmF0aW9uKClgIGluc3RlYWQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgSGFwaSA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhJTlRFR1JBVElPTl9OQU1FLCBoYXBpSW50ZWdyYXRpb24pO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cblxuZXhwb3J0IHsgSGFwaSwgaGFwaUVycm9yUGx1Z2luLCBoYXBpSW50ZWdyYXRpb24sIGhhcGlUcmFjaW5nUGx1Z2luIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/hapi/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/http.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/http.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Http: () => (/* binding */ Http),\n/* harmony export */   _getShouldCreateSpanForRequest: () => (/* binding */ _getShouldCreateSpanForRequest),\n/* harmony export */   _shouldCreateSpans: () => (/* binding */ _shouldCreateSpans),\n/* harmony export */   httpIntegration: () => (/* binding */ httpIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/node/esm/debug-build.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* harmony import */ var _utils_http_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/http.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/utils/http.js\");\n\n\n\n\n\n\n\nconst _httpIntegration = ((options = {}) => {\n  const { breadcrumbs, tracing, shouldCreateSpanForRequest } = options;\n\n  const convertedOptions = {\n    breadcrumbs,\n    tracing:\n      tracing === false\n        ? false\n        : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n            // If tracing is forced to `true`, we don't want to set `enableIfHasTracingEnabled`\n            enableIfHasTracingEnabled: tracing === true ? undefined : true,\n            shouldCreateSpanForRequest,\n          }),\n  };\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new Http(convertedOptions) ;\n}) ;\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, spans for outgoing\n * http requests, and attaches trace data when tracing is enabled via its `tracing` option.\n *\n * By default, this will always create breadcrumbs, and will create spans if tracing is enabled.\n */\nconst httpIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_httpIntegration);\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, transactions for outgoing\n * http requests and attaches trace data when tracing is enabled via its `tracing` option.\n *\n * @deprecated Use `httpIntegration()` instead.\n */\nclass Http  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Http';}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   __init() {this.name = Http.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Http.prototype.__init.call(this);\n    this._breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n    this._tracing = !options.tracing ? undefined : options.tracing === true ? {} : options.tracing;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(\n    _addGlobalEventProcessor,\n    // eslint-disable-next-line deprecation/deprecation\n    setupOnceGetCurrentHub,\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([setupOnceGetCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n\n    // If `tracing` is not explicitly set, we default this based on whether or not tracing is enabled.\n    // But for compatibility, we only do that if `enableIfHasTracingEnabled` is set.\n    const shouldCreateSpans = _shouldCreateSpans(this._tracing, clientOptions);\n\n    // No need to instrument if we don't want to track anything\n    if (!this._breadcrumbs && !shouldCreateSpans) {\n      return;\n    }\n\n    // Do not auto-instrument for other instrumenter\n    if (clientOptions && clientOptions.instrumenter !== 'sentry') {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('HTTP Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const shouldCreateSpanForRequest = _getShouldCreateSpanForRequest(shouldCreateSpans, this._tracing, clientOptions);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([clientOptions, 'optionalAccess', _6 => _6.tracePropagationTargets]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([this, 'access', _7 => _7._tracing, 'optionalAccess', _8 => _8.tracePropagationTargets]);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const httpModule = __webpack_require__(/*! http */ \"http\");\n    const wrappedHttpHandlerMaker = _createWrappedRequestMethodFactory(\n      httpModule,\n      this._breadcrumbs,\n      shouldCreateSpanForRequest,\n      tracePropagationTargets,\n    );\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(httpModule, 'get', wrappedHttpHandlerMaker);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(httpModule, 'request', wrappedHttpHandlerMaker);\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // If we do, we'd get double breadcrumbs and double spans for `https` calls.\n    // It has been changed in Node 9, so for all versions equal and above, we patch `https` separately.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_5__.NODE_VERSION.major > 8) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const httpsModule = __webpack_require__(/*! https */ \"https\");\n      const wrappedHttpsHandlerMaker = _createWrappedRequestMethodFactory(\n        httpsModule,\n        this._breadcrumbs,\n        shouldCreateSpanForRequest,\n        tracePropagationTargets,\n      );\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(httpsModule, 'get', wrappedHttpsHandlerMaker);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(httpsModule, 'request', wrappedHttpsHandlerMaker);\n    }\n  }\n}Http.__initStatic();\n\n// for ease of reading below\n\n/**\n * Function which creates a function which creates wrapped versions of internal `request` and `get` calls within `http`\n * and `https` modules. (NB: Not a typo - this is a creator^2!)\n *\n * @param breadcrumbsEnabled Whether or not to record outgoing requests as breadcrumbs\n * @param tracingEnabled Whether or not to record outgoing requests as tracing spans\n *\n * @returns A function which accepts the exiting handler and returns a wrapped handler\n */\nfunction _createWrappedRequestMethodFactory(\n  httpModule,\n  breadcrumbsEnabled,\n  shouldCreateSpanForRequest,\n  tracePropagationTargets,\n) {\n  // We're caching results so we don't have to recompute regexp every time we create a request.\n  const createSpanUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.LRUMap(100);\n  const headersUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.LRUMap(100);\n\n  const shouldCreateSpan = (url) => {\n    if (shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = shouldCreateSpanForRequest(url);\n    createSpanUrlMap.set(url, decision);\n    return decision;\n  };\n\n  const shouldAttachTraceData = (url) => {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = headersUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.stringMatchesSomePattern)(url, tracePropagationTargets);\n    headersUrlMap.set(url, decision);\n    return decision;\n  };\n\n  /**\n   * Captures Breadcrumb based on provided request/response pair\n   */\n  function addRequestBreadcrumb(\n    event,\n    requestSpanData,\n    req,\n    res,\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.getCurrentHub)().getIntegration(Http)) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.addBreadcrumb)(\n      {\n        category: 'http',\n        data: {\n          status_code: res && res.statusCode,\n          ...requestSpanData,\n        },\n        type: 'http',\n      },\n      {\n        event,\n        request: req,\n        response: res,\n      },\n    );\n  }\n\n  return function wrappedRequestMethodFactory(originalRequestMethod) {\n    return function wrappedMethod( ...args) {\n      const requestArgs = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_10__.normalizeRequestArgs)(httpModule, args);\n      const requestOptions = requestArgs[0];\n      // eslint-disable-next-line deprecation/deprecation\n      const rawRequestUrl = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_10__.extractRawUrl)(requestOptions);\n      const requestUrl = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_10__.extractUrl)(requestOptions);\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getClient)();\n\n      // we don't want to record requests to Sentry as either breadcrumbs or spans, so just use the original method\n      if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_11__.isSentryRequestUrl)(requestUrl, client)) {\n        return originalRequestMethod.apply(httpModule, requestArgs);\n      }\n\n      const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getCurrentScope)();\n      const isolationScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.getIsolationScope)();\n      const parentSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_12__.getActiveSpan)();\n\n      const data = getRequestSpanData(requestUrl, requestOptions);\n\n      const requestSpan = shouldCreateSpan(rawRequestUrl)\n        ? // eslint-disable-next-line deprecation/deprecation\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _9 => _9.startChild, 'call', _10 => _10({\n            op: 'http.client',\n            origin: 'auto.http.node.http',\n            description: `${data['http.method']} ${data.url}`,\n            data,\n          })])\n        : undefined;\n\n      if (client && shouldAttachTraceData(rawRequestUrl)) {\n        const { traceId, spanId, sampled, dsc } = {\n          ...isolationScope.getPropagationContext(),\n          ...scope.getPropagationContext(),\n        };\n\n        const sentryTraceHeader = requestSpan\n          ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.spanToTraceHeader)(requestSpan)\n          : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n        const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.dynamicSamplingContextToSentryBaggageHeader)(\n          dsc ||\n            (requestSpan\n              ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getDynamicSamplingContextFromSpan)(requestSpan)\n              : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getDynamicSamplingContextFromClient)(traceId, client, scope)),\n        );\n\n        addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, sentryBaggageHeader);\n      } else {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(\n            `[Tracing] Not adding sentry-trace header to outgoing request (${requestUrl}) due to mismatching tracePropagationTargets option.`,\n          );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalRequestMethod\n        .apply(httpModule, requestArgs)\n        .once('response', function ( res) {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('response', data, req, res);\n          }\n          if (requestSpan) {\n            if (res.statusCode) {\n              (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.setHttpStatus)(requestSpan, res.statusCode);\n            }\n            requestSpan.updateName(\n              (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_10__.cleanSpanDescription)((0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.spanToJSON)(requestSpan).description || '', requestOptions, req) || '',\n            );\n            requestSpan.end();\n          }\n        })\n        .once('error', function () {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('error', data, req);\n          }\n          if (requestSpan) {\n            (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.setHttpStatus)(requestSpan, 500);\n            requestSpan.updateName(\n              (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_10__.cleanSpanDescription)((0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.spanToJSON)(requestSpan).description || '', requestOptions, req) || '',\n            );\n            requestSpan.end();\n          }\n        });\n    };\n  };\n}\n\nfunction addHeadersToRequestOptions(\n  requestOptions,\n  requestUrl,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  // Don't overwrite sentry-trace and baggage header if it's already set.\n  const headers = requestOptions.headers || {};\n  if (headers['sentry-trace']) {\n    return;\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${requestUrl}\": `);\n\n  requestOptions.headers = {\n    ...requestOptions.headers,\n    'sentry-trace': sentryTraceHeader,\n    // Setting a header to `undefined` will crash in node so we only set the baggage header when it's defined\n    ...(sentryBaggageHeader &&\n      sentryBaggageHeader.length > 0 && { baggage: normalizeBaggageHeader(requestOptions, sentryBaggageHeader) }),\n  };\n}\n\nfunction getRequestSpanData(requestUrl, requestOptions) {\n  const method = requestOptions.method || 'GET';\n  const data = {\n    url: requestUrl,\n    'http.method': method,\n  };\n  if (requestOptions.hash) {\n    // strip leading \"#\"\n    data['http.fragment'] = requestOptions.hash.substring(1);\n  }\n  if (requestOptions.search) {\n    // strip leading \"?\"\n    data['http.query'] = requestOptions.search.substring(1);\n  }\n  return data;\n}\n\nfunction normalizeBaggageHeader(\n  requestOptions,\n  sentryBaggageHeader,\n) {\n  if (!requestOptions.headers || !requestOptions.headers.baggage) {\n    return sentryBaggageHeader;\n  } else if (!sentryBaggageHeader) {\n    return requestOptions.headers.baggage ;\n  } else if (Array.isArray(requestOptions.headers.baggage)) {\n    return [...requestOptions.headers.baggage, sentryBaggageHeader];\n  }\n  // Type-cast explanation:\n  // Technically this the following could be of type `(number | string)[]` but for the sake of simplicity\n  // we say this is undefined behaviour, since it would not be baggage spec conform if the user did this.\n  return [requestOptions.headers.baggage, sentryBaggageHeader] ;\n}\n\n/** Exported for tests only. */\nfunction _shouldCreateSpans(\n  tracingOptions,\n  clientOptions,\n) {\n  return tracingOptions === undefined\n    ? false\n    : tracingOptions.enableIfHasTracingEnabled\n      ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.hasTracingEnabled)(clientOptions)\n      : true;\n}\n\n/** Exported for tests only. */\nfunction _getShouldCreateSpanForRequest(\n  shouldCreateSpans,\n  tracingOptions,\n  clientOptions,\n) {\n  const handler = shouldCreateSpans\n    ? // eslint-disable-next-line deprecation/deprecation\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([tracingOptions, 'optionalAccess', _11 => _11.shouldCreateSpanForRequest]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([clientOptions, 'optionalAccess', _12 => _12.shouldCreateSpanForRequest])\n    : () => false;\n\n  return handler;\n}\n\n\n//# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/http.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Anr: () => (/* reexport safe */ _anr_index_js__WEBPACK_IMPORTED_MODULE_11__.Anr),\n/* harmony export */   Console: () => (/* reexport safe */ _console_js__WEBPACK_IMPORTED_MODULE_0__.Console),\n/* harmony export */   Context: () => (/* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_6__.Context),\n/* harmony export */   ContextLines: () => (/* reexport safe */ _contextlines_js__WEBPACK_IMPORTED_MODULE_5__.ContextLines),\n/* harmony export */   Hapi: () => (/* reexport safe */ _hapi_index_js__WEBPACK_IMPORTED_MODULE_12__.Hapi),\n/* harmony export */   Http: () => (/* reexport safe */ _http_js__WEBPACK_IMPORTED_MODULE_1__.Http),\n/* harmony export */   LocalVariables: () => (/* reexport safe */ _local_variables_index_js__WEBPACK_IMPORTED_MODULE_8__.LocalVariables),\n/* harmony export */   Modules: () => (/* reexport safe */ _modules_js__WEBPACK_IMPORTED_MODULE_4__.Modules),\n/* harmony export */   OnUncaughtException: () => (/* reexport safe */ _onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_2__.OnUncaughtException),\n/* harmony export */   OnUnhandledRejection: () => (/* reexport safe */ _onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_3__.OnUnhandledRejection),\n/* harmony export */   RequestData: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_7__.RequestData),\n/* harmony export */   Spotlight: () => (/* reexport safe */ _spotlight_js__WEBPACK_IMPORTED_MODULE_10__.Spotlight),\n/* harmony export */   Undici: () => (/* reexport safe */ _undici_index_js__WEBPACK_IMPORTED_MODULE_9__.Undici)\n/* harmony export */ });\n/* harmony import */ var _console_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./console.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/console.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/http.js\");\n/* harmony import */ var _onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onuncaughtexception.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js\");\n/* harmony import */ var _onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onunhandledrejection.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js\");\n/* harmony import */ var _modules_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/modules.js\");\n/* harmony import */ var _contextlines_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contextlines.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/contextlines.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/context.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js\");\n/* harmony import */ var _local_variables_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./local-variables/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/index.js\");\n/* harmony import */ var _undici_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./undici/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/undici/index.js\");\n/* harmony import */ var _spotlight_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./spotlight.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/spotlight.js\");\n/* harmony import */ var _anr_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./anr/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/anr/index.js\");\n/* harmony import */ var _hapi_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hapi/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/hapi/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable deprecation/deprecation */\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDTjtBQUM4QjtBQUNFO0FBQzFCO0FBQ1U7QUFDVjtBQUNJO0FBQ2lCO0FBQ2pCO0FBQ0E7QUFDTjtBQUNFOztBQUV2QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanM/ZjFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBDb25zb2xlIH0gZnJvbSAnLi9jb25zb2xlLmpzJztcbmV4cG9ydCB7IEh0dHAgfSBmcm9tICcuL2h0dHAuanMnO1xuZXhwb3J0IHsgT25VbmNhdWdodEV4Y2VwdGlvbiB9IGZyb20gJy4vb251bmNhdWdodGV4Y2VwdGlvbi5qcyc7XG5leHBvcnQgeyBPblVuaGFuZGxlZFJlamVjdGlvbiB9IGZyb20gJy4vb251bmhhbmRsZWRyZWplY3Rpb24uanMnO1xuZXhwb3J0IHsgTW9kdWxlcyB9IGZyb20gJy4vbW9kdWxlcy5qcyc7XG5leHBvcnQgeyBDb250ZXh0TGluZXMgfSBmcm9tICcuL2NvbnRleHRsaW5lcy5qcyc7XG5leHBvcnQgeyBDb250ZXh0IH0gZnJvbSAnLi9jb250ZXh0LmpzJztcbmV4cG9ydCB7IFJlcXVlc3REYXRhIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmV4cG9ydCB7IExvY2FsVmFyaWFibGVzIH0gZnJvbSAnLi9sb2NhbC12YXJpYWJsZXMvaW5kZXguanMnO1xuZXhwb3J0IHsgVW5kaWNpIH0gZnJvbSAnLi91bmRpY2kvaW5kZXguanMnO1xuZXhwb3J0IHsgU3BvdGxpZ2h0IH0gZnJvbSAnLi9zcG90bGlnaHQuanMnO1xuZXhwb3J0IHsgQW5yIH0gZnJvbSAnLi9hbnIvaW5kZXguanMnO1xuZXhwb3J0IHsgSGFwaSB9IGZyb20gJy4vaGFwaS9pbmRleC5qcyc7XG5cbi8qIGVzbGludC1kaXNhYmxlIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uICovXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/common.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/local-variables/common.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRateLimiter: () => (/* binding */ createRateLimiter),\n/* harmony export */   functionNamesMatch: () => (/* binding */ functionNamesMatch),\n/* harmony export */   hashFrames: () => (/* binding */ hashFrames),\n/* harmony export */   hashFromStack: () => (/* binding */ hashFromStack),\n/* harmony export */   isAnonymous: () => (/* binding */ isAnonymous)\n/* harmony export */ });\n/**\n * Creates a rate limiter that will call the disable callback when the rate limit is reached and the enable callback\n * when a timeout has occurred.\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nfunction createRateLimiter(\n  maxPerSecond,\n  enable,\n  disable,\n) {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && (name.length === 0 || name === '?' || name === '<anonymous>');\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\n\n//# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvbG9jYWwtdmFyaWFibGVzL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscURBQXFELElBQUksR0FBRyxlQUFlLEdBQUcsYUFBYSxHQUFHLFlBQVk7QUFDMUc7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUV5RjtBQUN6RiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vaW50ZWdyYXRpb25zL2xvY2FsLXZhcmlhYmxlcy9jb21tb24uanM/OWU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYSByYXRlIGxpbWl0ZXIgdGhhdCB3aWxsIGNhbGwgdGhlIGRpc2FibGUgY2FsbGJhY2sgd2hlbiB0aGUgcmF0ZSBsaW1pdCBpcyByZWFjaGVkIGFuZCB0aGUgZW5hYmxlIGNhbGxiYWNrXG4gKiB3aGVuIGEgdGltZW91dCBoYXMgb2NjdXJyZWQuXG4gKiBAcGFyYW0gbWF4UGVyU2Vjb25kIE1heGltdW0gbnVtYmVyIG9mIGNhbGxzIHBlciBzZWNvbmRcbiAqIEBwYXJhbSBlbmFibGUgQ2FsbGJhY2sgdG8gZW5hYmxlIGNhcHR1cmVcbiAqIEBwYXJhbSBkaXNhYmxlIENhbGxiYWNrIHRvIGRpc2FibGUgY2FwdHVyZVxuICogQHJldHVybnMgQSBmdW5jdGlvbiB0byBjYWxsIHRvIGluY3JlbWVudCB0aGUgcmF0ZSBsaW1pdGVyIGNvdW50XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJhdGVMaW1pdGVyKFxuICBtYXhQZXJTZWNvbmQsXG4gIGVuYWJsZSxcbiAgZGlzYWJsZSxcbikge1xuICBsZXQgY291bnQgPSAwO1xuICBsZXQgcmV0cnlTZWNvbmRzID0gNTtcbiAgbGV0IGRpc2FibGVkVGltZW91dCA9IDA7XG5cbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGlmIChkaXNhYmxlZFRpbWVvdXQgPT09IDApIHtcbiAgICAgIGlmIChjb3VudCA+IG1heFBlclNlY29uZCkge1xuICAgICAgICByZXRyeVNlY29uZHMgKj0gMjtcbiAgICAgICAgZGlzYWJsZShyZXRyeVNlY29uZHMpO1xuXG4gICAgICAgIC8vIENhcCBhdCBvbmUgZGF5XG4gICAgICAgIGlmIChyZXRyeVNlY29uZHMgPiA4NjQwMCkge1xuICAgICAgICAgIHJldHJ5U2Vjb25kcyA9IDg2NDAwO1xuICAgICAgICB9XG4gICAgICAgIGRpc2FibGVkVGltZW91dCA9IHJldHJ5U2Vjb25kcztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZGlzYWJsZWRUaW1lb3V0IC09IDE7XG5cbiAgICAgIGlmIChkaXNhYmxlZFRpbWVvdXQgPT09IDApIHtcbiAgICAgICAgZW5hYmxlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY291bnQgPSAwO1xuICB9LCAxMDAwKS51bnJlZigpO1xuXG4gIHJldHVybiAoKSA9PiB7XG4gICAgY291bnQgKz0gMTtcbiAgfTtcbn1cblxuLy8gQWRkIHR5cGVzIGZvciB0aGUgZXhjZXB0aW9uIGV2ZW50IGRhdGFcblxuLyoqIENvdWxkIHRoaXMgYmUgYW4gYW5vbnltb3VzIGZ1bmN0aW9uPyAqL1xuZnVuY3Rpb24gaXNBbm9ueW1vdXMobmFtZSkge1xuICByZXR1cm4gbmFtZSAhPT0gdW5kZWZpbmVkICYmIChuYW1lLmxlbmd0aCA9PT0gMCB8fCBuYW1lID09PSAnPycgfHwgbmFtZSA9PT0gJzxhbm9ueW1vdXM+Jyk7XG59XG5cbi8qKiBEbyB0aGUgZnVuY3Rpb24gbmFtZXMgYXBwZWFyIHRvIG1hdGNoPyAqL1xuZnVuY3Rpb24gZnVuY3Rpb25OYW1lc01hdGNoKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGIgfHwgKGlzQW5vbnltb3VzKGEpICYmIGlzQW5vbnltb3VzKGIpKTtcbn1cblxuLyoqIENyZWF0ZXMgYSB1bmlxdWUgaGFzaCBmcm9tIHN0YWNrIGZyYW1lcyAqL1xuZnVuY3Rpb24gaGFzaEZyYW1lcyhmcmFtZXMpIHtcbiAgaWYgKGZyYW1lcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gT25seSBoYXNoIHRoZSAxMCBtb3N0IHJlY2VudCBmcmFtZXMgKGllLiB0aGUgbGFzdCAxMClcbiAgcmV0dXJuIGZyYW1lcy5zbGljZSgtMTApLnJlZHVjZSgoYWNjLCBmcmFtZSkgPT4gYCR7YWNjfSwke2ZyYW1lLmZ1bmN0aW9ufSwke2ZyYW1lLmxpbmVub30sJHtmcmFtZS5jb2xub31gLCAnJyk7XG59XG5cbi8qKlxuICogV2UgdXNlIHRoZSBzdGFjayBwYXJzZXIgdG8gY3JlYXRlIGEgdW5pcXVlIGhhc2ggZnJvbSB0aGUgZXhjZXB0aW9uIHN0YWNrIHRyYWNlXG4gKiBUaGlzIGlzIHVzZWQgdG8gbG9va3VwIHZhcnMgd2hlbiB0aGUgZXhjZXB0aW9uIHBhc3NlcyB0aHJvdWdoIHRoZSBldmVudCBwcm9jZXNzb3JcbiAqL1xuZnVuY3Rpb24gaGFzaEZyb21TdGFjayhzdGFja1BhcnNlciwgc3RhY2spIHtcbiAgaWYgKHN0YWNrID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIGhhc2hGcmFtZXMoc3RhY2tQYXJzZXIoc3RhY2ssIDEpKTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlUmF0ZUxpbWl0ZXIsIGZ1bmN0aW9uTmFtZXNNYXRjaCwgaGFzaEZyYW1lcywgaGFzaEZyb21TdGFjaywgaXNBbm9ueW1vdXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/common.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/local-variables/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalVariables: () => (/* binding */ LocalVariables),\n/* harmony export */   localVariablesIntegration: () => (/* binding */ localVariablesIntegration)\n/* harmony export */ });\n/* harmony import */ var _local_variables_sync_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./local-variables-sync.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js\");\n\n\n/**\n * Adds local variables to exception frames.\n *\n * @deprecated Use `localVariablesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LocalVariables = _local_variables_sync_js__WEBPACK_IMPORTED_MODULE_0__.LocalVariablesSync;\n// eslint-disable-next-line deprecation/deprecation\n\nconst localVariablesIntegration = _local_variables_sync_js__WEBPACK_IMPORTED_MODULE_0__.localVariablesSyncIntegration;\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvbG9jYWwtdmFyaWFibGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4Rjs7QUFFOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdFQUFrQjtBQUN6Qzs7QUFFQSxrQ0FBa0MsbUZBQTZCOztBQUVWO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvbG9jYWwtdmFyaWFibGVzL2luZGV4LmpzPzY3MjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9jYWxWYXJpYWJsZXNTeW5jLCBsb2NhbFZhcmlhYmxlc1N5bmNJbnRlZ3JhdGlvbiB9IGZyb20gJy4vbG9jYWwtdmFyaWFibGVzLXN5bmMuanMnO1xuXG4vKipcbiAqIEFkZHMgbG9jYWwgdmFyaWFibGVzIHRvIGV4Y2VwdGlvbiBmcmFtZXMuXG4gKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBsb2NhbFZhcmlhYmxlc0ludGVncmF0aW9uKClgIGluc3RlYWQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgTG9jYWxWYXJpYWJsZXMgPSBMb2NhbFZhcmlhYmxlc1N5bmM7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cblxuY29uc3QgbG9jYWxWYXJpYWJsZXNJbnRlZ3JhdGlvbiA9IGxvY2FsVmFyaWFibGVzU3luY0ludGVncmF0aW9uO1xuXG5leHBvcnQgeyBMb2NhbFZhcmlhYmxlcywgbG9jYWxWYXJpYWJsZXNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalVariablesSync: () => (/* binding */ LocalVariablesSync),\n/* harmony export */   createCallbackList: () => (/* binding */ createCallbackList),\n/* harmony export */   localVariablesSyncIntegration: () => (/* binding */ localVariablesSyncIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/common.js\");\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = __webpack_require__(/*! inspector */ \"inspector\");\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) != null || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description]) != null) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value]) != null) {\n      vars[prop.name] = prop.value.value;\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) != null && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\nconst INTEGRATION_NAME = 'LocalVariables';\n\n/**\n * Adds local variables to exception frames\n */\nconst _localVariablesSyncIntegration = ((\n  options = {},\n  session = tryNewAsyncSession(),\n) => {\n  const cachedFrames = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(20);\n  let rateLimiter;\n  let shouldProcessEvent = false;\n\n  function handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([rateLimiter, 'optionalCall', _24 => _24()]);\n\n    // data.description contains the original error.stack\n    const exceptionHash = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.hashFromStack)(stackParser, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([data, 'optionalAccess', _25 => _25.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([localScope, 'optionalAccess', _26 => _26.object, 'access', _27 => _27.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([session, 'optionalAccess', _28 => _28.getLocalVariables, 'call', _29 => _29(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  function addLocalVariablesToException(exception) {\n    const hash = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.hashFrames)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([exception, 'optionalAccess', _30 => _30.stacktrace, 'optionalAccess', _31 => _31.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([exception, 'access', _32 => _32.stacktrace, 'optionalAccess', _33 => _33.frames]) || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!frames[frameIndex] || !cachedFrame[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrame[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !(0,_common_js__WEBPACK_IMPORTED_MODULE_2__.functionNamesMatch)(frames[frameIndex].function, cachedFrame[i].function)\n      ) {\n        continue;\n      }\n\n      frames[frameIndex].vars = cachedFrame[i].vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event) {\n    for (const exception of (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([event, 'optionalAccess', _34 => _34.exception, 'optionalAccess', _35 => _35.values]) || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n      const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([client, 'optionalAccess', _36 => _36.getOptions, 'call', _37 => _37()]);\n\n      if (session && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _38 => _38.includeLocalVariables])) {\n        // Only setup this integration if the Node version is >= v18\n        // https://github.com/getsentry/sentry-javascript/issues/7697\n        const unsupportedNodeVersion = _nodeVersion_js__WEBPACK_IMPORTED_MODULE_4__.NODE_VERSION.major < 18;\n\n        if (unsupportedNodeVersion) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n          return;\n        }\n\n        const captureAll = options.captureAllExceptions !== false;\n\n        session.configureAndConnect(\n          (ev, complete) =>\n            handlePaused(clientOptions.stackParser, ev , complete),\n          captureAll,\n        );\n\n        if (captureAll) {\n          const max = options.maxExceptionsPerSecond || 50;\n\n          rateLimiter = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.createRateLimiter)(\n            max,\n            () => {\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('Local variables rate-limit lifted.');\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([session, 'optionalAccess', _39 => _39.setPauseOnExceptions, 'call', _40 => _40(true)]);\n            },\n            seconds => {\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(\n                `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n              );\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([session, 'optionalAccess', _41 => _41.setPauseOnExceptions, 'call', _42 => _42(false)]);\n            },\n          );\n        }\n\n        shouldProcessEvent = true;\n      }\n    },\n    processEvent(event) {\n      if (shouldProcessEvent) {\n        return addLocalVariablesToEvent(event);\n      }\n\n      return event;\n    },\n    // These are entirely for testing\n    _getCachedFramesCount() {\n      return cachedFrames.size;\n    },\n    _getFirstCachedFrame() {\n      return cachedFrames.values()[0];\n    },\n  };\n}) ;\n\nconst localVariablesSyncIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.defineIntegration)(_localVariablesSyncIntegration);\n\n/**\n * Adds local variables to exception frames.\n * @deprecated Use `localVariablesSyncIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LocalVariablesSync = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  localVariablesSyncIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n\n//# sourceMappingURL=local-variables-sync.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/modules.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/modules.js ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modules: () => (/* binding */ Modules),\n/* harmony export */   modulesIntegration: () => (/* binding */ modulesIntegration)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\nlet moduleCache;\n\nconst INTEGRATION_NAME = 'Modules';\n\n/** Extract information about paths */\nfunction getPaths() {\n  try {\n    return __webpack_require__.c ? Object.keys(__webpack_require__.c ) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules()\n\n {\n  const mainPaths = (__webpack_require__.c[__webpack_require__.s] && __webpack_require__.c[__webpack_require__.s].paths) || [];\n  const paths = getPaths();\n  const infos\n\n = {};\n  const seen\n\n = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = () => {\n      const orig = dir;\n      dir = (0,path__WEBPACK_IMPORTED_MODULE_1__.dirname)(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!(0,fs__WEBPACK_IMPORTED_MODULE_0__.existsSync)(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse((0,fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync)(pkgfile, 'utf8'))\n\n;\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\nfunction _getModules() {\n  if (!moduleCache) {\n    moduleCache = collectModules();\n  }\n  return moduleCache;\n}\n\nconst _modulesIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      event.modules = {\n        ...event.modules,\n        ..._getModules(),\n      };\n\n      return event;\n    },\n  };\n}) ;\n\nconst modulesIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_modulesIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `modulesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Modules = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, modulesIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n\n//# sourceMappingURL=modules.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvbW9kdWxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThDO0FBQ1Q7QUFDeUM7O0FBRTlFOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscUJBQWEsZUFBZSxxQkFBYTtBQUNwRCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsNENBQVksSUFBSSw0Q0FBWTtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZDQUFPOztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLDBDQUFJO0FBQzFCOztBQUVBLFdBQVcsOENBQVU7QUFDckI7QUFDQTs7QUFFQTtBQUNBLGdDQUFnQyxnREFBWTs7QUFFNUM7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsMkJBQTJCLCtEQUFpQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5RUFBMkI7O0FBRTNDOztBQUVBOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vaW50ZWdyYXRpb25zL21vZHVsZXMuanM/ODA3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGlzdHNTeW5jLCByZWFkRmlsZVN5bmMgfSBmcm9tICdmcyc7XG5pbXBvcnQgeyBkaXJuYW1lLCBqb2luIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcblxubGV0IG1vZHVsZUNhY2hlO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ01vZHVsZXMnO1xuXG4vKiogRXh0cmFjdCBpbmZvcm1hdGlvbiBhYm91dCBwYXRocyAqL1xuZnVuY3Rpb24gZ2V0UGF0aHMoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHJlcXVpcmUuY2FjaGUgPyBPYmplY3Qua2V5cyhyZXF1aXJlLmNhY2hlICkgOiBbXTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vKiogRXh0cmFjdCBpbmZvcm1hdGlvbiBhYm91dCBwYWNrYWdlLmpzb24gbW9kdWxlcyAqL1xuZnVuY3Rpb24gY29sbGVjdE1vZHVsZXMoKVxuXG4ge1xuICBjb25zdCBtYWluUGF0aHMgPSAocmVxdWlyZS5tYWluICYmIHJlcXVpcmUubWFpbi5wYXRocykgfHwgW107XG4gIGNvbnN0IHBhdGhzID0gZ2V0UGF0aHMoKTtcbiAgY29uc3QgaW5mb3NcblxuID0ge307XG4gIGNvbnN0IHNlZW5cblxuID0ge307XG5cbiAgcGF0aHMuZm9yRWFjaChwYXRoID0+IHtcbiAgICBsZXQgZGlyID0gcGF0aDtcblxuICAgIC8qKiBUcmF2ZXJzZSBkaXJlY3RvcmllcyB1cHdhcmQgaW4gdGhlIHNlYXJjaCBvZiBwYWNrYWdlLmpzb24gZmlsZSAqL1xuICAgIGNvbnN0IHVwZGlyID0gKCkgPT4ge1xuICAgICAgY29uc3Qgb3JpZyA9IGRpcjtcbiAgICAgIGRpciA9IGRpcm5hbWUob3JpZyk7XG5cbiAgICAgIGlmICghZGlyIHx8IG9yaWcgPT09IGRpciB8fCBzZWVuW29yaWddKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICBpZiAobWFpblBhdGhzLmluZGV4T2YoZGlyKSA8IDApIHtcbiAgICAgICAgcmV0dXJuIHVwZGlyKCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHBrZ2ZpbGUgPSBqb2luKG9yaWcsICdwYWNrYWdlLmpzb24nKTtcbiAgICAgIHNlZW5bb3JpZ10gPSB0cnVlO1xuXG4gICAgICBpZiAoIWV4aXN0c1N5bmMocGtnZmlsZSkpIHtcbiAgICAgICAgcmV0dXJuIHVwZGlyKCk7XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGluZm8gPSBKU09OLnBhcnNlKHJlYWRGaWxlU3luYyhwa2dmaWxlLCAndXRmOCcpKVxuXG47XG4gICAgICAgIGluZm9zW2luZm8ubmFtZV0gPSBpbmZvLnZlcnNpb247XG4gICAgICB9IGNhdGNoIChfb08pIHtcbiAgICAgICAgLy8gbm8tZW1wdHlcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdXBkaXIoKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGluZm9zO1xufVxuXG4vKiogRmV0Y2hlcyB0aGUgbGlzdCBvZiBtb2R1bGVzIGFuZCB0aGUgdmVyc2lvbnMgbG9hZGVkIGJ5IHRoZSBlbnRyeSBmaWxlIGZvciB5b3VyIG5vZGUuanMgYXBwLiAqL1xuZnVuY3Rpb24gX2dldE1vZHVsZXMoKSB7XG4gIGlmICghbW9kdWxlQ2FjaGUpIHtcbiAgICBtb2R1bGVDYWNoZSA9IGNvbGxlY3RNb2R1bGVzKCk7XG4gIH1cbiAgcmV0dXJuIG1vZHVsZUNhY2hlO1xufVxuXG5jb25zdCBfbW9kdWxlc0ludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIC8vIFRPRE8gdjg6IFJlbW92ZSB0aGlzXG4gICAgc2V0dXBPbmNlKCkge30sIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgcHJvY2Vzc0V2ZW50KGV2ZW50KSB7XG4gICAgICBldmVudC5tb2R1bGVzID0ge1xuICAgICAgICAuLi5ldmVudC5tb2R1bGVzLFxuICAgICAgICAuLi5fZ2V0TW9kdWxlcygpLFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IG1vZHVsZXNJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9tb2R1bGVzSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIEFkZCBub2RlIG1vZHVsZXMgLyBwYWNrYWdlcyB0byB0aGUgZXZlbnQuXG4gKiBAZGVwcmVjYXRlZCBVc2UgYG1vZHVsZXNJbnRlZ3JhdGlvbigpYCBpbnN0ZWFkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IE1vZHVsZXMgPSBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MoSU5URUdSQVRJT05fTkFNRSwgbW9kdWxlc0ludGVncmF0aW9uKVxuXG47XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuXG5leHBvcnQgeyBNb2R1bGVzLCBtb2R1bGVzSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZHVsZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/modules.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnUncaughtException: () => (/* binding */ OnUncaughtException),\n/* harmony export */   makeErrorHandler: () => (/* binding */ makeErrorHandler),\n/* harmony export */   onUncaughtExceptionIntegration: () => (/* binding */ onUncaughtExceptionIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/node/esm/debug-build.js\");\n/* harmony import */ var _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/errorhandling.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js\");\n\n\n\n\n\nconst INTEGRATION_NAME = 'OnUncaughtException';\n\nconst _onUncaughtExceptionIntegration = ((options = {}) => {\n  const _options = {\n    exitEvenIfOtherHandlersAreRegistered: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      global.process.on('uncaughtException', makeErrorHandler(client, _options));\n    },\n  };\n}) ;\n\nconst onUncaughtExceptionIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_onUncaughtExceptionIntegration);\n\n/**\n * Global Exception handler.\n * @deprecated Use `onUncaughtExceptionIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst OnUncaughtException = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  onUncaughtExceptionIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/** Exported only for tests */\nfunction makeErrorHandler(client, options) {\n  const timeout = 2000;\n  let caughtFirstError = false;\n  let caughtSecondError = false;\n  let calledFatalError = false;\n  let firstError;\n\n  const clientOptions = client.getOptions();\n\n  return Object.assign(\n    (error) => {\n      let onFatalError = _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_1__.logAndExitProcess;\n\n      if (options.onFatalError) {\n        onFatalError = options.onFatalError;\n      } else if (clientOptions.onFatalError) {\n        onFatalError = clientOptions.onFatalError ;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (\n        global.process.listeners('uncaughtException')\n      ).reduce((acc, listener) => {\n        if (\n          // There are 3 listeners we ignore:\n          listener.name === 'domainUncaughtExceptionClear' || // as soon as we're using domains this listener is attached by node itself\n          (listener.tag && listener.tag === 'sentry_tracingErrorCallback') || // the handler we register for tracing\n          (listener )._errorHandler // the handler we register in this integration\n        ) {\n          return acc;\n        } else {\n          return acc + 1;\n        }\n      }, 0);\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() === client) {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(error, {\n            originalException: error,\n            captureContext: {\n              level: 'fatal',\n            },\n            mechanism: {\n              handled: false,\n              type: 'onuncaughtexception',\n            },\n          });\n        }\n\n        if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n          calledFatalError = true;\n          onFatalError(error);\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            (0,_utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_1__.logAndExitProcess)(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    },\n    { _errorHandler: true },\n  );\n}\n\n\n//# sourceMappingURL=onuncaughtexception.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnUnhandledRejection: () => (/* binding */ OnUnhandledRejection),\n/* harmony export */   makeUnhandledPromiseHandler: () => (/* binding */ makeUnhandledPromiseHandler),\n/* harmony export */   onUnhandledRejectionIntegration: () => (/* binding */ onUnhandledRejectionIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/errorhandling.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'OnUnhandledRejection';\n\nconst _onUnhandledRejectionIntegration = ((options = {}) => {\n  const mode = options.mode || 'warn';\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      global.process.on('unhandledRejection', makeUnhandledPromiseHandler(client, { mode }));\n    },\n  };\n}) ;\n\nconst onUnhandledRejectionIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_onUnhandledRejectionIntegration);\n\n/**\n * Global Promise Rejection handler.\n * @deprecated Use `onUnhandledRejectionIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst OnUnhandledRejection = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(\n  INTEGRATION_NAME,\n  onUnhandledRejectionIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Send an exception with reason\n * @param reason string\n * @param promise promise\n *\n * Exported only for tests.\n */\nfunction makeUnhandledPromiseHandler(\n  client,\n  options,\n) {\n  return function sendUnhandledPromise(reason, promise) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)() !== client) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(reason, {\n      originalException: promise,\n      captureContext: {\n        extra: { unhandledPromiseRejection: true },\n      },\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n\n    handleRejection(reason, options);\n  };\n}\n\n/**\n * Handler for `mode` option\n\n */\nfunction handleRejection(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason,\n  options,\n) {\n  // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n  const rejectionWarning =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block, ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason:';\n\n  /* eslint-disable no-console */\n  if (options.mode === 'warn') {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.consoleSandbox)(() => {\n      console.warn(rejectionWarning);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      console.error(reason && reason.stack ? reason.stack : reason);\n    });\n  } else if (options.mode === 'strict') {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.consoleSandbox)(() => {\n      console.warn(rejectionWarning);\n    });\n    (0,_utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_3__.logAndExitProcess)(reason);\n  }\n  /* eslint-enable no-console */\n}\n\n\n//# sourceMappingURL=onunhandledrejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvb251bmhhbmRsZWRyZWplY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEyRztBQUM1RDtBQUNjOztBQUU3RDs7QUFFQSx1REFBdUQ7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0Esb0ZBQW9GLE1BQU07QUFDMUYsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCx3Q0FBd0MsK0RBQWlCOztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHlFQUEyQjtBQUN4RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUztBQUNqQjtBQUNBOztBQUVBLElBQUksOERBQWdCO0FBQ3BCO0FBQ0E7QUFDQSxpQkFBaUIsaUNBQWlDO0FBQ2xELE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNkRBQWM7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSixJQUFJLDZEQUFjO0FBQ2xCO0FBQ0EsS0FBSztBQUNMLElBQUksMEVBQWlCO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFOEY7QUFDOUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL2ludGVncmF0aW9ucy9vbnVuaGFuZGxlZHJlamVjdGlvbi5qcz8wMjIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUludGVncmF0aW9uLCBjb252ZXJ0SW50ZWdyYXRpb25GblRvQ2xhc3MsIGdldENsaWVudCwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBjb25zb2xlU2FuZGJveCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgbG9nQW5kRXhpdFByb2Nlc3MgfSBmcm9tICcuL3V0aWxzL2Vycm9yaGFuZGxpbmcuanMnO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ09uVW5oYW5kbGVkUmVqZWN0aW9uJztcblxuY29uc3QgX29uVW5oYW5kbGVkUmVqZWN0aW9uSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBtb2RlID0gb3B0aW9ucy5tb2RlIHx8ICd3YXJuJztcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgLy8gVE9ETyB2ODogUmVtb3ZlIHRoaXNcbiAgICBzZXR1cE9uY2UoKSB7fSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICBzZXR1cChjbGllbnQpIHtcbiAgICAgIGdsb2JhbC5wcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCBtYWtlVW5oYW5kbGVkUHJvbWlzZUhhbmRsZXIoY2xpZW50LCB7IG1vZGUgfSkpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IG9uVW5oYW5kbGVkUmVqZWN0aW9uSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfb25VbmhhbmRsZWRSZWplY3Rpb25JbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogR2xvYmFsIFByb21pc2UgUmVqZWN0aW9uIGhhbmRsZXIuXG4gKiBAZGVwcmVjYXRlZCBVc2UgYG9uVW5oYW5kbGVkUmVqZWN0aW9uSW50ZWdyYXRpb24oKWAgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBPblVuaGFuZGxlZFJlamVjdGlvbiA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgb25VbmhhbmRsZWRSZWplY3Rpb25JbnRlZ3JhdGlvbixcbilcblxuO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cblxuLyoqXG4gKiBTZW5kIGFuIGV4Y2VwdGlvbiB3aXRoIHJlYXNvblxuICogQHBhcmFtIHJlYXNvbiBzdHJpbmdcbiAqIEBwYXJhbSBwcm9taXNlIHByb21pc2VcbiAqXG4gKiBFeHBvcnRlZCBvbmx5IGZvciB0ZXN0cy5cbiAqL1xuZnVuY3Rpb24gbWFrZVVuaGFuZGxlZFByb21pc2VIYW5kbGVyKFxuICBjbGllbnQsXG4gIG9wdGlvbnMsXG4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNlbmRVbmhhbmRsZWRQcm9taXNlKHJlYXNvbiwgcHJvbWlzZSkge1xuICAgIGlmIChnZXRDbGllbnQoKSAhPT0gY2xpZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY2FwdHVyZUV4Y2VwdGlvbihyZWFzb24sIHtcbiAgICAgIG9yaWdpbmFsRXhjZXB0aW9uOiBwcm9taXNlLFxuICAgICAgY2FwdHVyZUNvbnRleHQ6IHtcbiAgICAgICAgZXh0cmE6IHsgdW5oYW5kbGVkUHJvbWlzZVJlamVjdGlvbjogdHJ1ZSB9LFxuICAgICAgfSxcbiAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgdHlwZTogJ29udW5oYW5kbGVkcmVqZWN0aW9uJyxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBoYW5kbGVSZWplY3Rpb24ocmVhc29uLCBvcHRpb25zKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBIYW5kbGVyIGZvciBgbW9kZWAgb3B0aW9uXG5cbiAqL1xuZnVuY3Rpb24gaGFuZGxlUmVqZWN0aW9uKFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICByZWFzb24sXG4gIG9wdGlvbnMsXG4pIHtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2Jsb2IvN2NmNmY5ZTk2NGFhMDA3NzI5NjUzOTFjMjNhY2RhNmQ3MTk3MmE5YS9saWIvaW50ZXJuYWwvcHJvY2Vzcy9wcm9taXNlcy5qcyNMMjM0LUwyNDBcbiAgY29uc3QgcmVqZWN0aW9uV2FybmluZyA9XG4gICAgJ1RoaXMgZXJyb3Igb3JpZ2luYXRlZCBlaXRoZXIgYnkgJyArXG4gICAgJ3Rocm93aW5nIGluc2lkZSBvZiBhbiBhc3luYyBmdW5jdGlvbiB3aXRob3V0IGEgY2F0Y2ggYmxvY2ssICcgK1xuICAgICdvciBieSByZWplY3RpbmcgYSBwcm9taXNlIHdoaWNoIHdhcyBub3QgaGFuZGxlZCB3aXRoIC5jYXRjaCgpLicgK1xuICAgICcgVGhlIHByb21pc2UgcmVqZWN0ZWQgd2l0aCB0aGUgcmVhc29uOic7XG5cbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAob3B0aW9ucy5tb2RlID09PSAnd2FybicpIHtcbiAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICBjb25zb2xlLndhcm4ocmVqZWN0aW9uV2FybmluZyk7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICBjb25zb2xlLmVycm9yKHJlYXNvbiAmJiByZWFzb24uc3RhY2sgPyByZWFzb24uc3RhY2sgOiByZWFzb24pO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKG9wdGlvbnMubW9kZSA9PT0gJ3N0cmljdCcpIHtcbiAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICBjb25zb2xlLndhcm4ocmVqZWN0aW9uV2FybmluZyk7XG4gICAgfSk7XG4gICAgbG9nQW5kRXhpdFByb2Nlc3MocmVhc29uKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbn1cblxuZXhwb3J0IHsgT25VbmhhbmRsZWRSZWplY3Rpb24sIG1ha2VVbmhhbmRsZWRQcm9taXNlSGFuZGxlciwgb25VbmhhbmRsZWRSZWplY3Rpb25JbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b251bmhhbmRsZWRyZWplY3Rpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/spotlight.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/spotlight.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Spotlight: () => (/* binding */ Spotlight),\n/* harmony export */   getNativeHttpRequest: () => (/* binding */ getNativeHttpRequest),\n/* harmony export */   spotlightIntegration: () => (/* binding */ spotlightIntegration)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/envelope.js\");\n\n\n\n\n\nconst INTEGRATION_NAME = 'Spotlight';\n\nconst _spotlightIntegration = ((options = {}) => {\n  const _options = {\n    sidecarUrl: options.sidecarUrl || 'http://localhost:8969/stream',\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (typeof process === 'object' && process.env && \"development\" !== 'development') {}\n      connectToSpotlight(client, _options);\n    },\n  };\n}) ;\n\nconst spotlightIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_spotlightIntegration);\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer.\n *\n * @deprecated Use `spotlightIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Spotlight = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, spotlightIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.serializeEnvelope)(envelope);\n\n    const request = getNativeHttpRequest();\n    const req = request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new url__WEBPACK_IMPORTED_MODULE_1__.URL(`${url}`);\n  } catch (e) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\n/**\n * We want to get an unpatched http request implementation to avoid capturing our own calls.\n */\nfunction getNativeHttpRequest() {\n  const { request } = http__WEBPACK_IMPORTED_MODULE_0__;\n  if (isWrapped(request)) {\n    return request.__sentry_original__;\n  }\n\n  return request;\n}\n\nfunction isWrapped(impl) {\n  return '__sentry_original__' in impl;\n}\n\n\n//# sourceMappingURL=spotlight.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvc3BvdGxpZ2h0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDSDtBQUNvRDtBQUNwQjs7QUFFMUQ7O0FBRUEsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQSx3REFBd0QsYUFBb0Isb0JBQW9CLEVBRXpGO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELDZCQUE2QiwrREFBaUI7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUEyQjs7QUFFN0M7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksaURBQU07QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLGlEQUFNO0FBQ1o7QUFDQTs7QUFFQSwrQkFBK0IsZ0VBQWlCOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxpREFBTTtBQUNaLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSxlQUFlLG9DQUFHLElBQUksSUFBSTtBQUMxQixJQUFJO0FBQ0osSUFBSSxpREFBTSwwQ0FBMEMsSUFBSTtBQUN4RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLFVBQVUsRUFBRSxpQ0FBSTtBQUMxQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWlFO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvc3BvdGxpZ2h0LmpzPzc4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgaHR0cCBmcm9tICdodHRwJztcbmltcG9ydCB7IFVSTCB9IGZyb20gJ3VybCc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgY29udmVydEludGVncmF0aW9uRm5Ub0NsYXNzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGxvZ2dlciwgc2VyaWFsaXplRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdTcG90bGlnaHQnO1xuXG5jb25zdCBfc3BvdGxpZ2h0SW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBfb3B0aW9ucyA9IHtcbiAgICBzaWRlY2FyVXJsOiBvcHRpb25zLnNpZGVjYXJVcmwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODk2OS9zdHJlYW0nLFxuICB9O1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAvLyBUT0RPIHY4OiBSZW1vdmUgdGhpc1xuICAgIHNldHVwT25jZSgpIHt9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICBsb2dnZXIud2FybihcIltTcG90bGlnaHRdIEl0IHNlZW1zIHlvdSdyZSBub3QgaW4gZGV2IG1vZGUuIERvIHlvdSByZWFsbHkgd2FudCB0byBoYXZlIFNwb3RsaWdodCBlbmFibGVkP1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbm5lY3RUb1Nwb3RsaWdodChjbGllbnQsIF9vcHRpb25zKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBzcG90bGlnaHRJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9zcG90bGlnaHRJbnRlZ3JhdGlvbik7XG5cbi8qKlxuICogVXNlIHRoaXMgaW50ZWdyYXRpb24gdG8gc2VuZCBlcnJvcnMgYW5kIHRyYW5zYWN0aW9ucyB0byBTcG90bGlnaHQuXG4gKlxuICogTGVhcm4gbW9yZSBhYm91dCBzcG90bGlnaHQgYXQgaHR0cHM6Ly9zcG90bGlnaHRqcy5jb21cbiAqXG4gKiBJbXBvcnRhbnQ6IFRoaXMgaW50ZWdyYXRpb24gb25seSB3b3JrcyB3aXRoIE5vZGUgMTggb3IgbmV3ZXIuXG4gKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBzcG90bGlnaHRJbnRlZ3JhdGlvbigpYCBpbnN0ZWFkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IFNwb3RsaWdodCA9IGNvbnZlcnRJbnRlZ3JhdGlvbkZuVG9DbGFzcyhJTlRFR1JBVElPTl9OQU1FLCBzcG90bGlnaHRJbnRlZ3JhdGlvbilcblxuO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cblxuZnVuY3Rpb24gY29ubmVjdFRvU3BvdGxpZ2h0KGNsaWVudCwgb3B0aW9ucykge1xuICBjb25zdCBzcG90bGlnaHRVcmwgPSBwYXJzZVNpZGVjYXJVcmwob3B0aW9ucy5zaWRlY2FyVXJsKTtcbiAgaWYgKCFzcG90bGlnaHRVcmwpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgZmFpbGVkUmVxdWVzdHMgPSAwO1xuXG4gIGlmICh0eXBlb2YgY2xpZW50Lm9uICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgbG9nZ2VyLndhcm4oJ1tTcG90bGlnaHRdIENhbm5vdCBjb25uZWN0IHRvIHNwb3RsaWdodCBkdWUgdG8gbWlzc2luZyBtZXRob2Qgb24gU0RLIGNsaWVudCAoYGNsaWVudC5vbmApJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY2xpZW50Lm9uKCdiZWZvcmVFbnZlbG9wZScsIChlbnZlbG9wZSkgPT4ge1xuICAgIGlmIChmYWlsZWRSZXF1ZXN0cyA+IDMpIHtcbiAgICAgIGxvZ2dlci53YXJuKCdbU3BvdGxpZ2h0XSBEaXNhYmxlZCBTZW50cnkgLT4gU3BvdGxpZ2h0IGludGVncmF0aW9uIGR1ZSB0byB0b28gbWFueSBmYWlsZWQgcmVxdWVzdHMnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBzZXJpYWxpemVkRW52ZWxvcGUgPSBzZXJpYWxpemVFbnZlbG9wZShlbnZlbG9wZSk7XG5cbiAgICBjb25zdCByZXF1ZXN0ID0gZ2V0TmF0aXZlSHR0cFJlcXVlc3QoKTtcbiAgICBjb25zdCByZXEgPSByZXF1ZXN0KFxuICAgICAge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgcGF0aDogc3BvdGxpZ2h0VXJsLnBhdGhuYW1lLFxuICAgICAgICBob3N0bmFtZTogc3BvdGxpZ2h0VXJsLmhvc3RuYW1lLFxuICAgICAgICBwb3J0OiBzcG90bGlnaHRVcmwucG9ydCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC1zZW50cnktZW52ZWxvcGUnLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHJlcyA9PiB7XG4gICAgICAgIHJlcy5vbignZGF0YScsICgpID0+IHtcbiAgICAgICAgICAvLyBEcmFpbiBzb2NrZXRcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmVzLm9uKCdlbmQnLCAoKSA9PiB7XG4gICAgICAgICAgLy8gRHJhaW4gc29ja2V0XG4gICAgICAgIH0pO1xuICAgICAgICByZXMuc2V0RW5jb2RpbmcoJ3V0ZjgnKTtcbiAgICAgIH0sXG4gICAgKTtcblxuICAgIHJlcS5vbignZXJyb3InLCAoKSA9PiB7XG4gICAgICBmYWlsZWRSZXF1ZXN0cysrO1xuICAgICAgbG9nZ2VyLndhcm4oJ1tTcG90bGlnaHRdIEZhaWxlZCB0byBzZW5kIGVudmVsb3BlIHRvIFNwb3RsaWdodCBTaWRlY2FyJyk7XG4gICAgfSk7XG4gICAgcmVxLndyaXRlKHNlcmlhbGl6ZWRFbnZlbG9wZSk7XG4gICAgcmVxLmVuZCgpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcGFyc2VTaWRlY2FyVXJsKHVybCkge1xuICB0cnkge1xuICAgIHJldHVybiBuZXcgVVJMKGAke3VybH1gKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGxvZ2dlci53YXJuKGBbU3BvdGxpZ2h0XSBJbnZhbGlkIHNpZGVjYXIgVVJMOiAke3VybH1gKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogV2Ugd2FudCB0byBnZXQgYW4gdW5wYXRjaGVkIGh0dHAgcmVxdWVzdCBpbXBsZW1lbnRhdGlvbiB0byBhdm9pZCBjYXB0dXJpbmcgb3VyIG93biBjYWxscy5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlSHR0cFJlcXVlc3QoKSB7XG4gIGNvbnN0IHsgcmVxdWVzdCB9ID0gaHR0cDtcbiAgaWYgKGlzV3JhcHBlZChyZXF1ZXN0KSkge1xuICAgIHJldHVybiByZXF1ZXN0Ll9fc2VudHJ5X29yaWdpbmFsX187XG4gIH1cblxuICByZXR1cm4gcmVxdWVzdDtcbn1cblxuZnVuY3Rpb24gaXNXcmFwcGVkKGltcGwpIHtcbiAgcmV0dXJuICdfX3NlbnRyeV9vcmlnaW5hbF9fJyBpbiBpbXBsO1xufVxuXG5leHBvcnQgeyBTcG90bGlnaHQsIGdldE5hdGl2ZUh0dHBSZXF1ZXN0LCBzcG90bGlnaHRJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BvdGxpZ2h0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/spotlight.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/undici/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/undici/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelName: () => (/* binding */ ChannelName),\n/* harmony export */   Undici: () => (/* binding */ Undici),\n/* harmony export */   nativeNodeFetchintegration: () => (/* binding */ nativeNodeFetchintegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n\n\n\n\n\nvar ChannelName;(function (ChannelName) {\n  // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md#undicirequestcreate\n  const RequestCreate = 'undici:request:create'; ChannelName[\"RequestCreate\"] = RequestCreate;\n  const RequestEnd = 'undici:request:headers'; ChannelName[\"RequestEnd\"] = RequestEnd;\n  const RequestError = 'undici:request:error'; ChannelName[\"RequestError\"] = RequestError;\n})(ChannelName || (ChannelName = {}));\n\n// Please note that you cannot use `console.log` to debug the callbacks registered to the `diagnostics_channel` API.\n// To debug, you can use `writeFileSync` to write to a file:\n// https://nodejs.org/api/async_hooks.html#printing-in-asynchook-callbacks\n//\n// import { writeFileSync } from 'fs';\n// import { format } from 'util';\n//\n// function debug(...args: any): void {\n//   // Use a function like this one when debugging inside an AsyncHook callback\n//   // @ts-expect-error any\n//   writeFileSync('log.out', `${format(...args)}\\n`, { flag: 'a' });\n// }\n\nconst _nativeNodeFetchintegration = ((options) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Undici(options) ;\n}) ;\n\nconst nativeNodeFetchintegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_nativeNodeFetchintegration);\n\n/**\n * Instruments outgoing HTTP requests made with the `undici` package via\n * Node's `diagnostics_channel` API.\n *\n * Supports Undici 4.7.0 or higher.\n *\n * Requires Node 16.17.0 or higher.\n *\n * @deprecated Use `nativeNodeFetchintegration()` instead.\n */\nclass Undici  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Undici';}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   __init() {this.name = Undici.id;}\n\n    __init2() {this._createSpanUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(100);}\n    __init3() {this._headersUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(100);}\n\n   constructor(_options = {}) {Undici.prototype.__init.call(this);Undici.prototype.__init2.call(this);Undici.prototype.__init3.call(this);Undici.prototype.__init4.call(this);Undici.prototype.__init5.call(this);Undici.prototype.__init6.call(this);\n    this._options = {\n      breadcrumbs: _options.breadcrumbs === undefined ? true : _options.breadcrumbs,\n      tracing: _options.tracing,\n      shouldCreateSpanForRequest: _options.shouldCreateSpanForRequest,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobalEventProcessor) {\n    // Requires Node 16+ to use the diagnostics_channel API.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__.NODE_VERSION.major < 16) {\n      return;\n    }\n\n    let ds;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      ds = __webpack_require__(/*! diagnostics_channel */ \"diagnostics_channel\") ;\n    } catch (e) {\n      // no-op\n    }\n\n    if (!ds || !ds.subscribe) {\n      return;\n    }\n\n    // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md\n    ds.subscribe(ChannelName.RequestCreate, this._onRequestCreate);\n    ds.subscribe(ChannelName.RequestEnd, this._onRequestEnd);\n    ds.subscribe(ChannelName.RequestError, this._onRequestError);\n  }\n\n  /** Helper that wraps shouldCreateSpanForRequest option */\n   _shouldCreateSpan(url) {\n    if (this._options.tracing === false || (this._options.tracing === undefined && !(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.hasTracingEnabled)())) {\n      return false;\n    }\n\n    if (this._options.shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = this._options.shouldCreateSpanForRequest(url);\n    this._createSpanUrlMap.set(url, decision);\n    return decision;\n  }\n\n   __init4() {this._onRequestCreate = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient, 'call', _10 => _10(), 'optionalAccess', _11 => _11.getIntegration, 'call', _12 => _12(Undici)])) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient)();\n    if (!client) {\n      return;\n    }\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.isSentryRequestUrl)(stringUrl, client) || request.__sentry_span__ !== undefined) {\n      return;\n    }\n\n    const clientOptions = client.getOptions();\n    const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getCurrentScope)();\n    const isolationScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getIsolationScope)();\n    const parentSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.getActiveSpan)();\n\n    const span = this._shouldCreateSpan(stringUrl) ? createRequestSpan(parentSpan, request, stringUrl) : undefined;\n    if (span) {\n      request.__sentry_span__ = span;\n    }\n\n    const shouldAttachTraceData = (url) => {\n      if (clientOptions.tracePropagationTargets === undefined) {\n        return true;\n      }\n\n      const cachedDecision = this._headersUrlMap.get(url);\n      if (cachedDecision !== undefined) {\n        return cachedDecision;\n      }\n\n      const decision = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.stringMatchesSomePattern)(url, clientOptions.tracePropagationTargets);\n      this._headersUrlMap.set(url, decision);\n      return decision;\n    };\n\n    if (shouldAttachTraceData(stringUrl)) {\n      const { traceId, spanId, sampled, dsc } = {\n        ...isolationScope.getPropagationContext(),\n        ...scope.getPropagationContext(),\n      };\n\n      const sentryTraceHeader = span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.spanToTraceHeader)(span) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n      const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.dynamicSamplingContextToSentryBaggageHeader)(\n        dsc ||\n          (span\n            ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.getDynamicSamplingContextFromSpan)(span)\n            : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.getDynamicSamplingContextFromClient)(traceId, client, scope)),\n      );\n\n      setHeadersOnRequest(request, sentryTraceHeader, sentryBaggageHeader);\n    }\n  };}\n\n   __init5() {this._onRequestEnd = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient, 'call', _13 => _13(), 'optionalAccess', _14 => _14.getIntegration, 'call', _15 => _15(Undici)])) {\n      return;\n    }\n\n    const { request, response } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.isSentryRequestUrl)(stringUrl, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient)())) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.setHttpStatus)(span, response.statusCode);\n      span.end();\n    }\n\n    if (this._options.breadcrumbs) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.addBreadcrumb)(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            status_code: response.statusCode,\n            url: stringUrl,\n          },\n          type: 'http',\n        },\n        {\n          event: 'response',\n          request,\n          response,\n        },\n      );\n    }\n  };}\n\n   __init6() {this._onRequestError = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient, 'call', _16 => _16(), 'optionalAccess', _17 => _17.getIntegration, 'call', _18 => _18(Undici)])) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.isSentryRequestUrl)(stringUrl, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient)())) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setStatus('internal_error');\n      span.end();\n    }\n\n    if (this._options.breadcrumbs) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.addBreadcrumb)(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            url: stringUrl,\n          },\n          level: 'error',\n          type: 'http',\n        },\n        {\n          event: 'error',\n          request,\n        },\n      );\n    }\n  };}\n}Undici.__initStatic();\n\nfunction setHeadersOnRequest(\n  request,\n  sentryTrace,\n  sentryBaggageHeader,\n) {\n  let hasSentryHeaders;\n  if (Array.isArray(request.headers)) {\n    hasSentryHeaders = request.headers.some(headerLine => headerLine === 'sentry-trace');\n  } else {\n    const headerLines = request.headers.split('\\r\\n');\n    hasSentryHeaders = headerLines.some(headerLine => headerLine.startsWith('sentry-trace:'));\n  }\n\n  if (hasSentryHeaders) {\n    return;\n  }\n\n  request.addHeader('sentry-trace', sentryTrace);\n  if (sentryBaggageHeader) {\n    request.addHeader('baggage', sentryBaggageHeader);\n  }\n}\n\nfunction createRequestSpan(\n  activeSpan,\n  request,\n  stringUrl,\n) {\n  const url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.parseUrl)(stringUrl);\n\n  const method = request.method || 'GET';\n  const data = {\n    'http.method': method,\n  };\n  if (url.search) {\n    data['http.query'] = url.search;\n  }\n  if (url.hash) {\n    data['http.fragment'] = url.hash;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([activeSpan, 'optionalAccess', _19 => _19.startChild, 'call', _20 => _20({\n    op: 'http.client',\n    origin: 'auto.http.node.undici',\n    description: `${method} ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.getSanitizedUrlString)(url)}`,\n    data,\n  })]);\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/undici/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logAndExitProcess: () => (/* binding */ logAndExitProcess)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../debug-build.js */ \"(rsc)/./node_modules/@sentry/node/esm/debug-build.js\");\n\n\n\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  if (client === undefined) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);\n    },\n  );\n}\n\n\n//# sourceMappingURL=errorhandling.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9pbnRlZ3JhdGlvbnMvdXRpbHMvZXJyb3JoYW5kbGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ2M7QUFDSjs7QUFFbkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDZEQUFjO0FBQ2hCO0FBQ0E7QUFDQSxHQUFHOztBQUVILGlCQUFpQix1REFBUzs7QUFFMUI7QUFDQSxJQUFJLHdEQUFXLElBQUksaURBQU07QUFDekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQVcsSUFBSSxpREFBTTtBQUM3QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsTUFBTSx3REFBVyxJQUFJLGlEQUFNO0FBQzNCLEtBQUs7QUFDTDtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vaW50ZWdyYXRpb25zL3V0aWxzL2Vycm9yaGFuZGxpbmcuanM/YmE0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgY29uc29sZVNhbmRib3gsIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi8uLi9kZWJ1Zy1idWlsZC5qcyc7XG5cbmNvbnN0IERFRkFVTFRfU0hVVERPV05fVElNRU9VVCA9IDIwMDA7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBsb2dBbmRFeGl0UHJvY2VzcyhlcnJvcikge1xuICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgfSk7XG5cbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG5cbiAgaWYgKGNsaWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLndhcm4oJ05vIE5vZGVDbGllbnQgd2FzIGRlZmluZWQsIHdlIGFyZSBleGl0aW5nIHRoZSBwcm9jZXNzIG5vdy4nKTtcbiAgICBnbG9iYWwucHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudC5nZXRPcHRpb25zKCk7XG4gIGNvbnN0IHRpbWVvdXQgPVxuICAgIChvcHRpb25zICYmIG9wdGlvbnMuc2h1dGRvd25UaW1lb3V0ICYmIG9wdGlvbnMuc2h1dGRvd25UaW1lb3V0ID4gMCAmJiBvcHRpb25zLnNodXRkb3duVGltZW91dCkgfHxcbiAgICBERUZBVUxUX1NIVVRET1dOX1RJTUVPVVQ7XG4gIGNsaWVudC5jbG9zZSh0aW1lb3V0KS50aGVuKFxuICAgIChyZXN1bHQpID0+IHtcbiAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci53YXJuKCdXZSByZWFjaGVkIHRoZSB0aW1lb3V0IGZvciBlbXB0eWluZyB0aGUgcmVxdWVzdCBidWZmZXIsIHN0aWxsIGV4aXRpbmcgbm93IScpO1xuICAgICAgfVxuICAgICAgZ2xvYmFsLnByb2Nlc3MuZXhpdCgxKTtcbiAgICB9LFxuICAgIGVycm9yID0+IHtcbiAgICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5lcnJvcihlcnJvcik7XG4gICAgfSxcbiAgKTtcbn1cblxuZXhwb3J0IHsgbG9nQW5kRXhpdFByb2Nlc3MgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yaGFuZGxpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/integrations/utils/http.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/integrations/utils/http.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanSpanDescription: () => (/* binding */ cleanSpanDescription),\n/* harmony export */   extractRawUrl: () => (/* binding */ extractRawUrl),\n/* harmony export */   extractUrl: () => (/* binding */ extractUrl),\n/* harmony export */   normalizeRequestArgs: () => (/* binding */ normalizeRequestArgs),\n/* harmony export */   urlToOptions: () => (/* binding */ urlToOptions)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodeVersion.js */ \"(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\");\n\n\n\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nfunction extractRawUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nfunction extractUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n\n  const path = requestOptions.pathname || '/';\n\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth) {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nfunction cleanSpanDescription(\n  description,\n  requestOptions,\n  request,\n) {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(request ), 'optionalAccess', _ => _.agent, 'optionalAccess', _2 => _2.protocol]); // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([requestUrl, 'optionalAccess', _3 => _3.startsWith, 'call', _4 => _4('///')])) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nfunction normalizeRequestArgs(\n  httpModule,\n  requestArgs,\n) {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() ;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new url__WEBPACK_IMPORTED_MODULE_0__.URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof url__WEBPACK_IMPORTED_MODULE_0__.URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n\n    try {\n      const parsed = new url__WEBPACK_IMPORTED_MODULE_0__.URL(\n        requestOptions.path || '',\n        `${requestOptions.protocol || 'http:'}//${requestOptions.hostname}`,\n      );\n      requestOptions = {\n        pathname: parsed.pathname,\n        search: parsed.search,\n        hash: parsed.hash,\n        ...requestOptions,\n      };\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__.NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([httpModule, 'optionalAccess', _5 => _5.globalAgent]) ), 'optionalAccess', _6 => _6.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions.agent ), 'optionalAccess', _7 => _7.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions._defaultAgent ), 'optionalAccess', _8 => _8.protocol]);\n    } else {\n      requestOptions.protocol =\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions.agent ), 'optionalAccess', _9 => _9.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions._defaultAgent ), 'optionalAccess', _10 => _10.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([httpModule, 'optionalAccess', _11 => _11.globalAgent]) ), 'optionalAccess', _12 => _12.protocol]);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n\nfunction parseRequestOptions(requestOptions)\n\n {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n\n  return { protocol, hostname, port };\n}\n\n\n//# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/integrations/utils/http.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/module.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/node/esm/module.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGetModuleFromFilename: () => (/* binding */ createGetModuleFromFilename)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/path.js\");\n\n\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path) {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Creates a function that gets the module name from a filename */\nfunction createGetModuleFromFilename(\n  basePath = process.argv[1] ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dirname)(process.argv[1]) : process.cwd(),\n  isWindows = path__WEBPACK_IMPORTED_MODULE_0__.sep === '\\\\',\n) {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath;\n\n  return (filename) => {\n    if (!filename) {\n      return;\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename;\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = path__WEBPACK_IMPORTED_MODULE_0__.posix.parse(normalizedFilename);\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1);\n    }\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.';\n    }\n\n    const n = dir.lastIndexOf('/node_modules');\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      let moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.');\n\n      if (moduleName) {\n        moduleName += ':';\n      }\n      moduleName += file;\n\n      return moduleName;\n    }\n\n    return file;\n  };\n}\n\n\n//# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9tb2R1bGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrQztBQUNNOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCLHNEQUFPO0FBQ3RDLGNBQWMscUNBQUc7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFVBQVUsdUJBQXVCLEVBQUUsdUNBQUs7O0FBRXhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLHNDQUFzQyxHQUFHLEtBQUs7QUFDOUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRXVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9tb2R1bGUuanM/ZjdmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwb3NpeCwgc2VwIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBkaXJuYW1lIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBub3JtYWxpemVzIFdpbmRvd3MgcGF0aHMgKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZVdpbmRvd3NQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGhcbiAgICAucmVwbGFjZSgvXltBLVpdOi8sICcnKSAvLyByZW1vdmUgV2luZG93cy1zdHlsZSBwcmVmaXhcbiAgICAucmVwbGFjZSgvXFxcXC9nLCAnLycpOyAvLyByZXBsYWNlIGFsbCBgXFxgIGluc3RhbmNlcyB3aXRoIGAvYFxufVxuXG4vKiogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgZ2V0cyB0aGUgbW9kdWxlIG5hbWUgZnJvbSBhIGZpbGVuYW1lICovXG5mdW5jdGlvbiBjcmVhdGVHZXRNb2R1bGVGcm9tRmlsZW5hbWUoXG4gIGJhc2VQYXRoID0gcHJvY2Vzcy5hcmd2WzFdID8gZGlybmFtZShwcm9jZXNzLmFyZ3ZbMV0pIDogcHJvY2Vzcy5jd2QoKSxcbiAgaXNXaW5kb3dzID0gc2VwID09PSAnXFxcXCcsXG4pIHtcbiAgY29uc3Qgbm9ybWFsaXplZEJhc2UgPSBpc1dpbmRvd3MgPyBub3JtYWxpemVXaW5kb3dzUGF0aChiYXNlUGF0aCkgOiBiYXNlUGF0aDtcblxuICByZXR1cm4gKGZpbGVuYW1lKSA9PiB7XG4gICAgaWYgKCFmaWxlbmFtZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG5vcm1hbGl6ZWRGaWxlbmFtZSA9IGlzV2luZG93cyA/IG5vcm1hbGl6ZVdpbmRvd3NQYXRoKGZpbGVuYW1lKSA6IGZpbGVuYW1lO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdFxuICAgIGxldCB7IGRpciwgYmFzZTogZmlsZSwgZXh0IH0gPSBwb3NpeC5wYXJzZShub3JtYWxpemVkRmlsZW5hbWUpO1xuXG4gICAgaWYgKGV4dCA9PT0gJy5qcycgfHwgZXh0ID09PSAnLm1qcycgfHwgZXh0ID09PSAnLmNqcycpIHtcbiAgICAgIGZpbGUgPSBmaWxlLnNsaWNlKDAsIGV4dC5sZW5ndGggKiAtMSk7XG4gICAgfVxuXG4gICAgaWYgKCFkaXIpIHtcbiAgICAgIC8vIE5vIGRpcm5hbWUgd2hhdHNvZXZlclxuICAgICAgZGlyID0gJy4nO1xuICAgIH1cblxuICAgIGNvbnN0IG4gPSBkaXIubGFzdEluZGV4T2YoJy9ub2RlX21vZHVsZXMnKTtcbiAgICBpZiAobiA+IC0xKSB7XG4gICAgICByZXR1cm4gYCR7ZGlyLnNsaWNlKG4gKyAxNCkucmVwbGFjZSgvXFwvL2csICcuJyl9OiR7ZmlsZX1gO1xuICAgIH1cblxuICAgIC8vIExldCdzIHNlZSBpZiBpdCdzIGEgcGFydCBvZiB0aGUgbWFpbiBtb2R1bGVcbiAgICAvLyBUbyBiZSBhIHBhcnQgb2YgbWFpbiBtb2R1bGUsIGl0IGhhcyB0byBzaGFyZSB0aGUgc2FtZSBiYXNlXG4gICAgaWYgKGRpci5zdGFydHNXaXRoKG5vcm1hbGl6ZWRCYXNlKSkge1xuICAgICAgbGV0IG1vZHVsZU5hbWUgPSBkaXIuc2xpY2Uobm9ybWFsaXplZEJhc2UubGVuZ3RoICsgMSkucmVwbGFjZSgvXFwvL2csICcuJyk7XG5cbiAgICAgIGlmIChtb2R1bGVOYW1lKSB7XG4gICAgICAgIG1vZHVsZU5hbWUgKz0gJzonO1xuICAgICAgfVxuICAgICAgbW9kdWxlTmFtZSArPSBmaWxlO1xuXG4gICAgICByZXR1cm4gbW9kdWxlTmFtZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmlsZTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlR2V0TW9kdWxlRnJvbUZpbGVuYW1lIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2R1bGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/module.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/nodeVersion.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_VERSION: () => (/* binding */ NODE_VERSION)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n\n\nconst NODE_VERSION = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseSemver)(process.versions.node) ;\n\n\n//# sourceMappingURL=nodeVersion.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9ub2RlVmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0Qzs7QUFFNUMscUJBQXFCLDBEQUFXOztBQUVSO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9ub2RlVmVyc2lvbi5qcz9lY2UyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlU2VtdmVyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IE5PREVfVkVSU0lPTiA9IHBhcnNlU2VtdmVyKHByb2Nlc3MudmVyc2lvbnMubm9kZSkgO1xuXG5leHBvcnQgeyBOT0RFX1ZFUlNJT04gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGVWZXJzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/nodeVersion.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/proxy/base.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/node/esm/proxy/base.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n/**\n* This code was originally forked from https://github.com/TooTallNate/proxy-agents/tree/b133295fd16f6475578b6b15bd9b4e33ecb0d0b7\n* With the following licence:\n*\n* (The MIT License)\n*\n* Copyright (c) 2013 Nathan Rajlich <nathan@tootallnate.net>*\n*\n* Permission is hereby granted, free of charge, to any person obtaining\n* a copy of this software and associated documentation files (the\n* 'Software'), to deal in the Software without restriction, including\n* without limitation the rights to use, copy, modify, merge, publish,\n* distribute, sublicense, and/or sell copies of the Software, and to\n* permit persons to whom the Software is furnished to do so, subject to\n* the following conditions:*\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.*\n*\n* THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst INTERNAL = Symbol('AgentBaseInternalState');\n\nclass Agent extends http__WEBPACK_IMPORTED_MODULE_0__.Agent {\n\n  // Set by `http.Agent` - missing from `@types/node`\n\n  constructor(opts) {\n    super(opts);\n    this[INTERNAL] = {};\n  }\n\n  /**\n   * Determine whether this is an `http` or `https` request.\n   */\n  isSecureEndpoint(options) {\n    if (options) {\n      // First check the `secureEndpoint` property explicitly, since this\n      // means that a parent `Agent` is \"passing through\" to this instance.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      if (typeof (options ).secureEndpoint === 'boolean') {\n        return options.secureEndpoint;\n      }\n\n      // If no explicit `secure` endpoint, check if `protocol` property is\n      // set. This will usually be the case since using a full string URL\n      // or `URL` instance should be the most common usage.\n      if (typeof options.protocol === 'string') {\n        return options.protocol === 'https:';\n      }\n    }\n\n    // Finally, if no `protocol` property was set, then fall back to\n    // checking the stack trace of the current call stack, and try to\n    // detect the \"https\" module.\n    const { stack } = new Error();\n    if (typeof stack !== 'string') return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n  }\n\n  createSocket(req, options, cb) {\n    const connectOpts = {\n      ...options,\n      secureEndpoint: this.isSecureEndpoint(options),\n    };\n    Promise.resolve()\n      .then(() => this.connect(req, connectOpts))\n      .then(socket => {\n        if (socket instanceof http__WEBPACK_IMPORTED_MODULE_0__.Agent) {\n          // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n          return socket.addRequest(req, connectOpts);\n        }\n        this[INTERNAL].currentSocket = socket;\n        // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n        super.createSocket(req, options, cb);\n      }, cb);\n  }\n\n  createConnection() {\n    const socket = this[INTERNAL].currentSocket;\n    this[INTERNAL].currentSocket = undefined;\n    if (!socket) {\n      throw new Error('No socket was returned in the `connect()` function');\n    }\n    return socket;\n  }\n\n  get defaultPort() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._nullishCoalesce)(this[INTERNAL].defaultPort, () => ( (this.protocol === 'https:' ? 443 : 80)));\n  }\n\n  set defaultPort(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].defaultPort = v;\n    }\n  }\n\n  get protocol() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._nullishCoalesce)(this[INTERNAL].protocol, () => ( (this.isSecureEndpoint() ? 'https:' : 'http:')));\n  }\n\n  set protocol(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].protocol = v;\n    }\n  }\n}\n\n\n//# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9wcm94eS9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNwQjtBQUNkOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IsdUNBQVU7O0FBRTlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHVDQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVywrREFBZ0I7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsK0RBQWdCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL3Byb3h5L2Jhc2UuanM/ZTdiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgKiBhcyBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0ICdodHRwcyc7XG5cbi8qKlxuKiBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgZm9ya2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL1Rvb1RhbGxOYXRlL3Byb3h5LWFnZW50cy90cmVlL2IxMzMyOTVmZDE2ZjY0NzU1NzhiNmIxNWJkOWI0ZTMzZWNiMGQwYjdcbiogV2l0aCB0aGUgZm9sbG93aW5nIGxpY2VuY2U6XG4qXG4qIChUaGUgTUlUIExpY2Vuc2UpXG4qXG4qIENvcHlyaWdodCAoYykgMjAxMyBOYXRoYW4gUmFqbGljaCA8bmF0aGFuQHRvb3RhbGxuYXRlLm5ldD4qXG4qXG4qIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZ1xuKiBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbiogJ1NvZnR3YXJlJyksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4qIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0b1xuKiBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG9cbiogdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOipcbipcbiogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmVcbiogaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuKlxuKlxuKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCxcbiogRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4qIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5cbiogSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTllcbiogQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbiogVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEVcbiogU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4qL1xuXG5jb25zdCBJTlRFUk5BTCA9IFN5bWJvbCgnQWdlbnRCYXNlSW50ZXJuYWxTdGF0ZScpO1xuXG5jbGFzcyBBZ2VudCBleHRlbmRzIGh0dHAuQWdlbnQge1xuXG4gIC8vIFNldCBieSBgaHR0cC5BZ2VudGAgLSBtaXNzaW5nIGZyb20gYEB0eXBlcy9ub2RlYFxuXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICBzdXBlcihvcHRzKTtcbiAgICB0aGlzW0lOVEVSTkFMXSA9IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVybWluZSB3aGV0aGVyIHRoaXMgaXMgYW4gYGh0dHBgIG9yIGBodHRwc2AgcmVxdWVzdC5cbiAgICovXG4gIGlzU2VjdXJlRW5kcG9pbnQob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAvLyBGaXJzdCBjaGVjayB0aGUgYHNlY3VyZUVuZHBvaW50YCBwcm9wZXJ0eSBleHBsaWNpdGx5LCBzaW5jZSB0aGlzXG4gICAgICAvLyBtZWFucyB0aGF0IGEgcGFyZW50IGBBZ2VudGAgaXMgXCJwYXNzaW5nIHRocm91Z2hcIiB0byB0aGlzIGluc3RhbmNlLlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgaWYgKHR5cGVvZiAob3B0aW9ucyApLnNlY3VyZUVuZHBvaW50ID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuc2VjdXJlRW5kcG9pbnQ7XG4gICAgICB9XG5cbiAgICAgIC8vIElmIG5vIGV4cGxpY2l0IGBzZWN1cmVgIGVuZHBvaW50LCBjaGVjayBpZiBgcHJvdG9jb2xgIHByb3BlcnR5IGlzXG4gICAgICAvLyBzZXQuIFRoaXMgd2lsbCB1c3VhbGx5IGJlIHRoZSBjYXNlIHNpbmNlIHVzaW5nIGEgZnVsbCBzdHJpbmcgVVJMXG4gICAgICAvLyBvciBgVVJMYCBpbnN0YW5jZSBzaG91bGQgYmUgdGhlIG1vc3QgY29tbW9uIHVzYWdlLlxuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnByb3RvY29sID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5wcm90b2NvbCA9PT0gJ2h0dHBzOic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmluYWxseSwgaWYgbm8gYHByb3RvY29sYCBwcm9wZXJ0eSB3YXMgc2V0LCB0aGVuIGZhbGwgYmFjayB0b1xuICAgIC8vIGNoZWNraW5nIHRoZSBzdGFjayB0cmFjZSBvZiB0aGUgY3VycmVudCBjYWxsIHN0YWNrLCBhbmQgdHJ5IHRvXG4gICAgLy8gZGV0ZWN0IHRoZSBcImh0dHBzXCIgbW9kdWxlLlxuICAgIGNvbnN0IHsgc3RhY2sgfSA9IG5ldyBFcnJvcigpO1xuICAgIGlmICh0eXBlb2Ygc3RhY2sgIT09ICdzdHJpbmcnKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHN0YWNrLnNwbGl0KCdcXG4nKS5zb21lKGwgPT4gbC5pbmRleE9mKCcoaHR0cHMuanM6JykgIT09IC0xIHx8IGwuaW5kZXhPZignbm9kZTpodHRwczonKSAhPT0gLTEpO1xuICB9XG5cbiAgY3JlYXRlU29ja2V0KHJlcSwgb3B0aW9ucywgY2IpIHtcbiAgICBjb25zdCBjb25uZWN0T3B0cyA9IHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBzZWN1cmVFbmRwb2ludDogdGhpcy5pc1NlY3VyZUVuZHBvaW50KG9wdGlvbnMpLFxuICAgIH07XG4gICAgUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgIC50aGVuKCgpID0+IHRoaXMuY29ubmVjdChyZXEsIGNvbm5lY3RPcHRzKSlcbiAgICAgIC50aGVuKHNvY2tldCA9PiB7XG4gICAgICAgIGlmIChzb2NrZXQgaW5zdGFuY2VvZiBodHRwLkFnZW50KSB7XG4gICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgYWRkUmVxdWVzdCgpYCBpc24ndCBkZWZpbmVkIGluIGBAdHlwZXMvbm9kZWBcbiAgICAgICAgICByZXR1cm4gc29ja2V0LmFkZFJlcXVlc3QocmVxLCBjb25uZWN0T3B0cyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpc1tJTlRFUk5BTF0uY3VycmVudFNvY2tldCA9IHNvY2tldDtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgY3JlYXRlU29ja2V0KClgIGlzbid0IGRlZmluZWQgaW4gYEB0eXBlcy9ub2RlYFxuICAgICAgICBzdXBlci5jcmVhdGVTb2NrZXQocmVxLCBvcHRpb25zLCBjYik7XG4gICAgICB9LCBjYik7XG4gIH1cblxuICBjcmVhdGVDb25uZWN0aW9uKCkge1xuICAgIGNvbnN0IHNvY2tldCA9IHRoaXNbSU5URVJOQUxdLmN1cnJlbnRTb2NrZXQ7XG4gICAgdGhpc1tJTlRFUk5BTF0uY3VycmVudFNvY2tldCA9IHVuZGVmaW5lZDtcbiAgICBpZiAoIXNvY2tldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBzb2NrZXQgd2FzIHJldHVybmVkIGluIHRoZSBgY29ubmVjdCgpYCBmdW5jdGlvbicpO1xuICAgIH1cbiAgICByZXR1cm4gc29ja2V0O1xuICB9XG5cbiAgZ2V0IGRlZmF1bHRQb3J0KCkge1xuICAgIHJldHVybiBfbnVsbGlzaENvYWxlc2NlKHRoaXNbSU5URVJOQUxdLmRlZmF1bHRQb3J0LCAoKSA9PiAoICh0aGlzLnByb3RvY29sID09PSAnaHR0cHM6JyA/IDQ0MyA6IDgwKSkpO1xuICB9XG5cbiAgc2V0IGRlZmF1bHRQb3J0KHYpIHtcbiAgICBpZiAodGhpc1tJTlRFUk5BTF0pIHtcbiAgICAgIHRoaXNbSU5URVJOQUxdLmRlZmF1bHRQb3J0ID0gdjtcbiAgICB9XG4gIH1cblxuICBnZXQgcHJvdG9jb2woKSB7XG4gICAgcmV0dXJuIF9udWxsaXNoQ29hbGVzY2UodGhpc1tJTlRFUk5BTF0ucHJvdG9jb2wsICgpID0+ICggKHRoaXMuaXNTZWN1cmVFbmRwb2ludCgpID8gJ2h0dHBzOicgOiAnaHR0cDonKSkpO1xuICB9XG5cbiAgc2V0IHByb3RvY29sKHYpIHtcbiAgICBpZiAodGhpc1tJTlRFUk5BTF0pIHtcbiAgICAgIHRoaXNbSU5URVJOQUxdLnByb3RvY29sID0gdjtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgQWdlbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/proxy/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/proxy/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/node/esm/proxy/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpsProxyAgent: () => (/* binding */ HttpsProxyAgent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! net */ \"net\");\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(net__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tls */ \"tls\");\n/* harmony import */ var tls__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tls__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/@sentry/node/esm/proxy/base.js\");\n/* harmony import */ var _parse_proxy_response_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse-proxy-response.js */ \"(rsc)/./node_modules/@sentry/node/esm/proxy/parse-proxy-response.js\");\n\n\n\n\n\n\n\n\nfunction debug(...args) {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[https-proxy-agent]', ...args);\n}\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends _base_js__WEBPACK_IMPORTED_MODULE_4__.Agent {\n  static __initStatic() {this.protocols = ['http', 'https']; }\n\n  constructor(proxy, opts) {\n    super(opts);\n    this.options = {};\n    this.proxy = typeof proxy === 'string' ? new url__WEBPACK_IMPORTED_MODULE_2__.URL(proxy) : proxy;\n    this.proxyHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._optionalChain)([opts, 'optionalAccess', _2 => _2.headers]), () => ( {}));\n    debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n\n    // Trim off the brackets from IPv6 addresses\n    const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n    const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n    this.connectOpts = {\n      // Attempt to negotiate http/1.1 for proxy servers that support http/2\n      ALPNProtocols: ['http/1.1'],\n      ...(opts ? omit(opts, 'headers') : null),\n      host,\n      port,\n    };\n  }\n\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   */\n  async connect(req, opts) {\n    const { proxy } = this;\n\n    if (!opts.host) {\n      throw new TypeError('No \"host\" provided');\n    }\n\n    // Create a socket connection to the proxy server.\n    let socket;\n    if (proxy.protocol === 'https:') {\n      debug('Creating `tls.Socket`: %o', this.connectOpts);\n      const servername = this.connectOpts.servername || this.connectOpts.host;\n      socket = tls__WEBPACK_IMPORTED_MODULE_1__.connect({\n        ...this.connectOpts,\n        servername: servername && net__WEBPACK_IMPORTED_MODULE_0__.isIP(servername) ? undefined : servername,\n      });\n    } else {\n      debug('Creating `net.Socket`: %o', this.connectOpts);\n      socket = net__WEBPACK_IMPORTED_MODULE_0__.connect(this.connectOpts);\n    }\n\n    const headers =\n      typeof this.proxyHeaders === 'function' ? this.proxyHeaders() : { ...this.proxyHeaders };\n    const host = net__WEBPACK_IMPORTED_MODULE_0__.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n    let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n\n    // Inject the `Proxy-Authorization` header if necessary.\n    if (proxy.username || proxy.password) {\n      const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n      headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n    }\n\n    headers.Host = `${host}:${opts.port}`;\n\n    if (!headers['Proxy-Connection']) {\n      headers['Proxy-Connection'] = this.keepAlive ? 'Keep-Alive' : 'close';\n    }\n    for (const name of Object.keys(headers)) {\n      payload += `${name}: ${headers[name]}\\r\\n`;\n    }\n\n    const proxyResponsePromise = (0,_parse_proxy_response_js__WEBPACK_IMPORTED_MODULE_7__.parseProxyResponse)(socket);\n\n    socket.write(`${payload}\\r\\n`);\n\n    const { connect, buffered } = await proxyResponsePromise;\n    req.emit('proxyConnect', connect);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not EventEmitter in Node types\n    this.emit('proxyConnect', connect, req);\n\n    if (connect.statusCode === 200) {\n      req.once('socket', resume);\n\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = opts.servername || opts.host;\n        return tls__WEBPACK_IMPORTED_MODULE_1__.connect({\n          ...omit(opts, 'host', 'path', 'port'),\n          socket,\n          servername: net__WEBPACK_IMPORTED_MODULE_0__.isIP(servername) ? undefined : servername,\n        });\n      }\n\n      return socket;\n    }\n\n    // Some other status code that's not 200... need to re-play the HTTP\n    // header \"data\" events onto the socket once the HTTP machinery is\n    // attached so that the node core `http` can parse and handle the\n    // error status code.\n\n    // Close the original socket, and a new \"fake\" socket is returned\n    // instead, so that the proxy doesn't get the HTTP request\n    // written to it (which may contain `Authorization` headers or other\n    // sensitive data).\n    //\n    // See: https://hackerone.com/reports/541502\n    socket.destroy();\n\n    const fakeSocket = new net__WEBPACK_IMPORTED_MODULE_0__.Socket({ writable: false });\n    fakeSocket.readable = true;\n\n    // Need to wait for the \"socket\" event to re-play the \"data\" events.\n    req.once('socket', (s) => {\n      debug('Replaying proxy buffer for failed request');\n      // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n      // this point the HTTP module machinery has been hooked up for\n      // the user.\n      s.push(buffered);\n      s.push(null);\n    });\n\n    return fakeSocket;\n  }\n}HttpsProxyAgent.__initStatic();\n\nfunction resume(socket) {\n  socket.resume();\n}\n\nfunction omit(\n  obj,\n  ...keys\n)\n\n {\n  const ret = {}\n\n;\n  let key;\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/proxy/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/proxy/parse-proxy-response.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/proxy/parse-proxy-response.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseProxyResponse: () => (/* binding */ parseProxyResponse)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\nfunction debug(...args) {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[https-proxy-agent:parse-proxy-response]', ...args);\n}\n\nfunction parseProxyResponse(socket) {\n  return new Promise((resolve, reject) => {\n    // we need to buffer any HTTP traffic that happens with the proxy before we get\n    // the CONNECT response, so that if the response is anything other than an \"200\"\n    // response code, then we can re-play the \"data\" events on the socket once the\n    // HTTP parser is hooked up...\n    let buffersLength = 0;\n    const buffers = [];\n\n    function read() {\n      const b = socket.read();\n      if (b) ondata(b);\n      else socket.once('readable', read);\n    }\n\n    function cleanup() {\n      socket.removeListener('end', onend);\n      socket.removeListener('error', onerror);\n      socket.removeListener('readable', read);\n    }\n\n    function onend() {\n      cleanup();\n      debug('onend');\n      reject(new Error('Proxy connection ended before receiving CONNECT response'));\n    }\n\n    function onerror(err) {\n      cleanup();\n      debug('onerror %o', err);\n      reject(err);\n    }\n\n    function ondata(b) {\n      buffers.push(b);\n      buffersLength += b.length;\n\n      const buffered = Buffer.concat(buffers, buffersLength);\n      const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n\n      if (endOfHeaders === -1) {\n        // keep buffering\n        debug('have not received end of HTTP headers yet...');\n        read();\n        return;\n      }\n\n      const headerParts = buffered.slice(0, endOfHeaders).toString('ascii').split('\\r\\n');\n      const firstLine = headerParts.shift();\n      if (!firstLine) {\n        socket.destroy();\n        return reject(new Error('No header received from proxy CONNECT response'));\n      }\n      const firstLineParts = firstLine.split(' ');\n      const statusCode = +firstLineParts[1];\n      const statusText = firstLineParts.slice(2).join(' ');\n      const headers = {};\n      for (const header of headerParts) {\n        if (!header) continue;\n        const firstColon = header.indexOf(':');\n        if (firstColon === -1) {\n          socket.destroy();\n          return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n        }\n        const key = header.slice(0, firstColon).toLowerCase();\n        const value = header.slice(firstColon + 1).trimStart();\n        const current = headers[key];\n        if (typeof current === 'string') {\n          headers[key] = [current, value];\n        } else if (Array.isArray(current)) {\n          current.push(value);\n        } else {\n          headers[key] = value;\n        }\n      }\n      debug('got proxy server response: %o %o', firstLine, headers);\n      cleanup();\n      resolve({\n        connect: {\n          statusCode,\n          statusText,\n          headers,\n        },\n        buffered,\n      });\n    }\n\n    socket.on('error', onerror);\n    socket.on('end', onend);\n\n    read();\n  });\n}\n\n\n//# sourceMappingURL=parse-proxy-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9wcm94eS9wYXJzZS1wcm94eS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1Qzs7QUFFdkM7QUFDQSxFQUFFLGlEQUFNO0FBQ1I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRkFBa0YsT0FBTztBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL3Byb3h5L3BhcnNlLXByb3h5LXJlc3BvbnNlLmpzP2UzNGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmZ1bmN0aW9uIGRlYnVnKC4uLmFyZ3MpIHtcbiAgbG9nZ2VyLmxvZygnW2h0dHBzLXByb3h5LWFnZW50OnBhcnNlLXByb3h5LXJlc3BvbnNlXScsIC4uLmFyZ3MpO1xufVxuXG5mdW5jdGlvbiBwYXJzZVByb3h5UmVzcG9uc2Uoc29ja2V0KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgLy8gd2UgbmVlZCB0byBidWZmZXIgYW55IEhUVFAgdHJhZmZpYyB0aGF0IGhhcHBlbnMgd2l0aCB0aGUgcHJveHkgYmVmb3JlIHdlIGdldFxuICAgIC8vIHRoZSBDT05ORUNUIHJlc3BvbnNlLCBzbyB0aGF0IGlmIHRoZSByZXNwb25zZSBpcyBhbnl0aGluZyBvdGhlciB0aGFuIGFuIFwiMjAwXCJcbiAgICAvLyByZXNwb25zZSBjb2RlLCB0aGVuIHdlIGNhbiByZS1wbGF5IHRoZSBcImRhdGFcIiBldmVudHMgb24gdGhlIHNvY2tldCBvbmNlIHRoZVxuICAgIC8vIEhUVFAgcGFyc2VyIGlzIGhvb2tlZCB1cC4uLlxuICAgIGxldCBidWZmZXJzTGVuZ3RoID0gMDtcbiAgICBjb25zdCBidWZmZXJzID0gW107XG5cbiAgICBmdW5jdGlvbiByZWFkKCkge1xuICAgICAgY29uc3QgYiA9IHNvY2tldC5yZWFkKCk7XG4gICAgICBpZiAoYikgb25kYXRhKGIpO1xuICAgICAgZWxzZSBzb2NrZXQub25jZSgncmVhZGFibGUnLCByZWFkKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgICAgc29ja2V0LnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgICBzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG4gICAgICBzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ3JlYWRhYmxlJywgcmVhZCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgICBjbGVhbnVwKCk7XG4gICAgICBkZWJ1Zygnb25lbmQnKTtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoJ1Byb3h5IGNvbm5lY3Rpb24gZW5kZWQgYmVmb3JlIHJlY2VpdmluZyBDT05ORUNUIHJlc3BvbnNlJykpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uZXJyb3IoZXJyKSB7XG4gICAgICBjbGVhbnVwKCk7XG4gICAgICBkZWJ1Zygnb25lcnJvciAlbycsIGVycik7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbmRhdGEoYikge1xuICAgICAgYnVmZmVycy5wdXNoKGIpO1xuICAgICAgYnVmZmVyc0xlbmd0aCArPSBiLmxlbmd0aDtcblxuICAgICAgY29uc3QgYnVmZmVyZWQgPSBCdWZmZXIuY29uY2F0KGJ1ZmZlcnMsIGJ1ZmZlcnNMZW5ndGgpO1xuICAgICAgY29uc3QgZW5kT2ZIZWFkZXJzID0gYnVmZmVyZWQuaW5kZXhPZignXFxyXFxuXFxyXFxuJyk7XG5cbiAgICAgIGlmIChlbmRPZkhlYWRlcnMgPT09IC0xKSB7XG4gICAgICAgIC8vIGtlZXAgYnVmZmVyaW5nXG4gICAgICAgIGRlYnVnKCdoYXZlIG5vdCByZWNlaXZlZCBlbmQgb2YgSFRUUCBoZWFkZXJzIHlldC4uLicpO1xuICAgICAgICByZWFkKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgaGVhZGVyUGFydHMgPSBidWZmZXJlZC5zbGljZSgwLCBlbmRPZkhlYWRlcnMpLnRvU3RyaW5nKCdhc2NpaScpLnNwbGl0KCdcXHJcXG4nKTtcbiAgICAgIGNvbnN0IGZpcnN0TGluZSA9IGhlYWRlclBhcnRzLnNoaWZ0KCk7XG4gICAgICBpZiAoIWZpcnN0TGluZSkge1xuICAgICAgICBzb2NrZXQuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcignTm8gaGVhZGVyIHJlY2VpdmVkIGZyb20gcHJveHkgQ09OTkVDVCByZXNwb25zZScpKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZpcnN0TGluZVBhcnRzID0gZmlyc3RMaW5lLnNwbGl0KCcgJyk7XG4gICAgICBjb25zdCBzdGF0dXNDb2RlID0gK2ZpcnN0TGluZVBhcnRzWzFdO1xuICAgICAgY29uc3Qgc3RhdHVzVGV4dCA9IGZpcnN0TGluZVBhcnRzLnNsaWNlKDIpLmpvaW4oJyAnKTtcbiAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgIGZvciAoY29uc3QgaGVhZGVyIG9mIGhlYWRlclBhcnRzKSB7XG4gICAgICAgIGlmICghaGVhZGVyKSBjb250aW51ZTtcbiAgICAgICAgY29uc3QgZmlyc3RDb2xvbiA9IGhlYWRlci5pbmRleE9mKCc6Jyk7XG4gICAgICAgIGlmIChmaXJzdENvbG9uID09PSAtMSkge1xuICAgICAgICAgIHNvY2tldC5kZXN0cm95KCk7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoYEludmFsaWQgaGVhZGVyIGZyb20gcHJveHkgQ09OTkVDVCByZXNwb25zZTogXCIke2hlYWRlcn1cImApKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXkgPSBoZWFkZXIuc2xpY2UoMCwgZmlyc3RDb2xvbikudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBoZWFkZXIuc2xpY2UoZmlyc3RDb2xvbiArIDEpLnRyaW1TdGFydCgpO1xuICAgICAgICBjb25zdCBjdXJyZW50ID0gaGVhZGVyc1trZXldO1xuICAgICAgICBpZiAodHlwZW9mIGN1cnJlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaGVhZGVyc1trZXldID0gW2N1cnJlbnQsIHZhbHVlXTtcbiAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGN1cnJlbnQpKSB7XG4gICAgICAgICAgY3VycmVudC5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBoZWFkZXJzW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZGVidWcoJ2dvdCBwcm94eSBzZXJ2ZXIgcmVzcG9uc2U6ICVvICVvJywgZmlyc3RMaW5lLCBoZWFkZXJzKTtcbiAgICAgIGNsZWFudXAoKTtcbiAgICAgIHJlc29sdmUoe1xuICAgICAgICBjb25uZWN0OiB7XG4gICAgICAgICAgc3RhdHVzQ29kZSxcbiAgICAgICAgICBzdGF0dXNUZXh0LFxuICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGJ1ZmZlcmVkLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgc29ja2V0Lm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIHNvY2tldC5vbignZW5kJywgb25lbmQpO1xuXG4gICAgcmVhZCgpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgcGFyc2VQcm94eVJlc3BvbnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS1wcm94eS1yZXNwb25zZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/proxy/parse-proxy-response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/requestDataDeprecated.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/requestDataDeprecated.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractRequestData: () => (/* binding */ extractRequestData),\n/* harmony export */   parseRequest: () => (/* binding */ parseRequest)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\");\n\n\n/**\n * @deprecated `Handlers.ExpressRequest` is deprecated and will be removed in v8. Use `PolymorphicRequest` instead.\n */\n\n/**\n * Normalizes data from the request object, accounting for framework differences.\n *\n * @deprecated `Handlers.extractRequestData` is deprecated and will be removed in v8. Use `extractRequestData` instead.\n *\n * @param req The request object from which to extract data\n * @param keys An optional array of keys to include in the normalized data.\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(req, keys) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractRequestData)(req, { include: keys });\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n *\n * @deprecated `Handlers.ParseRequestOptions` is deprecated and will be removed in v8. Use\n * `AddRequestDataToEventOptions` in `@sentry/utils` instead.\n */\n\n/**\n * Enriches passed event with request data.\n *\n * @deprecated `Handlers.parseRequest` is deprecated and will be removed in v8. Use `addRequestDataToEvent` instead.\n *\n * @param event Will be mutated and enriched with req data\n * @param req Request object\n * @param options object containing flags to enable functionality\n * @hidden\n */\nfunction parseRequest(event, req, options = {}) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent)(event, req, { include: options });\n}\n\n\n//# sourceMappingURL=requestDataDeprecated.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS9yZXF1ZXN0RGF0YURlcHJlY2F0ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtHOztBQUVsRztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlFQUFvQixRQUFRLGVBQWU7QUFDcEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDLFNBQVMsb0VBQXFCLGVBQWUsa0JBQWtCO0FBQy9EOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vcmVxdWVzdERhdGFEZXByZWNhdGVkLmpzPzcxZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0cmFjdFJlcXVlc3REYXRhIGFzIGV4dHJhY3RSZXF1ZXN0RGF0YSQxLCBhZGRSZXF1ZXN0RGF0YVRvRXZlbnQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBgSGFuZGxlcnMuRXhwcmVzc1JlcXVlc3RgIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC4gVXNlIGBQb2x5bW9ycGhpY1JlcXVlc3RgIGluc3RlYWQuXG4gKi9cblxuLyoqXG4gKiBOb3JtYWxpemVzIGRhdGEgZnJvbSB0aGUgcmVxdWVzdCBvYmplY3QsIGFjY291bnRpbmcgZm9yIGZyYW1ld29yayBkaWZmZXJlbmNlcy5cbiAqXG4gKiBAZGVwcmVjYXRlZCBgSGFuZGxlcnMuZXh0cmFjdFJlcXVlc3REYXRhYCBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdjguIFVzZSBgZXh0cmFjdFJlcXVlc3REYXRhYCBpbnN0ZWFkLlxuICpcbiAqIEBwYXJhbSByZXEgVGhlIHJlcXVlc3Qgb2JqZWN0IGZyb20gd2hpY2ggdG8gZXh0cmFjdCBkYXRhXG4gKiBAcGFyYW0ga2V5cyBBbiBvcHRpb25hbCBhcnJheSBvZiBrZXlzIHRvIGluY2x1ZGUgaW4gdGhlIG5vcm1hbGl6ZWQgZGF0YS5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIG5vcm1hbGl6ZWQgcmVxdWVzdCBkYXRhXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RSZXF1ZXN0RGF0YShyZXEsIGtleXMpIHtcbiAgcmV0dXJuIGV4dHJhY3RSZXF1ZXN0RGF0YSQxKHJlcSwgeyBpbmNsdWRlOiBrZXlzIH0pO1xufVxuXG4vKipcbiAqIE9wdGlvbnMgZGVjaWRpbmcgd2hhdCBwYXJ0cyBvZiB0aGUgcmVxdWVzdCB0byB1c2Ugd2hlbiBlbmhhbmNpbmcgYW4gZXZlbnRcbiAqXG4gKiBAZGVwcmVjYXRlZCBgSGFuZGxlcnMuUGFyc2VSZXF1ZXN0T3B0aW9uc2AgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHY4LiBVc2VcbiAqIGBBZGRSZXF1ZXN0RGF0YVRvRXZlbnRPcHRpb25zYCBpbiBgQHNlbnRyeS91dGlsc2AgaW5zdGVhZC5cbiAqL1xuXG4vKipcbiAqIEVucmljaGVzIHBhc3NlZCBldmVudCB3aXRoIHJlcXVlc3QgZGF0YS5cbiAqXG4gKiBAZGVwcmVjYXRlZCBgSGFuZGxlcnMucGFyc2VSZXF1ZXN0YCBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdjguIFVzZSBgYWRkUmVxdWVzdERhdGFUb0V2ZW50YCBpbnN0ZWFkLlxuICpcbiAqIEBwYXJhbSBldmVudCBXaWxsIGJlIG11dGF0ZWQgYW5kIGVucmljaGVkIHdpdGggcmVxIGRhdGFcbiAqIEBwYXJhbSByZXEgUmVxdWVzdCBvYmplY3RcbiAqIEBwYXJhbSBvcHRpb25zIG9iamVjdCBjb250YWluaW5nIGZsYWdzIHRvIGVuYWJsZSBmdW5jdGlvbmFsaXR5XG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUmVxdWVzdChldmVudCwgcmVxLCBvcHRpb25zID0ge30pIHtcbiAgcmV0dXJuIGFkZFJlcXVlc3REYXRhVG9FdmVudChldmVudCwgcmVxLCB7IGluY2x1ZGU6IG9wdGlvbnMgfSk7XG59XG5cbmV4cG9ydCB7IGV4dHJhY3RSZXF1ZXN0RGF0YSwgcGFyc2VSZXF1ZXN0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0RGF0YURlcHJlY2F0ZWQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/requestDataDeprecated.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/node/esm/sdk.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultIntegrations: () => (/* binding */ defaultIntegrations),\n/* harmony export */   defaultStackParser: () => (/* binding */ defaultStackParser),\n/* harmony export */   getDefaultIntegrations: () => (/* binding */ getDefaultIntegrations),\n/* harmony export */   getSentryRelease: () => (/* binding */ getSentryRelease),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   isAutoSessionTrackingEnabled: () => (/* binding */ isAutoSessionTrackingEnabled)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/linkederrors.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integrations/requestdata.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _async_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./async/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/async/index.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./client.js */ \"(rsc)/./node_modules/@sentry/node/esm/client.js\");\n/* harmony import */ var _integrations_console_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/console.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/console.js\");\n/* harmony import */ var _integrations_context_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./integrations/context.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/context.js\");\n/* harmony import */ var _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./integrations/contextlines.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/contextlines.js\");\n/* harmony import */ var _integrations_http_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/http.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/http.js\");\n/* harmony import */ var _integrations_local_variables_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./integrations/local-variables/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/local-variables/index.js\");\n/* harmony import */ var _integrations_modules_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./integrations/modules.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/modules.js\");\n/* harmony import */ var _integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integrations/onuncaughtexception.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js\");\n/* harmony import */ var _integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./integrations/onunhandledrejection.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js\");\n/* harmony import */ var _integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./integrations/spotlight.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/spotlight.js\");\n/* harmony import */ var _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./integrations/undici/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/integrations/undici/index.js\");\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./module.js */ \"(rsc)/./node_modules/@sentry/node/esm/module.js\");\n/* harmony import */ var _transports_http_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./transports/http.js */ \"(rsc)/./node_modules/@sentry/node/esm/transports/http.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nconst defaultIntegrations = [\n  // Common\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.inboundFiltersIntegration)(),\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.functionToStringIntegration)(),\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.linkedErrorsIntegration)(),\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.requestDataIntegration)(),\n  // Native Wrappers\n  (0,_integrations_console_js__WEBPACK_IMPORTED_MODULE_4__.consoleIntegration)(),\n  (0,_integrations_http_js__WEBPACK_IMPORTED_MODULE_5__.httpIntegration)(),\n  (0,_integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_6__.nativeNodeFetchintegration)(),\n  // Global Handlers\n  (0,_integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_7__.onUncaughtExceptionIntegration)(),\n  (0,_integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_8__.onUnhandledRejectionIntegration)(),\n  // Event Info\n  (0,_integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_9__.contextLinesIntegration)(),\n  (0,_integrations_local_variables_index_js__WEBPACK_IMPORTED_MODULE_10__.localVariablesIntegration)(),\n  (0,_integrations_context_js__WEBPACK_IMPORTED_MODULE_11__.nodeContextIntegration)(),\n  (0,_integrations_modules_js__WEBPACK_IMPORTED_MODULE_12__.modulesIntegration)(),\n];\n\n/** Get the default integrations for the Node SDK. */\nfunction getDefaultIntegrations(_options) {\n  const carrier = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.getMainCarrier)();\n\n  const autoloadedIntegrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__._optionalChain)([carrier, 'access', _ => _.__SENTRY__, 'optionalAccess', _2 => _2.integrations]) || [];\n\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n    ...autoloadedIntegrations,\n  ];\n}\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\n// eslint-disable-next-line complexity\nfunction init(options = {}) {\n  (0,_async_index_js__WEBPACK_IMPORTED_MODULE_15__.setNodeAsyncContextStrategy)();\n\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations();\n  }\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_16__.stackParserFromStackParserOptions)(options.stackParser || defaultStackParser),\n    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getIntegrationsToSetup)(options),\n    transport: options.transport || _transports_http_js__WEBPACK_IMPORTED_MODULE_18__.makeNodeTransport,\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_19__.initAndBind)(options.clientClass || _client_js__WEBPACK_IMPORTED_MODULE_20__.NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.getClient)();\n    if (client && client.addIntegration) {\n      // force integrations to be setup even if no DSN was set\n      // If they have already been added before, they will be ignored anyhow\n      const integrations = client.getOptions().integrations;\n      for (const integration of integrations) {\n        client.addIntegration(integration);\n      }\n      client.addIntegration(\n        (0,_integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_22__.spotlightIntegration)({ sidecarUrl: typeof options.spotlight === 'string' ? options.spotlight : undefined }),\n      );\n    }\n  }\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (_sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE && _sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return _sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    // Cloudflare Pages - https://developers.cloudflare.com/pages/platform/build-configuration/#environment-variables\n    process.env.CF_PAGES_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_16__.createStackParser)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_16__.nodeStackLineParser)((0,_module_js__WEBPACK_IMPORTED_MODULE_24__.createGetModuleFromFilename)()));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.startSession)();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.getIsolationScope)().getSession();\n    const terminalStates = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.endSession)();\n    }\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const propagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_25__.propagationContextFromHeaders)(sentryTraceEnv, baggageEnv);\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.getCurrentScope)().setPropagationContext(propagationContext);\n  }\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/sdk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/tracing/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/node/esm/tracing/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoDiscoverNodePerformanceMonitoringIntegrations: () => (/* binding */ autoDiscoverNodePerformanceMonitoringIntegrations)\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/lazy.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n/**\n * Automatically detects and returns integrations that will work with your dependencies.\n */\nfunction autoDiscoverNodePerformanceMonitoringIntegrations() {\n  const loadedIntegrations = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.lazyLoadedNodePerformanceMonitoringIntegrations\n    .map(tryLoad => {\n      try {\n        return tryLoad();\n      } catch (_) {\n        return undefined;\n      }\n    })\n    .filter(integration => !!integration) ;\n\n  if (loadedIntegrations.length === 0) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Performance monitoring integrations could not be automatically loaded.');\n  }\n\n  // Only return integrations where their dependencies loaded successfully.\n  return loadedIntegrations.filter(integration => !!integration.loadDependency());\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS90cmFjaW5nL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyRjtBQUNwRDs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscUdBQStDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsSUFBSSxpREFBTTtBQUNWOztBQUVBO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL3RyYWNpbmcvaW5kZXguanM/MmFjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsYXp5TG9hZGVkTm9kZVBlcmZvcm1hbmNlTW9uaXRvcmluZ0ludGVncmF0aW9ucyB9IGZyb20gJ0BzZW50cnktaW50ZXJuYWwvdHJhY2luZyc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBBdXRvbWF0aWNhbGx5IGRldGVjdHMgYW5kIHJldHVybnMgaW50ZWdyYXRpb25zIHRoYXQgd2lsbCB3b3JrIHdpdGggeW91ciBkZXBlbmRlbmNpZXMuXG4gKi9cbmZ1bmN0aW9uIGF1dG9EaXNjb3Zlck5vZGVQZXJmb3JtYW5jZU1vbml0b3JpbmdJbnRlZ3JhdGlvbnMoKSB7XG4gIGNvbnN0IGxvYWRlZEludGVncmF0aW9ucyA9IGxhenlMb2FkZWROb2RlUGVyZm9ybWFuY2VNb25pdG9yaW5nSW50ZWdyYXRpb25zXG4gICAgLm1hcCh0cnlMb2FkID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB0cnlMb2FkKCk7XG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfSlcbiAgICAuZmlsdGVyKGludGVncmF0aW9uID0+ICEhaW50ZWdyYXRpb24pIDtcblxuICBpZiAobG9hZGVkSW50ZWdyYXRpb25zLmxlbmd0aCA9PT0gMCkge1xuICAgIGxvZ2dlci53YXJuKCdQZXJmb3JtYW5jZSBtb25pdG9yaW5nIGludGVncmF0aW9ucyBjb3VsZCBub3QgYmUgYXV0b21hdGljYWxseSBsb2FkZWQuJyk7XG4gIH1cblxuICAvLyBPbmx5IHJldHVybiBpbnRlZ3JhdGlvbnMgd2hlcmUgdGhlaXIgZGVwZW5kZW5jaWVzIGxvYWRlZCBzdWNjZXNzZnVsbHkuXG4gIHJldHVybiBsb2FkZWRJbnRlZ3JhdGlvbnMuZmlsdGVyKGludGVncmF0aW9uID0+ICEhaW50ZWdyYXRpb24ubG9hZERlcGVuZGVuY3koKSk7XG59XG5cbmV4cG9ydCB7IGF1dG9EaXNjb3Zlck5vZGVQZXJmb3JtYW5jZU1vbml0b3JpbmdJbnRlZ3JhdGlvbnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/tracing/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/tracing/integrations.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/node/esm/tracing/integrations.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apollo: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.Apollo),\n/* harmony export */   Express: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__.Express),\n/* harmony export */   GraphQL: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__.GraphQL),\n/* harmony export */   Mongo: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__.Mongo),\n/* harmony export */   Mysql: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__.Mysql),\n/* harmony export */   Postgres: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__.Postgres),\n/* harmony export */   Prisma: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__.Prisma)\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/express.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry-internal/tracing */ \"(rsc)/./node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js\");\n\n//# sourceMappingURL=integrations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS90cmFjaW5nL2ludGVncmF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRztBQUNwRyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vdHJhY2luZy9pbnRlZ3JhdGlvbnMuanM/OWZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBcG9sbG8sIEV4cHJlc3MsIEdyYXBoUUwsIE1vbmdvLCBNeXNxbCwgUG9zdGdyZXMsIFByaXNtYSB9IGZyb20gJ0BzZW50cnktaW50ZXJuYWwvdHJhY2luZyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlZ3JhdGlvbnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/tracing/integrations.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/transports/http.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/node/esm/transports/http.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeNodeTransport: () => (/* binding */ makeNodeTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _proxy_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../proxy/index.js */ \"(rsc)/./node_modules/@sentry/node/esm/proxy/index.js\");\n\n\n\n\n\n\n\n\n\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new stream__WEBPACK_IMPORTED_MODULE_2__.Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new url__WEBPACK_IMPORTED_MODULE_3__.URL(options.url);\n  } catch (e) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.createTransport)(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new _proxy_index_js__WEBPACK_IMPORTED_MODULE_7__.HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__._nullishCoalesce)(options.httpModule, () => ( nativeHttpModule)), agent);\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.createTransport)(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new url__WEBPACK_IMPORTED_MODULE_3__.URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe((0,zlib__WEBPACK_IMPORTED_MODULE_4__.createGzip)());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__._nullishCoalesce)(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__._nullishCoalesce)(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\n\n//# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/transports/http.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/trpc.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/node/esm/trpc.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trpcMiddleware: () => (/* binding */ trpcMiddleware)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n\n\n/**\n * Sentry tRPC middleware that names the handling transaction after the called procedure.\n *\n * Use the Sentry tRPC middleware in combination with the Sentry server integration,\n * e.g. Express Request Handlers or Next.js SDK.\n */\nfunction trpcMiddleware(options = {}) {\n  return function ({ path, type, next, rawInput }) {\n    const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3()]);\n    // eslint-disable-next-line deprecation/deprecation\n    const sentryTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)().getTransaction();\n\n    if (sentryTransaction) {\n      sentryTransaction.updateName(`trpc/${path}`);\n      sentryTransaction.setAttribute(_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      sentryTransaction.op = 'rpc.server';\n\n      const trpcContext = {\n        procedure_type: type,\n      };\n\n      if (options.attachRpcInput !== undefined ? options.attachRpcInput : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _4 => _4.sendDefaultPii])) {\n        trpcContext.input = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.normalize)(rawInput);\n      }\n\n      // TODO: Can we rewrite this to an attribute? Or set this on the scope?\n      // eslint-disable-next-line deprecation/deprecation\n      sentryTransaction.setContext('trpc', trpcContext);\n    }\n\n    function captureIfError(nextResult) {\n      if (!nextResult.ok) {\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(nextResult.error, { mechanism: { handled: false, data: { function: 'trpcMiddleware' } } });\n      }\n    }\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = next();\n    } catch (e) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(e, { mechanism: { handled: false, data: { function: 'trpcMiddleware' } } });\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(maybePromiseResult)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      Promise.resolve(maybePromiseResult).then(\n        nextResult => {\n          captureIfError(nextResult );\n        },\n        e => {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(e, { mechanism: { handled: false, data: { function: 'trpcMiddleware' } } });\n        },\n      );\n    } else {\n      captureIfError(maybePromiseResult );\n    }\n\n    // We return the original promise just to be safe.\n    return maybePromiseResult;\n  };\n}\n\n\n//# sourceMappingURL=trpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS90cnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUMrRDtBQUN4RDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLHFCQUFxQiw0QkFBNEI7QUFDakQsMEJBQTBCLDZEQUFjLEVBQUUsbURBQVM7QUFDbkQ7QUFDQSw4QkFBOEIsNkRBQWU7O0FBRTdDO0FBQ0EsMkNBQTJDLEtBQUs7QUFDaEQscUNBQXFDLDBFQUFnQztBQUNyRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsMEVBQTBFLDZEQUFjO0FBQ3hGLDRCQUE0Qix3REFBUztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUSw4REFBZ0IscUJBQXFCLGFBQWEsd0JBQXdCLGdDQUFnQztBQUNsSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNLDhEQUFnQixNQUFNLGFBQWEsd0JBQXdCLGdDQUFnQztBQUNqRztBQUNBOztBQUVBLFFBQVEseURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxVQUFVLDhEQUFnQixNQUFNLGFBQWEsd0JBQXdCLGdDQUFnQztBQUNyRyxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25vZGUvZXNtL3RycGMuanM/ZTZlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFNjb3BlLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgY2FwdHVyZUV4Y2VwdGlvbiwgZ2V0Q2xpZW50IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IG5vcm1hbGl6ZSwgaXNUaGVuYWJsZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKipcbiAqIFNlbnRyeSB0UlBDIG1pZGRsZXdhcmUgdGhhdCBuYW1lcyB0aGUgaGFuZGxpbmcgdHJhbnNhY3Rpb24gYWZ0ZXIgdGhlIGNhbGxlZCBwcm9jZWR1cmUuXG4gKlxuICogVXNlIHRoZSBTZW50cnkgdFJQQyBtaWRkbGV3YXJlIGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIFNlbnRyeSBzZXJ2ZXIgaW50ZWdyYXRpb24sXG4gKiBlLmcuIEV4cHJlc3MgUmVxdWVzdCBIYW5kbGVycyBvciBOZXh0LmpzIFNESy5cbiAqL1xuZnVuY3Rpb24gdHJwY01pZGRsZXdhcmUob3B0aW9ucyA9IHt9KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoeyBwYXRoLCB0eXBlLCBuZXh0LCByYXdJbnB1dCB9KSB7XG4gICAgY29uc3QgY2xpZW50T3B0aW9ucyA9IF9vcHRpb25hbENoYWluKFtnZXRDbGllbnQsICdjYWxsJywgXyA9PiBfKCksICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldE9wdGlvbnMsICdjYWxsJywgXzMgPT4gXzMoKV0pO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIGNvbnN0IHNlbnRyeVRyYW5zYWN0aW9uID0gZ2V0Q3VycmVudFNjb3BlKCkuZ2V0VHJhbnNhY3Rpb24oKTtcblxuICAgIGlmIChzZW50cnlUcmFuc2FjdGlvbikge1xuICAgICAgc2VudHJ5VHJhbnNhY3Rpb24udXBkYXRlTmFtZShgdHJwYy8ke3BhdGh9YCk7XG4gICAgICBzZW50cnlUcmFuc2FjdGlvbi5zZXRBdHRyaWJ1dGUoU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0UsICdyb3V0ZScpO1xuICAgICAgc2VudHJ5VHJhbnNhY3Rpb24ub3AgPSAncnBjLnNlcnZlcic7XG5cbiAgICAgIGNvbnN0IHRycGNDb250ZXh0ID0ge1xuICAgICAgICBwcm9jZWR1cmVfdHlwZTogdHlwZSxcbiAgICAgIH07XG5cbiAgICAgIGlmIChvcHRpb25zLmF0dGFjaFJwY0lucHV0ICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmF0dGFjaFJwY0lucHV0IDogX29wdGlvbmFsQ2hhaW4oW2NsaWVudE9wdGlvbnMsICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80LnNlbmREZWZhdWx0UGlpXSkpIHtcbiAgICAgICAgdHJwY0NvbnRleHQuaW5wdXQgPSBub3JtYWxpemUocmF3SW5wdXQpO1xuICAgICAgfVxuXG4gICAgICAvLyBUT0RPOiBDYW4gd2UgcmV3cml0ZSB0aGlzIHRvIGFuIGF0dHJpYnV0ZT8gT3Igc2V0IHRoaXMgb24gdGhlIHNjb3BlP1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgICBzZW50cnlUcmFuc2FjdGlvbi5zZXRDb250ZXh0KCd0cnBjJywgdHJwY0NvbnRleHQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhcHR1cmVJZkVycm9yKG5leHRSZXN1bHQpIHtcbiAgICAgIGlmICghbmV4dFJlc3VsdC5vaykge1xuICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKG5leHRSZXN1bHQuZXJyb3IsIHsgbWVjaGFuaXNtOiB7IGhhbmRsZWQ6IGZhbHNlLCBkYXRhOiB7IGZ1bmN0aW9uOiAndHJwY01pZGRsZXdhcmUnIH0gfSB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICBtYXliZVByb21pc2VSZXN1bHQgPSBuZXh0KCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlLCB7IG1lY2hhbmlzbTogeyBoYW5kbGVkOiBmYWxzZSwgZGF0YTogeyBmdW5jdGlvbjogJ3RycGNNaWRkbGV3YXJlJyB9IH0gfSk7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cblxuICAgIGlmIChpc1RoZW5hYmxlKG1heWJlUHJvbWlzZVJlc3VsdCkpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIFByb21pc2UucmVzb2x2ZShtYXliZVByb21pc2VSZXN1bHQpLnRoZW4oXG4gICAgICAgIG5leHRSZXN1bHQgPT4ge1xuICAgICAgICAgIGNhcHR1cmVJZkVycm9yKG5leHRSZXN1bHQgKTtcbiAgICAgICAgfSxcbiAgICAgICAgZSA9PiB7XG4gICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlLCB7IG1lY2hhbmlzbTogeyBoYW5kbGVkOiBmYWxzZSwgZGF0YTogeyBmdW5jdGlvbjogJ3RycGNNaWRkbGV3YXJlJyB9IH0gfSk7XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYXB0dXJlSWZFcnJvcihtYXliZVByb21pc2VSZXN1bHQgKTtcbiAgICB9XG5cbiAgICAvLyBXZSByZXR1cm4gdGhlIG9yaWdpbmFsIHByb21pc2UganVzdCB0byBiZSBzYWZlLlxuICAgIHJldHVybiBtYXliZVByb21pc2VSZXN1bHQ7XG4gIH07XG59XG5cbmV4cG9ydCB7IHRycGNNaWRkbGV3YXJlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnBjLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/trpc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/node/esm/utils.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/node/esm/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepReadDirSync: () => (/* binding */ deepReadDirSync)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n/**\n * Recursively read the contents of a directory.\n *\n * @param targetDir Absolute or relative path of the directory to scan. All returned paths will be relative to this\n * directory.\n * @returns Array holding all relative paths\n * @deprecated This function will be removed in the next major version.\n */\nfunction deepReadDirSync(targetDir) {\n  const targetDirAbsPath = path__WEBPACK_IMPORTED_MODULE_1__.resolve(targetDir);\n\n  if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(targetDirAbsPath)) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}. Directory does not exist.`);\n  }\n\n  if (!fs__WEBPACK_IMPORTED_MODULE_0__.statSync(targetDirAbsPath).isDirectory()) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}, because it is not a directory.`);\n  }\n\n  // This does the same thing as its containing function, `deepReadDirSync` (except that - purely for convenience - it\n  // deals in absolute paths rather than relative ones). We need this to be separate from the outer function to preserve\n  // the difference between `targetDirAbsPath` and `currentDirAbsPath`.\n  const deepReadCurrentDir = (currentDirAbsPath) => {\n    return fs__WEBPACK_IMPORTED_MODULE_0__.readdirSync(currentDirAbsPath).reduce((absPaths, itemName) => {\n      const itemAbsPath = path__WEBPACK_IMPORTED_MODULE_1__.join(currentDirAbsPath, itemName);\n\n      if (fs__WEBPACK_IMPORTED_MODULE_0__.statSync(itemAbsPath).isDirectory()) {\n        return absPaths.concat(deepReadCurrentDir(itemAbsPath));\n      }\n\n      absPaths.push(itemAbsPath);\n      return absPaths;\n    }, []);\n  };\n\n  return deepReadCurrentDir(targetDirAbsPath).map(absPath => path__WEBPACK_IMPORTED_MODULE_1__.relative(targetDirAbsPath, absPath));\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9ub2RlL2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5QjtBQUNJOztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUNBQVk7O0FBRXZDLE9BQU8sMENBQWE7QUFDcEIsK0NBQStDLGlCQUFpQjtBQUNoRTs7QUFFQSxPQUFPLHdDQUFXO0FBQ2xCLCtDQUErQyxpQkFBaUI7QUFDaEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJDQUFjO0FBQ3pCLDBCQUEwQixzQ0FBUzs7QUFFbkMsVUFBVSx3Q0FBVztBQUNyQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsNkRBQTZELDBDQUFhO0FBQzFFOztBQUUyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9lc20vdXRpbHMuanM/ZjNjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuXG4vKipcbiAqIFJlY3Vyc2l2ZWx5IHJlYWQgdGhlIGNvbnRlbnRzIG9mIGEgZGlyZWN0b3J5LlxuICpcbiAqIEBwYXJhbSB0YXJnZXREaXIgQWJzb2x1dGUgb3IgcmVsYXRpdmUgcGF0aCBvZiB0aGUgZGlyZWN0b3J5IHRvIHNjYW4uIEFsbCByZXR1cm5lZCBwYXRocyB3aWxsIGJlIHJlbGF0aXZlIHRvIHRoaXNcbiAqIGRpcmVjdG9yeS5cbiAqIEByZXR1cm5zIEFycmF5IGhvbGRpbmcgYWxsIHJlbGF0aXZlIHBhdGhzXG4gKiBAZGVwcmVjYXRlZCBUaGlzIGZ1bmN0aW9uIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLlxuICovXG5mdW5jdGlvbiBkZWVwUmVhZERpclN5bmModGFyZ2V0RGlyKSB7XG4gIGNvbnN0IHRhcmdldERpckFic1BhdGggPSBwYXRoLnJlc29sdmUodGFyZ2V0RGlyKTtcblxuICBpZiAoIWZzLmV4aXN0c1N5bmModGFyZ2V0RGlyQWJzUGF0aCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIGNvbnRlbnRzIG9mICR7dGFyZ2V0RGlyQWJzUGF0aH0uIERpcmVjdG9yeSBkb2VzIG5vdCBleGlzdC5gKTtcbiAgfVxuXG4gIGlmICghZnMuc3RhdFN5bmModGFyZ2V0RGlyQWJzUGF0aCkuaXNEaXJlY3RvcnkoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHJlYWQgY29udGVudHMgb2YgJHt0YXJnZXREaXJBYnNQYXRofSwgYmVjYXVzZSBpdCBpcyBub3QgYSBkaXJlY3RvcnkuYCk7XG4gIH1cblxuICAvLyBUaGlzIGRvZXMgdGhlIHNhbWUgdGhpbmcgYXMgaXRzIGNvbnRhaW5pbmcgZnVuY3Rpb24sIGBkZWVwUmVhZERpclN5bmNgIChleGNlcHQgdGhhdCAtIHB1cmVseSBmb3IgY29udmVuaWVuY2UgLSBpdFxuICAvLyBkZWFscyBpbiBhYnNvbHV0ZSBwYXRocyByYXRoZXIgdGhhbiByZWxhdGl2ZSBvbmVzKS4gV2UgbmVlZCB0aGlzIHRvIGJlIHNlcGFyYXRlIGZyb20gdGhlIG91dGVyIGZ1bmN0aW9uIHRvIHByZXNlcnZlXG4gIC8vIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYHRhcmdldERpckFic1BhdGhgIGFuZCBgY3VycmVudERpckFic1BhdGhgLlxuICBjb25zdCBkZWVwUmVhZEN1cnJlbnREaXIgPSAoY3VycmVudERpckFic1BhdGgpID0+IHtcbiAgICByZXR1cm4gZnMucmVhZGRpclN5bmMoY3VycmVudERpckFic1BhdGgpLnJlZHVjZSgoYWJzUGF0aHMsIGl0ZW1OYW1lKSA9PiB7XG4gICAgICBjb25zdCBpdGVtQWJzUGF0aCA9IHBhdGguam9pbihjdXJyZW50RGlyQWJzUGF0aCwgaXRlbU5hbWUpO1xuXG4gICAgICBpZiAoZnMuc3RhdFN5bmMoaXRlbUFic1BhdGgpLmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgcmV0dXJuIGFic1BhdGhzLmNvbmNhdChkZWVwUmVhZEN1cnJlbnREaXIoaXRlbUFic1BhdGgpKTtcbiAgICAgIH1cblxuICAgICAgYWJzUGF0aHMucHVzaChpdGVtQWJzUGF0aCk7XG4gICAgICByZXR1cm4gYWJzUGF0aHM7XG4gICAgfSwgW10pO1xuICB9O1xuXG4gIHJldHVybiBkZWVwUmVhZEN1cnJlbnREaXIodGFyZ2V0RGlyQWJzUGF0aCkubWFwKGFic1BhdGggPT4gcGF0aC5yZWxhdGl2ZSh0YXJnZXREaXJBYnNQYXRoLCBhYnNQYXRoKSk7XG59XG5cbmV4cG9ydCB7IGRlZXBSZWFkRGlyU3luYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/node/esm/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/aggregate-errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/aggregate-errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyAggregateErrorsToEvent: () => (/* binding */ applyAggregateErrorsToEvent)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.truncate)(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\n\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYWdncmVnYXRlLWVycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDQTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG9EQUFZO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxNQUFNLG9EQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsb0RBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQSxpREFBaUQsMEJBQTBCO0FBQzNFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFRO0FBQ2hDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRXVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYWdncmVnYXRlLWVycm9ycy5qcz9lNjQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSW5zdGFuY2VPZiB9IGZyb20gJy4vaXMuanMnO1xuaW1wb3J0IHsgdHJ1bmNhdGUgfSBmcm9tICcuL3N0cmluZy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBleGNlcHRpb25zIGluc2lkZSBgZXZlbnQuZXhjZXB0aW9uLnZhbHVlc2AgZm9yIGVycm9ycyB0aGF0IGFyZSBuZXN0ZWQgb24gcHJvcGVydGllcyBiYXNlZCBvbiB0aGUgYGtleWAgcGFyYW1ldGVyLlxuICovXG5mdW5jdGlvbiBhcHBseUFnZ3JlZ2F0ZUVycm9yc1RvRXZlbnQoXG4gIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICBwYXJzZXIsXG4gIG1heFZhbHVlTGltaXQgPSAyNTAsXG4gIGtleSxcbiAgbGltaXQsXG4gIGV2ZW50LFxuICBoaW50LFxuKSB7XG4gIGlmICghZXZlbnQuZXhjZXB0aW9uIHx8ICFldmVudC5leGNlcHRpb24udmFsdWVzIHx8ICFoaW50IHx8ICFpc0luc3RhbmNlT2YoaGludC5vcmlnaW5hbEV4Y2VwdGlvbiwgRXJyb3IpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gR2VuZXJhbGx5IHNwZWFraW5nIHRoZSBsYXN0IGl0ZW0gaW4gYGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNgIGlzIHRoZSBleGNlcHRpb24gb3JpZ2luYXRpbmcgZnJvbSB0aGUgb3JpZ2luYWwgRXJyb3JcbiAgY29uc3Qgb3JpZ2luYWxFeGNlcHRpb24gPVxuICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMubGVuZ3RoID4gMCA/IGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNbZXZlbnQuZXhjZXB0aW9uLnZhbHVlcy5sZW5ndGggLSAxXSA6IHVuZGVmaW5lZDtcblxuICAvLyBXZSBvbmx5IGNyZWF0ZSBleGNlcHRpb24gZ3JvdXBpbmcgaWYgdGhlcmUgaXMgYW4gZXhjZXB0aW9uIGluIHRoZSBldmVudC5cbiAgaWYgKG9yaWdpbmFsRXhjZXB0aW9uKSB7XG4gICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyA9IHRydW5jYXRlQWdncmVnYXRlRXhjZXB0aW9ucyhcbiAgICAgIGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gICAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgICBwYXJzZXIsXG4gICAgICAgIGxpbWl0LFxuICAgICAgICBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uICxcbiAgICAgICAga2V5LFxuICAgICAgICBldmVudC5leGNlcHRpb24udmFsdWVzLFxuICAgICAgICBvcmlnaW5hbEV4Y2VwdGlvbixcbiAgICAgICAgMCxcbiAgICAgICksXG4gICAgICBtYXhWYWx1ZUxpbWl0LFxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gIHBhcnNlcixcbiAgbGltaXQsXG4gIGVycm9yLFxuICBrZXksXG4gIHByZXZFeGNlcHRpb25zLFxuICBleGNlcHRpb24sXG4gIGV4Y2VwdGlvbklkLFxuKSB7XG4gIGlmIChwcmV2RXhjZXB0aW9ucy5sZW5ndGggPj0gbGltaXQgKyAxKSB7XG4gICAgcmV0dXJuIHByZXZFeGNlcHRpb25zO1xuICB9XG5cbiAgbGV0IG5ld0V4Y2VwdGlvbnMgPSBbLi4ucHJldkV4Y2VwdGlvbnNdO1xuXG4gIC8vIFJlY3Vyc2l2ZWx5IGNhbGwgdGhpcyBmdW5jdGlvbiBpbiBvcmRlciB0byB3YWxrIGRvd24gYSBjaGFpbiBvZiBlcnJvcnNcbiAgaWYgKGlzSW5zdGFuY2VPZihlcnJvcltrZXldLCBFcnJvcikpIHtcbiAgICBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yUGFyZW50RXhjZXB0aW9uKGV4Y2VwdGlvbiwgZXhjZXB0aW9uSWQpO1xuICAgIGNvbnN0IG5ld0V4Y2VwdGlvbiA9IGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uKHBhcnNlciwgZXJyb3Jba2V5XSk7XG4gICAgY29uc3QgbmV3RXhjZXB0aW9uSWQgPSBuZXdFeGNlcHRpb25zLmxlbmd0aDtcbiAgICBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yQ2hpbGRFeGNlcHRpb24obmV3RXhjZXB0aW9uLCBrZXksIG5ld0V4Y2VwdGlvbklkLCBleGNlcHRpb25JZCk7XG4gICAgbmV3RXhjZXB0aW9ucyA9IGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgIHBhcnNlcixcbiAgICAgIGxpbWl0LFxuICAgICAgZXJyb3Jba2V5XSxcbiAgICAgIGtleSxcbiAgICAgIFtuZXdFeGNlcHRpb24sIC4uLm5ld0V4Y2VwdGlvbnNdLFxuICAgICAgbmV3RXhjZXB0aW9uLFxuICAgICAgbmV3RXhjZXB0aW9uSWQsXG4gICAgKTtcbiAgfVxuXG4gIC8vIFRoaXMgd2lsbCBjcmVhdGUgZXhjZXB0aW9uIGdyb3VwaW5nIGZvciBBZ2dyZWdhdGVFcnJvcnNcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQWdncmVnYXRlRXJyb3JcbiAgaWYgKEFycmF5LmlzQXJyYXkoZXJyb3IuZXJyb3JzKSkge1xuICAgIGVycm9yLmVycm9ycy5mb3JFYWNoKChjaGlsZEVycm9yLCBpKSA9PiB7XG4gICAgICBpZiAoaXNJbnN0YW5jZU9mKGNoaWxkRXJyb3IsIEVycm9yKSkge1xuICAgICAgICBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yUGFyZW50RXhjZXB0aW9uKGV4Y2VwdGlvbiwgZXhjZXB0aW9uSWQpO1xuICAgICAgICBjb25zdCBuZXdFeGNlcHRpb24gPSBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbihwYXJzZXIsIGNoaWxkRXJyb3IpO1xuICAgICAgICBjb25zdCBuZXdFeGNlcHRpb25JZCA9IG5ld0V4Y2VwdGlvbnMubGVuZ3RoO1xuICAgICAgICBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yQ2hpbGRFeGNlcHRpb24obmV3RXhjZXB0aW9uLCBgZXJyb3JzWyR7aX1dYCwgbmV3RXhjZXB0aW9uSWQsIGV4Y2VwdGlvbklkKTtcbiAgICAgICAgbmV3RXhjZXB0aW9ucyA9IGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gICAgICAgICAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gICAgICAgICAgcGFyc2VyLFxuICAgICAgICAgIGxpbWl0LFxuICAgICAgICAgIGNoaWxkRXJyb3IsXG4gICAgICAgICAga2V5LFxuICAgICAgICAgIFtuZXdFeGNlcHRpb24sIC4uLm5ld0V4Y2VwdGlvbnNdLFxuICAgICAgICAgIG5ld0V4Y2VwdGlvbixcbiAgICAgICAgICBuZXdFeGNlcHRpb25JZCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBuZXdFeGNlcHRpb25zO1xufVxuXG5mdW5jdGlvbiBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yUGFyZW50RXhjZXB0aW9uKGV4Y2VwdGlvbiwgZXhjZXB0aW9uSWQpIHtcbiAgLy8gRG9uJ3Qga25vdyBpZiB0aGlzIGRlZmF1bHQgbWFrZXMgc2Vuc2UuIFRoZSBwcm90b2NvbCByZXF1aXJlcyB1cyB0byBzZXQgdGhlc2UgdmFsdWVzIHNvIHdlIHBpY2sgKnNvbWUqIGRlZmF1bHQuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSBleGNlcHRpb24ubWVjaGFuaXNtIHx8IHsgdHlwZTogJ2dlbmVyaWMnLCBoYW5kbGVkOiB0cnVlIH07XG5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IHtcbiAgICAuLi5leGNlcHRpb24ubWVjaGFuaXNtLFxuICAgIC4uLihleGNlcHRpb24udHlwZSA9PT0gJ0FnZ3JlZ2F0ZUVycm9yJyAmJiB7IGlzX2V4Y2VwdGlvbl9ncm91cDogdHJ1ZSB9KSxcbiAgICBleGNlcHRpb25faWQ6IGV4Y2VwdGlvbklkLFxuICB9O1xufVxuXG5mdW5jdGlvbiBhcHBseUV4Y2VwdGlvbkdyb3VwRmllbGRzRm9yQ2hpbGRFeGNlcHRpb24oXG4gIGV4Y2VwdGlvbixcbiAgc291cmNlLFxuICBleGNlcHRpb25JZCxcbiAgcGFyZW50SWQsXG4pIHtcbiAgLy8gRG9uJ3Qga25vdyBpZiB0aGlzIGRlZmF1bHQgbWFrZXMgc2Vuc2UuIFRoZSBwcm90b2NvbCByZXF1aXJlcyB1cyB0byBzZXQgdGhlc2UgdmFsdWVzIHNvIHdlIHBpY2sgKnNvbWUqIGRlZmF1bHQuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSBleGNlcHRpb24ubWVjaGFuaXNtIHx8IHsgdHlwZTogJ2dlbmVyaWMnLCBoYW5kbGVkOiB0cnVlIH07XG5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IHtcbiAgICAuLi5leGNlcHRpb24ubWVjaGFuaXNtLFxuICAgIHR5cGU6ICdjaGFpbmVkJyxcbiAgICBzb3VyY2UsXG4gICAgZXhjZXB0aW9uX2lkOiBleGNlcHRpb25JZCxcbiAgICBwYXJlbnRfaWQ6IHBhcmVudElkLFxuICB9O1xufVxuXG4vKipcbiAqIFRydW5jYXRlIHRoZSBtZXNzYWdlIChleGNlcHRpb24udmFsdWUpIG9mIGFsbCBleGNlcHRpb25zIGluIHRoZSBldmVudC5cbiAqIEJlY2F1c2UgdGhpcyBldmVudCBwcm9jZXNzb3IgaXMgcmFuIGFmdGVyIGBhcHBseUNsaWVudE9wdGlvbnNgLFxuICogd2UgbmVlZCB0byB0cnVuY2F0ZSB0aGUgbWVzc2FnZSBvZiB0aGUgYWRkZWQgZXhjZXB0aW9ucyBoZXJlLlxuICovXG5mdW5jdGlvbiB0cnVuY2F0ZUFnZ3JlZ2F0ZUV4Y2VwdGlvbnMoZXhjZXB0aW9ucywgbWF4VmFsdWVMZW5ndGgpIHtcbiAgcmV0dXJuIGV4Y2VwdGlvbnMubWFwKGV4Y2VwdGlvbiA9PiB7XG4gICAgaWYgKGV4Y2VwdGlvbi52YWx1ZSkge1xuICAgICAgZXhjZXB0aW9uLnZhbHVlID0gdHJ1bmNhdGUoZXhjZXB0aW9uLnZhbHVlLCBtYXhWYWx1ZUxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBleGNlcHRpb247XG4gIH0pO1xufVxuXG5leHBvcnQgeyBhcHBseUFnZ3JlZ2F0ZUVycm9yc1RvRXZlbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZ3JlZ2F0ZS1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/aggregate-errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BAGGAGE_HEADER_NAME: () => (/* binding */ BAGGAGE_HEADER_NAME),\n/* harmony export */   MAX_BAGGAGE_STRING_LENGTH: () => (/* binding */ MAX_BAGGAGE_STRING_LENGTH),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX_REGEX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX),\n/* harmony export */   baggageHeaderToDynamicSamplingContext: () => (/* binding */ baggageHeaderToDynamicSamplingContext),\n/* harmony export */   dynamicSamplingContextToSentryBaggageHeader: () => (/* binding */ dynamicSamplingContextToSentryBaggageHeader)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/baggage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getComponentName: () => (/* binding */ getComponentName),\n/* harmony export */   getDomElement: () => (/* binding */ getDomElement),\n/* harmony export */   getLocationHref: () => (/* binding */ getLocationHref),\n/* harmony export */   htmlTreeAsString: () => (/* binding */ htmlTreeAsString)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _asyncNullishCoalesce: () => (/* binding */ _asyncNullishCoalesce)\n/* harmony export */ });\n/* harmony import */ var _nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nullishCoalesce.js */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return (0,_nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__._nullishCoalesce)(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEOztBQUV6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxxRUFBZ0I7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19hc3luY051bGxpc2hDb2FsZXNjZS5qcz9kZTM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9udWxsaXNoQ29hbGVzY2UgfSBmcm9tICcuL19udWxsaXNoQ29hbGVzY2UuanMnO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG51bGxpc2ggY29hbGVzY2luZyBvcGVyYXRvciAoYD8/YCksIHdoZW4gdXNlZCBpbiBzaXR1YXRpb25zIHdoZXJlIGF0IGxlYXN0IG9uZSBvZiB0aGUgdmFsdWVzIGlzIHRoZVxuICogcmVzdWx0IG9mIGFuIGFzeW5jIG9wZXJhdGlvbi5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFJIUyBpcyB3cmFwcGVkIGluIGEgZnVuY3Rpb24gc28gdGhhdCBpZiBpdCdzIGEgY29tcHV0ZWQgdmFsdWUsIHRoYXQgZXZhbHVhdGlvbiB3b24ndCBoYXBwZW4gdW5sZXNzIHRoZVxuICogTEhTIGV2YWx1YXRlcyB0byBhIG51bGxpc2ggdmFsdWUsIHRvIG1pbWljIHRoZSBvcGVyYXRvcidzIHNob3J0LWNpcmN1aXRpbmcgYmVoYXZpb3IuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBsaHMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSBsZWZ0IG9mIHRoZSBgPz9gXG4gKiBAcGFyYW0gcmhzRm4gQSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSByaWdodCBvZiB0aGUgYD8/YFxuICogQHJldHVybnMgVGhlIExIUyB2YWx1ZSwgdW5sZXNzIGl0J3MgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBpbiB3aGljaCBjYXNlLCB0aGUgUkhTIHZhbHVlXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIF9hc3luY051bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4gIHJldHVybiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuLy8gICBpZiAobGhzICE9IG51bGwpIHtcbi8vICAgICByZXR1cm4gbGhzO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJldHVybiBhd2FpdCByaHNGbigpO1xuLy8gICB9XG4vLyB9XG5cbmV4cG9ydCB7IF9hc3luY051bGxpc2hDb2FsZXNjZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _nullishCoalesce: () => (/* binding */ _nullishCoalesce)\n/* harmony export */ });\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcz8wMjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgbnVsbGlzaCBjb2FsZXNjaW5nIG9wZXJhdG9yIChgPz9gKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFJIUyBpcyB3cmFwcGVkIGluIGEgZnVuY3Rpb24gc28gdGhhdCBpZiBpdCdzIGEgY29tcHV0ZWQgdmFsdWUsIHRoYXQgZXZhbHVhdGlvbiB3b24ndCBoYXBwZW4gdW5sZXNzIHRoZVxuICogTEhTIGV2YWx1YXRlcyB0byBhIG51bGxpc2ggdmFsdWUsIHRvIG1pbWljIHRoZSBvcGVyYXRvcidzIHNob3J0LWNpcmN1aXRpbmcgYmVoYXZpb3IuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBsaHMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSBsZWZ0IG9mIHRoZSBgPz9gXG4gKiBAcGFyYW0gcmhzRm4gQSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSByaWdodCBvZiB0aGUgYD8/YFxuICogQHJldHVybnMgVGhlIExIUyB2YWx1ZSwgdW5sZXNzIGl0J3MgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBpbiB3aGljaCBjYXNlLCB0aGUgUkhTIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgcmV0dXJuIGxocyAhPSBudWxsID8gbGhzIDogcmhzRm4oKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4vLyAgIGlmIChsaHMgIT0gbnVsbCkge1xuLy8gICAgIHJldHVybiBsaHM7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgcmV0dXJuIHJoc0ZuKCk7XG4vLyAgIH1cbi8vIH1cblxuZXhwb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X251bGxpc2hDb2FsZXNjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _optionalChain: () => (/* binding */ _optionalChain)\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanM/Y2ZmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucy5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvblxuICovXG5mdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbiAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gIGxldCB2YWx1ZSA9IG9wc1swXTtcbiAgbGV0IGkgPSAxO1xuICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbiAgICBjb25zdCBvcCA9IG9wc1tpXSA7XG4gICAgY29uc3QgZm4gPSBvcHNbaSArIDFdIDtcbiAgICBpICs9IDI7XG4gICAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbiAgICAgIC8vIHJlYWxseSB3ZSdyZSBtZWFuaW5nIHRvIHJldHVybiBgdW5kZWZpbmVkYCBhcyBhbiBhY3R1YWwgdmFsdWUgaGVyZSwgYnV0IGl0IHNhdmVzIGJ5dGVzIG5vdCB0byB3cml0ZSBpdFxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4gICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiAodmFsdWUgKS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbi8vICAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgIGxldCB2YWx1ZSA9IG9wc1swXTtcbi8vICAgbGV0IGkgPSAxO1xuLy8gICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbi8vICAgICBjb25zdCBvcCA9IG9wc1tpXTtcbi8vICAgICBjb25zdCBmbiA9IG9wc1tpICsgMV07XG4vLyAgICAgaSArPSAyO1xuLy8gICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4vLyAgICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbi8vICAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4vLyAgICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICB9XG4vLyAgIHJldHVybiB2YWx1ZTtcbi8vIH1cblxuZXhwb3J0IHsgX29wdGlvbmFsQ2hhaW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9vcHRpb25hbENoYWluLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _optionalChainDelete: () => (/* binding */ _optionalChainDelete)\n/* harmony export */ });\n/* harmony import */ var _optionalChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_optionalChain.js */ \"(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = (0,_optionalChain_js__WEBPACK_IMPORTED_MODULE_0__._optionalChain)(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\n\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW5EZWxldGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7O0FBRXJEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzP2I2OGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICcuL19vcHRpb25hbENoYWluLmpzJztcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvdHJlZS8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBpbiBjYXNlcyB3aGVyZSB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaXMgdG8gYmUgZGVsZXRlZC5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGBkZWxldGVgIG9wZXJhdG9yOiBgdHJ1ZWAsIHVubGVzcyB0aGUgZGVsZXRpb24gdGFyZ2V0IGlzIGFuIG93biwgbm9uLWNvbmZpZ3VyYWJsZVxuICogcHJvcGVydHkgKG9uZSB3aGljaCBjYW4ndCBiZSBkZWxldGVkIG9yIHR1cm5lZCBpbnRvIGFuIGFjY2Vzc29yLCBhbmQgd2hvc2UgZW51bWVyYWJpbGl0eSBjYW4ndCBiZSBjaGFuZ2VkKSwgaW4gd2hpY2hcbiAqIGNhc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4gIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluKG9wcykgO1xuICAvLyBJZiBgcmVzdWx0YCBpcyBgbnVsbGAsIGl0IG1lYW5zIHdlIGRpZG4ndCBnZXQgdG8gdGhlIGVuZCBvZiB0aGUgY2hhaW4gYW5kIHNvIG5vdGhpbmcgd2FzIGRlbGV0ZWQgKGluIHdoaWNoIGNhc2UsXG4gIC8vIHJldHVybiBgdHJ1ZWAgc2luY2UgdGhhdCdzIHdoYXQgYGRlbGV0ZWAgZG9lcyB3aGVuIGl0IG5vLW9wcykuIElmIGl0J3Mgbm9uLW51bGwsIHdlIGtub3cgdGhlIGRlbGV0ZSBoYXBwZW5lZCwgaW5cbiAgLy8gd2hpY2ggY2FzZSB3ZSByZXR1cm4gd2hhdGV2ZXIgdGhlIGBkZWxldGVgIHJldHVybmVkLCB3aGljaCB3aWxsIGJlIGEgYm9vbGVhbi5cbiAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluKG9wcyk7XG4vLyAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuLy8gICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogcmVzdWx0O1xuLy8gfVxuXG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbkRlbGV0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW5EZWxldGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/cookie.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/cookie.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCookie: () => (/* binding */ parseCookie)\n/* harmony export */ });\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\n\n//# sourceMappingURL=cookie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY29va2llLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLGdDQUFnQztBQUNoQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY29va2llLmpzPzdmYjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgY29waWVkIGZyb20gdGhlICdjb29raWVgIG1vZHVsZSBhdCB2MC41LjAgYW5kIHdhcyBzaW1wbGlmaWVkIGZvciBvdXIgdXNlIGNhc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vanNodHRwL2Nvb2tpZS9ibG9iL2EwYzg0MTQ3YWFiNjI2NmJkYjM5OTZjZjQwNjJlOTM5MDdjMGIwZmMvaW5kZXguanNcbiAqIEl0IGhhZCB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6XG4gKlxuICogKFRoZSBNSVQgTGljZW5zZSlcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hbiA8c2h0eWxtYW5AZ21haWwuY29tPlxuICogQ29weXJpZ2h0IChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uIDxkb3VnQHNvbWV0aGluZ2RvdWcuY29tPlxuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZ1xuICogYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4gKiAnU29mdHdhcmUnKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4gKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4gKiBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG9cbiAqIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0b1xuICogdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlXG4gKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCxcbiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULlxuICogSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTllcbiAqIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsXG4gKiBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRVxuICogU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4gKi9cblxuLyoqXG4gKiBQYXJzZXMgYSBjb29raWUgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ29va2llKHN0cikge1xuICBjb25zdCBvYmogPSB7fTtcbiAgbGV0IGluZGV4ID0gMDtcblxuICB3aGlsZSAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgY29uc3QgZXFJZHggPSBzdHIuaW5kZXhPZignPScsIGluZGV4KTtcblxuICAgIC8vIG5vIG1vcmUgY29va2llIHBhaXJzXG4gICAgaWYgKGVxSWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgbGV0IGVuZElkeCA9IHN0ci5pbmRleE9mKCc7JywgaW5kZXgpO1xuXG4gICAgaWYgKGVuZElkeCA9PT0gLTEpIHtcbiAgICAgIGVuZElkeCA9IHN0ci5sZW5ndGg7XG4gICAgfSBlbHNlIGlmIChlbmRJZHggPCBlcUlkeCkge1xuICAgICAgLy8gYmFja3RyYWNrIG9uIHByaW9yIHNlbWljb2xvblxuICAgICAgaW5kZXggPSBzdHIubGFzdEluZGV4T2YoJzsnLCBlcUlkeCAtIDEpICsgMTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IHN0ci5zbGljZShpbmRleCwgZXFJZHgpLnRyaW0oKTtcblxuICAgIC8vIG9ubHkgYXNzaWduIG9uY2VcbiAgICBpZiAodW5kZWZpbmVkID09PSBvYmpba2V5XSkge1xuICAgICAgbGV0IHZhbCA9IHN0ci5zbGljZShlcUlkeCArIDEsIGVuZElkeCkudHJpbSgpO1xuXG4gICAgICAvLyBxdW90ZWQgdmFsdWVzXG4gICAgICBpZiAodmFsLmNoYXJDb2RlQXQoMCkgPT09IDB4MjIpIHtcbiAgICAgICAgdmFsID0gdmFsLnNsaWNlKDEsIC0xKTtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWwuaW5kZXhPZignJScpICE9PSAtMSA/IGRlY29kZVVSSUNvbXBvbmVudCh2YWwpIDogdmFsO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpbmRleCA9IGVuZElkeCArIDE7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgeyBwYXJzZUNvb2tpZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29va2llLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/debug-build.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/debug-build.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZGVidWctYnVpbGQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBdUMsSUFBSSxLQUFnQjs7QUFFekQ7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9kZWJ1Zy1idWlsZC5qcz83NWRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/dsn.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/dsn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dsnFromString: () => (/* binding */ dsnFromString),\n/* harmony export */   dsnToString: () => (/* binding */ dsnToString),\n/* harmony export */   makeDsn: () => (/* binding */ makeDsn)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    (0,_logger_js__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\n\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZHNuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStDO0FBQ007O0FBRXJEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksMERBQWM7QUFDbEI7QUFDQSwyQ0FBMkMsSUFBSTtBQUMvQyxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1FQUFtRTtBQUNoRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyx3REFBVztBQUNsQjtBQUNBOztBQUVBLFVBQVUsNEJBQTRCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxNQUFNLDhDQUFNLDhCQUE4QixXQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSw4Q0FBTSxnREFBZ0QsVUFBVTtBQUNwRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSw4Q0FBTSwrQ0FBK0MsU0FBUztBQUNsRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSw4Q0FBTSwyQ0FBMkMsS0FBSztBQUMxRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0M7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9kc24uanM/ODg2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgY29uc29sZVNhbmRib3gsIGxvZ2dlciB9IGZyb20gJy4vbG9nZ2VyLmpzJztcblxuLyoqIFJlZ3VsYXIgZXhwcmVzc2lvbiB1c2VkIHRvIHBhcnNlIGEgRHNuLiAqL1xuY29uc3QgRFNOX1JFR0VYID0gL14oPzooXFx3Kyk6KVxcL1xcLyg/OihcXHcrKSg/OjooXFx3Kyk/KT9AKShbXFx3Li1dKykoPzo6KFxcZCspKT9cXC8oLispLztcblxuZnVuY3Rpb24gaXNWYWxpZFByb3RvY29sKHByb3RvY29sKSB7XG4gIHJldHVybiBwcm90b2NvbCA9PT0gJ2h0dHAnIHx8IHByb3RvY29sID09PSAnaHR0cHMnO1xufVxuXG4vKipcbiAqIFJlbmRlcnMgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGlzIERzbi5cbiAqXG4gKiBCeSBkZWZhdWx0LCB0aGlzIHdpbGwgcmVuZGVyIHRoZSBwdWJsaWMgcmVwcmVzZW50YXRpb24gd2l0aG91dCB0aGUgcGFzc3dvcmRcbiAqIGNvbXBvbmVudC4gVG8gZ2V0IHRoZSBkZXByZWNhdGVkIHByaXZhdGUgcmVwcmVzZW50YXRpb24sIHNldCBgd2l0aFBhc3N3b3JkYFxuICogdG8gdHJ1ZS5cbiAqXG4gKiBAcGFyYW0gd2l0aFBhc3N3b3JkIFdoZW4gc2V0IHRvIHRydWUsIHRoZSBwYXNzd29yZCB3aWxsIGJlIGluY2x1ZGVkLlxuICovXG5mdW5jdGlvbiBkc25Ub1N0cmluZyhkc24sIHdpdGhQYXNzd29yZCA9IGZhbHNlKSB7XG4gIGNvbnN0IHsgaG9zdCwgcGF0aCwgcGFzcywgcG9ydCwgcHJvamVjdElkLCBwcm90b2NvbCwgcHVibGljS2V5IH0gPSBkc247XG4gIHJldHVybiAoXG4gICAgYCR7cHJvdG9jb2x9Oi8vJHtwdWJsaWNLZXl9JHt3aXRoUGFzc3dvcmQgJiYgcGFzcyA/IGA6JHtwYXNzfWAgOiAnJ31gICtcbiAgICBgQCR7aG9zdH0ke3BvcnQgPyBgOiR7cG9ydH1gIDogJyd9LyR7cGF0aCA/IGAke3BhdGh9L2AgOiBwYXRofSR7cHJvamVjdElkfWBcbiAgKTtcbn1cblxuLyoqXG4gKiBQYXJzZXMgYSBEc24gZnJvbSBhIGdpdmVuIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gc3RyIEEgRHNuIGFzIHN0cmluZ1xuICogQHJldHVybnMgRHNuIGFzIERzbkNvbXBvbmVudHMgb3IgdW5kZWZpbmVkIGlmIEBwYXJhbSBzdHIgaXMgbm90IGEgdmFsaWQgRFNOIHN0cmluZ1xuICovXG5mdW5jdGlvbiBkc25Gcm9tU3RyaW5nKHN0cikge1xuICBjb25zdCBtYXRjaCA9IERTTl9SRUdFWC5leGVjKHN0cik7XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIC8vIFRoaXMgc2hvdWxkIGJlIGxvZ2dlZCB0byB0aGUgY29uc29sZVxuICAgIGNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246ICR7c3RyfWApO1xuICAgIH0pO1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBbcHJvdG9jb2wsIHB1YmxpY0tleSwgcGFzcyA9ICcnLCBob3N0LCBwb3J0ID0gJycsIGxhc3RQYXRoXSA9IG1hdGNoLnNsaWNlKDEpO1xuICBsZXQgcGF0aCA9ICcnO1xuICBsZXQgcHJvamVjdElkID0gbGFzdFBhdGg7XG5cbiAgY29uc3Qgc3BsaXQgPSBwcm9qZWN0SWQuc3BsaXQoJy8nKTtcbiAgaWYgKHNwbGl0Lmxlbmd0aCA+IDEpIHtcbiAgICBwYXRoID0gc3BsaXQuc2xpY2UoMCwgLTEpLmpvaW4oJy8nKTtcbiAgICBwcm9qZWN0SWQgPSBzcGxpdC5wb3AoKSA7XG4gIH1cblxuICBpZiAocHJvamVjdElkKSB7XG4gICAgY29uc3QgcHJvamVjdE1hdGNoID0gcHJvamVjdElkLm1hdGNoKC9eXFxkKy8pO1xuICAgIGlmIChwcm9qZWN0TWF0Y2gpIHtcbiAgICAgIHByb2plY3RJZCA9IHByb2plY3RNYXRjaFswXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZHNuRnJvbUNvbXBvbmVudHMoeyBob3N0LCBwYXNzLCBwYXRoLCBwcm9qZWN0SWQsIHBvcnQsIHByb3RvY29sOiBwcm90b2NvbCAsIHB1YmxpY0tleSB9KTtcbn1cblxuZnVuY3Rpb24gZHNuRnJvbUNvbXBvbmVudHMoY29tcG9uZW50cykge1xuICByZXR1cm4ge1xuICAgIHByb3RvY29sOiBjb21wb25lbnRzLnByb3RvY29sLFxuICAgIHB1YmxpY0tleTogY29tcG9uZW50cy5wdWJsaWNLZXkgfHwgJycsXG4gICAgcGFzczogY29tcG9uZW50cy5wYXNzIHx8ICcnLFxuICAgIGhvc3Q6IGNvbXBvbmVudHMuaG9zdCxcbiAgICBwb3J0OiBjb21wb25lbnRzLnBvcnQgfHwgJycsXG4gICAgcGF0aDogY29tcG9uZW50cy5wYXRoIHx8ICcnLFxuICAgIHByb2plY3RJZDogY29tcG9uZW50cy5wcm9qZWN0SWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRHNuKGRzbikge1xuICBpZiAoIURFQlVHX0JVSUxEKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdCB7IHBvcnQsIHByb2plY3RJZCwgcHJvdG9jb2wgfSA9IGRzbjtcblxuICBjb25zdCByZXF1aXJlZENvbXBvbmVudHMgPSBbJ3Byb3RvY29sJywgJ3B1YmxpY0tleScsICdob3N0JywgJ3Byb2plY3RJZCddO1xuICBjb25zdCBoYXNNaXNzaW5nUmVxdWlyZWRDb21wb25lbnQgPSByZXF1aXJlZENvbXBvbmVudHMuZmluZChjb21wb25lbnQgPT4ge1xuICAgIGlmICghZHNuW2NvbXBvbmVudF0pIHtcbiAgICAgIGxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiAke2NvbXBvbmVudH0gbWlzc2luZ2ApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG5cbiAgaWYgKGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghcHJvamVjdElkLm1hdGNoKC9eXFxkKyQvKSkge1xuICAgIGxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHByb2plY3RJZCAke3Byb2plY3RJZH1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIWlzVmFsaWRQcm90b2NvbChwcm90b2NvbCkpIHtcbiAgICBsb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm90b2NvbCAke3Byb3RvY29sfWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChwb3J0ICYmIGlzTmFOKHBhcnNlSW50KHBvcnQsIDEwKSkpIHtcbiAgICBsb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwb3J0ICR7cG9ydH1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdmFsaWQgU2VudHJ5IERzbiBvYmplY3QsIGlkZW50aWZ5aW5nIGEgU2VudHJ5IGluc3RhbmNlIGFuZCBwcm9qZWN0LlxuICogQHJldHVybnMgYSB2YWxpZCBEc25Db21wb25lbnRzIG9iamVjdCBvciBgdW5kZWZpbmVkYCBpZiBAcGFyYW0gZnJvbSBpcyBhbiBpbnZhbGlkIERTTiBzb3VyY2VcbiAqL1xuZnVuY3Rpb24gbWFrZURzbihmcm9tKSB7XG4gIGNvbnN0IGNvbXBvbmVudHMgPSB0eXBlb2YgZnJvbSA9PT0gJ3N0cmluZycgPyBkc25Gcm9tU3RyaW5nKGZyb20pIDogZHNuRnJvbUNvbXBvbmVudHMoZnJvbSk7XG4gIGlmICghY29tcG9uZW50cyB8fCAhdmFsaWRhdGVEc24oY29tcG9uZW50cykpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiBjb21wb25lbnRzO1xufVxuXG5leHBvcnQgeyBkc25Gcm9tU3RyaW5nLCBkc25Ub1N0cmluZywgbWFrZURzbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHNuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/dsn.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/env.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/env.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSDKSource: () => (/* binding */ getSDKSource),\n/* harmony export */   isBrowserBundle: () => (/* binding */ isBrowserBundle)\n/* harmony export */ });\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\n\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Vudi5qcz8xZWNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBUaGlzIG1vZHVsZSBleGlzdHMgZm9yIG9wdGltaXphdGlvbnMgaW4gdGhlIGJ1aWxkIHByb2Nlc3MgdGhyb3VnaCByb2xsdXAgYW5kIHRlcnNlci4gIFdlIGRlZmluZSBzb21lIGdsb2JhbFxuICogY29uc3RhbnRzLCB3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiBkdXJpbmcgYnVpbGQuIEJ5IGd1YXJkaW5nIGNlcnRhaW4gcGllY2VzIG9mIGNvZGUgd2l0aCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gdGhlc2VcbiAqIGNvbnN0YW50cywgd2UgY2FuIGNvbnRyb2wgd2hldGhlciBvciBub3QgdGhleSBhcHBlYXIgaW4gdGhlIGZpbmFsIGJ1bmRsZS4gKEFueSBjb2RlIGd1YXJkZWQgYnkgYSBmYWxzZSBjb25kaXRpb24gd2lsbFxuICogbmV2ZXIgcnVuLCBhbmQgd2lsbCBoZW5jZSBiZSBkcm9wcGVkIGR1cmluZyB0cmVlc2hha2luZy4pIFRoZSB0d28gcHJpbWFyeSB1c2VzIGZvciB0aGlzIGFyZSBzdHJpcHBpbmcgb3V0IGNhbGxzIHRvXG4gKiBgbG9nZ2VyYCBhbmQgcHJldmVudGluZyBub2RlLXJlbGF0ZWQgY29kZSBmcm9tIGFwcGVhcmluZyBpbiBicm93c2VyIGJ1bmRsZXMuXG4gKlxuICogQXR0ZW50aW9uOlxuICogVGhpcyBmaWxlIHNob3VsZCBub3QgYmUgdXNlZCB0byBkZWZpbmUgY29uc3RhbnRzL2ZsYWdzIHRoYXQgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgZm9yIHRyZWUtc2hha2luZyBjb25kdWN0ZWQgYnlcbiAqIHVzZXJzLiBUaGVzZSBmbGFncyBzaG91bGQgbGl2ZSBpbiB0aGVpciByZXNwZWN0aXZlIHBhY2thZ2VzLCBhcyB3ZSBpZGVudGlmaWVkIHVzZXIgdG9vbGluZyAoc3BlY2lmaWNhbGx5IHdlYnBhY2spXG4gKiBoYXZpbmcgaXNzdWVzIHRyZWUtc2hha2luZyB0aGVzZSBjb25zdGFudHMgYWNyb3NzIHBhY2thZ2UgYm91bmRhcmllcy5cbiAqIEFuIGV4YW1wbGUgZm9yIHRoaXMgaXMgdGhlIF9fU0VOVFJZX0RFQlVHX18gY29uc3RhbnQuIEl0IGlzIGRlY2xhcmVkIGluIGVhY2ggcGFja2FnZSBpbmRpdmlkdWFsbHkgYmVjYXVzZSB3ZSB3YW50XG4gKiB1c2VycyB0byBiZSBhYmxlIHRvIHNoYWtlIGF3YXkgZXhwcmVzc2lvbnMgdGhhdCBpdCBndWFyZHMuXG4gKi9cblxuLyoqXG4gKiBGaWd1cmVzIG91dCBpZiB3ZSdyZSBidWlsZGluZyBhIGJyb3dzZXIgYnVuZGxlLlxuICpcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhpcyBpcyBhIGJyb3dzZXIgYnVuZGxlIGJ1aWxkLlxuICovXG5mdW5jdGlvbiBpc0Jyb3dzZXJCdW5kbGUoKSB7XG4gIHJldHVybiB0eXBlb2YgX19TRU5UUllfQlJPV1NFUl9CVU5ETEVfXyAhPT0gJ3VuZGVmaW5lZCcgJiYgISFfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fO1xufVxuXG4vKipcbiAqIEdldCBzb3VyY2Ugb2YgU0RLLlxuICovXG5mdW5jdGlvbiBnZXRTREtTb3VyY2UoKSB7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgXCJucG1cIiBpcyBpbmplY3RlZCBieSByb2xsdXAgZHVyaW5nIGJ1aWxkIHByb2Nlc3NcbiAgcmV0dXJuIFwibnBtXCI7XG59XG5cbmV4cG9ydCB7IGdldFNES1NvdXJjZSwgaXNCcm93c2VyQnVuZGxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/envelope.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/envelope.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addItemToEnvelope: () => (/* binding */ addItemToEnvelope),\n/* harmony export */   createAttachmentEnvelopeItem: () => (/* binding */ createAttachmentEnvelopeItem),\n/* harmony export */   createEnvelope: () => (/* binding */ createEnvelope),\n/* harmony export */   createEventEnvelopeHeaders: () => (/* binding */ createEventEnvelopeHeaders),\n/* harmony export */   envelopeContainsItemType: () => (/* binding */ envelopeContainsItemType),\n/* harmony export */   envelopeItemTypeToDataCategory: () => (/* binding */ envelopeItemTypeToDataCategory),\n/* harmony export */   forEachEnvelopeItem: () => (/* binding */ forEachEnvelopeItem),\n/* harmony export */   getSdkMetadataForEnvelopeHeader: () => (/* binding */ getSdkMetadataForEnvelopeHeader),\n/* harmony export */   parseEnvelope: () => (/* binding */ parseEnvelope),\n/* harmony export */   serializeEnvelope: () => (/* binding */ serializeEnvelope)\n/* harmony export */ });\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsn.js */ \"(rsc)/./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/envelope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/error.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SentryError: () => (/* binding */ SentryError)\n/* harmony export */ });\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Vycm9yLmpzPzBjODgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEFuIGVycm9yIGVtaXR0ZWQgYnkgU2VudHJ5IFNES3MgYW5kIHJlbGF0ZWQgdXRpbGl0aWVzLiAqL1xuY2xhc3MgU2VudHJ5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhpcyBlcnJvciBpbnN0YW5jZS4gKi9cblxuICAgY29uc3RydWN0b3IoIG1lc3NhZ2UsIGxvZ0xldmVsID0gJ3dhcm4nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7dGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLm5hbWUgPSBuZXcudGFyZ2V0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIC8vIFRoaXMgc2V0cyB0aGUgcHJvdG90eXBlIHRvIGJlIGBFcnJvcmAsIG5vdCBgU2VudHJ5RXJyb3JgLiBJdCdzIHVuY2xlYXIgd2h5IHdlIGRvIHRoaXMsIGJ1dCBjb21tZW50aW5nIHRoaXMgbGluZVxuICAgIC8vIG91dCBjYXVzZXMgdmFyaW91cyAoc2VlbWluZ2x5IHRvdGFsbHkgdW5yZWxhdGVkKSBwbGF5d3JpZ2h0IHRlc3RzIGNvbnNpc3RlbnRseSB0aW1lIG91dC4gRllJLCB0aGlzIG1ha2VzXG4gICAgLy8gaW5zdGFuY2VzIG9mIGBTZW50cnlFcnJvcmAgZmFpbCBgb2JqIGluc3RhbmNlb2YgU2VudHJ5RXJyb3JgIGNoZWNrcy5cbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICAgIHRoaXMubG9nTGV2ZWwgPSBsb2dMZXZlbDtcbiAgfVxufVxuXG5leHBvcnQgeyBTZW50cnlFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/eventbuilder.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/eventbuilder.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventFromMessage: () => (/* binding */ eventFromMessage),\n/* harmony export */   eventFromUnknownInput: () => (/* binding */ eventFromUnknownInput),\n/* harmony export */   exceptionFromError: () => (/* binding */ exceptionFromError),\n/* harmony export */   parseStackFrames: () => (/* binding */ parseStackFrames)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  } else {\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    return `Object captured as exception with keys: ${(0,_object_js__WEBPACK_IMPORTED_MODULE_0__.extractExceptionKeysForMessage)(\n      exception ,\n    )}`;\n  }\n}\n\n/**\n * Builds and Event from a Exception\n *\n * TODO(v8): Remove getHub fallback\n * @hidden\n */\nfunction eventFromUnknownInput(\n  // eslint-disable-next-line deprecation/deprecation\n  getHubOrClient,\n  stackParser,\n  exception,\n  hint,\n) {\n  const client =\n    typeof getHubOrClient === 'function'\n      ? // eslint-disable-next-line deprecation/deprecation\n        getHubOrClient().getClient()\n      : getHubOrClient;\n\n  let ex = exception;\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  let extras;\n\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception)) {\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      extras = { ['__serialized__']: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeToSize)(exception , normalizeDepth) };\n\n      const message = getMessageForObject(exception);\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex ).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception );\n      (ex ).message = exception ;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex )],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, undefined, undefined);\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isParameterizedString)(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXZlbnRidWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ0M7QUFDeEI7QUFDWTs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0IsZUFBZTs7QUFFckM7QUFDQSxtQ0FBbUMsa0JBQWtCO0FBQ3JEOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxzREFBc0QsMEVBQThCO0FBQ3BGO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU8sK0NBQU87QUFDZCxRQUFRLHFEQUFhO0FBQ3JCO0FBQ0EsaUJBQWlCLG9CQUFvQiw4REFBZTs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLG9FQUFvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLCtEQUFxQjtBQUN2QixFQUFFLCtEQUFxQjs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixRQUFRO0FBQ2xDLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLDZEQUFxQjtBQUMzQixZQUFZLHlEQUF5RDs7QUFFckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFeUY7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9ldmVudGJ1aWxkZXIuanM/MTNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Vycm9yLCBpc1BsYWluT2JqZWN0LCBpc1BhcmFtZXRlcml6ZWRTdHJpbmcgfSBmcm9tICcuL2lzLmpzJztcbmltcG9ydCB7IGFkZEV4Y2VwdGlvblR5cGVWYWx1ZSwgYWRkRXhjZXB0aW9uTWVjaGFuaXNtIH0gZnJvbSAnLi9taXNjLmpzJztcbmltcG9ydCB7IG5vcm1hbGl6ZVRvU2l6ZSB9IGZyb20gJy4vbm9ybWFsaXplLmpzJztcbmltcG9ydCB7IGV4dHJhY3RFeGNlcHRpb25LZXlzRm9yTWVzc2FnZSB9IGZyb20gJy4vb2JqZWN0LmpzJztcblxuLyoqXG4gKiBFeHRyYWN0cyBzdGFjayBmcmFtZXMgZnJvbSB0aGUgZXJyb3Iuc3RhY2sgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHBhcnNlU3RhY2tGcmFtZXMoc3RhY2tQYXJzZXIsIGVycm9yKSB7XG4gIHJldHVybiBzdGFja1BhcnNlcihlcnJvci5zdGFjayB8fCAnJywgMSk7XG59XG5cbi8qKlxuICogRXh0cmFjdHMgc3RhY2sgZnJhbWVzIGZyb20gdGhlIGVycm9yIGFuZCBidWlsZHMgYSBTZW50cnkgRXhjZXB0aW9uXG4gKi9cbmZ1bmN0aW9uIGV4Y2VwdGlvbkZyb21FcnJvcihzdGFja1BhcnNlciwgZXJyb3IpIHtcbiAgY29uc3QgZXhjZXB0aW9uID0ge1xuICAgIHR5cGU6IGVycm9yLm5hbWUgfHwgZXJyb3IuY29uc3RydWN0b3IubmFtZSxcbiAgICB2YWx1ZTogZXJyb3IubWVzc2FnZSxcbiAgfTtcblxuICBjb25zdCBmcmFtZXMgPSBwYXJzZVN0YWNrRnJhbWVzKHN0YWNrUGFyc2VyLCBlcnJvcik7XG4gIGlmIChmcmFtZXMubGVuZ3RoKSB7XG4gICAgZXhjZXB0aW9uLnN0YWNrdHJhY2UgPSB7IGZyYW1lcyB9O1xuICB9XG5cbiAgcmV0dXJuIGV4Y2VwdGlvbjtcbn1cblxuZnVuY3Rpb24gZ2V0TWVzc2FnZUZvck9iamVjdChleGNlcHRpb24pIHtcbiAgaWYgKCduYW1lJyBpbiBleGNlcHRpb24gJiYgdHlwZW9mIGV4Y2VwdGlvbi5uYW1lID09PSAnc3RyaW5nJykge1xuICAgIGxldCBtZXNzYWdlID0gYCcke2V4Y2VwdGlvbi5uYW1lfScgY2FwdHVyZWQgYXMgZXhjZXB0aW9uYDtcblxuICAgIGlmICgnbWVzc2FnZScgaW4gZXhjZXB0aW9uICYmIHR5cGVvZiBleGNlcHRpb24ubWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1lc3NhZ2UgKz0gYCB3aXRoIG1lc3NhZ2UgJyR7ZXhjZXB0aW9uLm1lc3NhZ2V9J2A7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH0gZWxzZSBpZiAoJ21lc3NhZ2UnIGluIGV4Y2VwdGlvbiAmJiB0eXBlb2YgZXhjZXB0aW9uLm1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGV4Y2VwdGlvbi5tZXNzYWdlO1xuICB9IGVsc2Uge1xuICAgIC8vIFRoaXMgd2lsbCBhbGxvdyB1cyB0byBncm91cCBldmVudHMgYmFzZWQgb24gdG9wLWxldmVsIGtleXNcbiAgICAvLyB3aGljaCBpcyBtdWNoIGJldHRlciB0aGFuIGNyZWF0aW5nIG5ldyBncm91cCB3aGVuIGFueSBrZXkvdmFsdWUgY2hhbmdlXG4gICAgcmV0dXJuIGBPYmplY3QgY2FwdHVyZWQgYXMgZXhjZXB0aW9uIHdpdGgga2V5czogJHtleHRyYWN0RXhjZXB0aW9uS2V5c0Zvck1lc3NhZ2UoXG4gICAgICBleGNlcHRpb24gLFxuICAgICl9YDtcbiAgfVxufVxuXG4vKipcbiAqIEJ1aWxkcyBhbmQgRXZlbnQgZnJvbSBhIEV4Y2VwdGlvblxuICpcbiAqIFRPRE8odjgpOiBSZW1vdmUgZ2V0SHViIGZhbGxiYWNrXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGV2ZW50RnJvbVVua25vd25JbnB1dChcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGdldEh1Yk9yQ2xpZW50LFxuICBzdGFja1BhcnNlcixcbiAgZXhjZXB0aW9uLFxuICBoaW50LFxuKSB7XG4gIGNvbnN0IGNsaWVudCA9XG4gICAgdHlwZW9mIGdldEh1Yk9yQ2xpZW50ID09PSAnZnVuY3Rpb24nXG4gICAgICA/IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgICBnZXRIdWJPckNsaWVudCgpLmdldENsaWVudCgpXG4gICAgICA6IGdldEh1Yk9yQ2xpZW50O1xuXG4gIGxldCBleCA9IGV4Y2VwdGlvbjtcbiAgY29uc3QgcHJvdmlkZWRNZWNoYW5pc20gPVxuICAgIGhpbnQgJiYgaGludC5kYXRhICYmIChoaW50LmRhdGEgKS5tZWNoYW5pc207XG4gIGNvbnN0IG1lY2hhbmlzbSA9IHByb3ZpZGVkTWVjaGFuaXNtIHx8IHtcbiAgICBoYW5kbGVkOiB0cnVlLFxuICAgIHR5cGU6ICdnZW5lcmljJyxcbiAgfTtcblxuICBsZXQgZXh0cmFzO1xuXG4gIGlmICghaXNFcnJvcihleGNlcHRpb24pKSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3QoZXhjZXB0aW9uKSkge1xuICAgICAgY29uc3Qgbm9ybWFsaXplRGVwdGggPSBjbGllbnQgJiYgY2xpZW50LmdldE9wdGlvbnMoKS5ub3JtYWxpemVEZXB0aDtcbiAgICAgIGV4dHJhcyA9IHsgWydfX3NlcmlhbGl6ZWRfXyddOiBub3JtYWxpemVUb1NpemUoZXhjZXB0aW9uICwgbm9ybWFsaXplRGVwdGgpIH07XG5cbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBnZXRNZXNzYWdlRm9yT2JqZWN0KGV4Y2VwdGlvbik7XG4gICAgICBleCA9IChoaW50ICYmIGhpbnQuc3ludGhldGljRXhjZXB0aW9uKSB8fCBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICAoZXggKS5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVGhpcyBoYW5kbGVzIHdoZW4gc29tZW9uZSBkb2VzOiBgdGhyb3cgXCJzb21ldGhpbmcgYXdlc29tZVwiO2BcbiAgICAgIC8vIFdlIHVzZSBzeW50aGVzaXplZCBFcnJvciBoZXJlIHNvIHdlIGNhbiBleHRyYWN0IGEgKHJvdWdoKSBzdGFjayB0cmFjZS5cbiAgICAgIGV4ID0gKGhpbnQgJiYgaGludC5zeW50aGV0aWNFeGNlcHRpb24pIHx8IG5ldyBFcnJvcihleGNlcHRpb24gKTtcbiAgICAgIChleCApLm1lc3NhZ2UgPSBleGNlcHRpb24gO1xuICAgIH1cbiAgICBtZWNoYW5pc20uc3ludGhldGljID0gdHJ1ZTtcbiAgfVxuXG4gIGNvbnN0IGV2ZW50ID0ge1xuICAgIGV4Y2VwdGlvbjoge1xuICAgICAgdmFsdWVzOiBbZXhjZXB0aW9uRnJvbUVycm9yKHN0YWNrUGFyc2VyLCBleCApXSxcbiAgICB9LFxuICB9O1xuXG4gIGlmIChleHRyYXMpIHtcbiAgICBldmVudC5leHRyYSA9IGV4dHJhcztcbiAgfVxuXG4gIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZShldmVudCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpO1xuICBhZGRFeGNlcHRpb25NZWNoYW5pc20oZXZlbnQsIG1lY2hhbmlzbSk7XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5ldmVudCxcbiAgICBldmVudF9pZDogaGludCAmJiBoaW50LmV2ZW50X2lkLFxuICB9O1xufVxuXG4vKipcbiAqIEJ1aWxkcyBhbmQgRXZlbnQgZnJvbSBhIE1lc3NhZ2VcbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gZXZlbnRGcm9tTWVzc2FnZShcbiAgc3RhY2tQYXJzZXIsXG4gIG1lc3NhZ2UsXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBsZXZlbCA9ICdpbmZvJyxcbiAgaGludCxcbiAgYXR0YWNoU3RhY2t0cmFjZSxcbikge1xuICBjb25zdCBldmVudCA9IHtcbiAgICBldmVudF9pZDogaGludCAmJiBoaW50LmV2ZW50X2lkLFxuICAgIGxldmVsLFxuICB9O1xuXG4gIGlmIChhdHRhY2hTdGFja3RyYWNlICYmIGhpbnQgJiYgaGludC5zeW50aGV0aWNFeGNlcHRpb24pIHtcbiAgICBjb25zdCBmcmFtZXMgPSBwYXJzZVN0YWNrRnJhbWVzKHN0YWNrUGFyc2VyLCBoaW50LnN5bnRoZXRpY0V4Y2VwdGlvbik7XG4gICAgaWYgKGZyYW1lcy5sZW5ndGgpIHtcbiAgICAgIGV2ZW50LmV4Y2VwdGlvbiA9IHtcbiAgICAgICAgdmFsdWVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdmFsdWU6IG1lc3NhZ2UsXG4gICAgICAgICAgICBzdGFja3RyYWNlOiB7IGZyYW1lcyB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGlmIChpc1BhcmFtZXRlcml6ZWRTdHJpbmcobWVzc2FnZSkpIHtcbiAgICBjb25zdCB7IF9fc2VudHJ5X3RlbXBsYXRlX3N0cmluZ19fLCBfX3NlbnRyeV90ZW1wbGF0ZV92YWx1ZXNfXyB9ID0gbWVzc2FnZTtcblxuICAgIGV2ZW50LmxvZ2VudHJ5ID0ge1xuICAgICAgbWVzc2FnZTogX19zZW50cnlfdGVtcGxhdGVfc3RyaW5nX18sXG4gICAgICBwYXJhbXM6IF9fc2VudHJ5X3RlbXBsYXRlX3ZhbHVlc19fLFxuICAgIH07XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG5cbiAgZXZlbnQubWVzc2FnZSA9IG1lc3NhZ2U7XG4gIHJldHVybiBldmVudDtcbn1cblxuZXhwb3J0IHsgZXZlbnRGcm9tTWVzc2FnZSwgZXZlbnRGcm9tVW5rbm93bklucHV0LCBleGNlcHRpb25Gcm9tRXJyb3IsIHBhcnNlU3RhY2tGcmFtZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50YnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/eventbuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/_handlers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHandler: () => (/* binding */ addHandler),\n/* harmony export */   maybeInstrument: () => (/* binding */ maybeInstrument),\n/* harmony export */   resetInstrumentationHandlers: () => (/* binding */ resetInstrumentationHandlers),\n/* harmony export */   triggerHandlers: () => (/* binding */ triggerHandlers)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stacktrace.js */ \"(rsc)/./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n\n//# sourceMappingURL=_handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9faGFuZGxlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnRDtBQUNWO0FBQ2E7O0FBRW5EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sTUFBTSx3REFBVztBQUNqQixRQUFRLDhDQUFNO0FBQ2Qsb0VBQW9FLEtBQUssVUFBVSwrREFBZSxVQUFVO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNGO0FBQ3RGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9faGFuZGxlcnMuanM/ODI5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4uL2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBnZXRGdW5jdGlvbk5hbWUgfSBmcm9tICcuLi9zdGFja3RyYWNlLmpzJztcblxuLy8gV2Uga2VlcCB0aGUgaGFuZGxlcnMgZ2xvYmFsbHlcbmNvbnN0IGhhbmRsZXJzID0ge307XG5jb25zdCBpbnN0cnVtZW50ZWQgPSB7fTtcblxuLyoqIEFkZCBhIGhhbmRsZXIgZnVuY3Rpb24uICovXG5mdW5jdGlvbiBhZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHtcbiAgaGFuZGxlcnNbdHlwZV0gPSBoYW5kbGVyc1t0eXBlXSB8fCBbXTtcbiAgKGhhbmRsZXJzW3R5cGVdICkucHVzaChoYW5kbGVyKTtcbn1cblxuLyoqXG4gKiBSZXNldCBhbGwgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXJzLlxuICogVGhpcyBjYW4gYmUgdXNlZCBieSB0ZXN0cyB0byBlbnN1cmUgd2UgaGF2ZSBhIGNsZWFuIHNsYXRlIG9mIGluc3RydW1lbnRhdGlvbiBoYW5kbGVycy5cbiAqL1xuZnVuY3Rpb24gcmVzZXRJbnN0cnVtZW50YXRpb25IYW5kbGVycygpIHtcbiAgT2JqZWN0LmtleXMoaGFuZGxlcnMpLmZvckVhY2goa2V5ID0+IHtcbiAgICBoYW5kbGVyc1trZXkgXSA9IHVuZGVmaW5lZDtcbiAgfSk7XG59XG5cbi8qKiBNYXliZSBydW4gYW4gaW5zdHJ1bWVudGF0aW9uIGZ1bmN0aW9uLCB1bmxlc3MgaXQgd2FzIGFscmVhZHkgY2FsbGVkLiAqL1xuZnVuY3Rpb24gbWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRGbikge1xuICBpZiAoIWluc3RydW1lbnRlZFt0eXBlXSkge1xuICAgIGluc3RydW1lbnRGbigpO1xuICAgIGluc3RydW1lbnRlZFt0eXBlXSA9IHRydWU7XG4gIH1cbn1cblxuLyoqIFRyaWdnZXIgaGFuZGxlcnMgZm9yIGEgZ2l2ZW4gaW5zdHJ1bWVudGF0aW9uIHR5cGUuICovXG5mdW5jdGlvbiB0cmlnZ2VySGFuZGxlcnModHlwZSwgZGF0YSkge1xuICBjb25zdCB0eXBlSGFuZGxlcnMgPSB0eXBlICYmIGhhbmRsZXJzW3R5cGVdO1xuICBpZiAoIXR5cGVIYW5kbGVycykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAoY29uc3QgaGFuZGxlciBvZiB0eXBlSGFuZGxlcnMpIHtcbiAgICB0cnkge1xuICAgICAgaGFuZGxlcihkYXRhKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBERUJVR19CVUlMRCAmJlxuICAgICAgICBsb2dnZXIuZXJyb3IoXG4gICAgICAgICAgYEVycm9yIHdoaWxlIHRyaWdnZXJpbmcgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIuXFxuVHlwZTogJHt0eXBlfVxcbk5hbWU6ICR7Z2V0RnVuY3Rpb25OYW1lKGhhbmRsZXIpfVxcbkVycm9yOmAsXG4gICAgICAgICAgZSxcbiAgICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCByZXNldEluc3RydW1lbnRhdGlvbkhhbmRsZXJzLCB0cmlnZ2VySGFuZGxlcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9oYW5kbGVycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/console.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/console.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addConsoleInstrumentationHandler: () => (/* binding */ addConsoleInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_2__.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('console', handlerData);\n\n        const log = _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level];\n        log && log.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9jb25zb2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNFO0FBQ2xDO0FBQ1M7QUFDaUM7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLFFBQVEsa0VBQXVCO0FBQy9CO0FBQ0E7O0FBRUEsRUFBRSxzREFBYztBQUNoQixtQkFBbUIscURBQVU7QUFDN0I7QUFDQTs7QUFFQSxJQUFJLGdEQUFJLENBQUMscURBQVU7QUFDbkIsTUFBTSw4REFBc0I7O0FBRTVCO0FBQ0EsOEJBQThCO0FBQzlCLFFBQVEsNkRBQWU7O0FBRXZCLG9CQUFvQiw4REFBc0I7QUFDMUMseUJBQXlCLHFEQUFVO0FBQ25DO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pbnN0cnVtZW50L2NvbnNvbGUuanM/Yjg0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05TT0xFX0xFVkVMUywgb3JpZ2luYWxDb25zb2xlTWV0aG9kcyB9IGZyb20gJy4uL2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBmaWxsIH0gZnJvbSAnLi4vb2JqZWN0LmpzJztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuLi93b3JsZHdpZGUuanMnO1xuaW1wb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCB0cmlnZ2VySGFuZGxlcnMgfSBmcm9tICcuL19oYW5kbGVycy5qcyc7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGEgY29uc29sZS54eHggbWV0aG9kIGlzIGNhbGxlZC5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnY29uc29sZSc7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50Q29uc29sZSk7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRDb25zb2xlKCkge1xuICBpZiAoISgnY29uc29sZScgaW4gR0xPQkFMX09CSikpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKGZ1bmN0aW9uIChsZXZlbCkge1xuICAgIGlmICghKGxldmVsIGluIEdMT0JBTF9PQkouY29uc29sZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmaWxsKEdMT0JBTF9PQkouY29uc29sZSwgbGV2ZWwsIGZ1bmN0aW9uIChvcmlnaW5hbENvbnNvbGVNZXRob2QpIHtcbiAgICAgIG9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlckRhdGEgPSB7IGFyZ3MsIGxldmVsIH07XG4gICAgICAgIHRyaWdnZXJIYW5kbGVycygnY29uc29sZScsIGhhbmRsZXJEYXRhKTtcblxuICAgICAgICBjb25zdCBsb2cgPSBvcmlnaW5hbENvbnNvbGVNZXRob2RzW2xldmVsXTtcbiAgICAgICAgbG9nICYmIGxvZy5hcHBseShHTE9CQUxfT0JKLmNvbnNvbGUsIGFyZ3MpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zb2xlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/console.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/fetch.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/fetch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFetchInstrumentationHandler: () => (/* binding */ addFetchInstrumentationHandler),\n/* harmony export */   parseFetchArgs: () => (/* binding */ parseFetchArgs)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supports.js */ \"(rsc)/./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_1__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0M7QUFDaUI7QUFDUjtBQUNpQzs7QUFFOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLE9BQU8saUVBQW1CO0FBQzFCO0FBQ0E7O0FBRUEsRUFBRSxnREFBSSxDQUFDLHFEQUFVO0FBQ2pCO0FBQ0EsY0FBYyxjQUFjOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUEsTUFBTSw2REFBZTtBQUNyQjtBQUNBLE9BQU87O0FBRVA7QUFDQSxpQ0FBaUMscURBQVU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsNkRBQWU7QUFDekI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsNkRBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQ7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pbnN0cnVtZW50L2ZldGNoLmpzPzE0ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlsbCB9IGZyb20gJy4uL29iamVjdC5qcyc7XG5pbXBvcnQgeyBzdXBwb3J0c05hdGl2ZUZldGNoIH0gZnJvbSAnLi4vc3VwcG9ydHMuanMnO1xuaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJy4uL3dvcmxkd2lkZS5qcyc7XG5pbXBvcnQgeyBhZGRIYW5kbGVyLCBtYXliZUluc3RydW1lbnQsIHRyaWdnZXJIYW5kbGVycyB9IGZyb20gJy4vX2hhbmRsZXJzLmpzJztcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYSBmZXRjaCByZXF1ZXN0IGhhcHBlbnMuXG4gKiBUaGUgaGFuZGxlciBmdW5jdGlvbiBpcyBjYWxsZWQgb25jZSB3aGVuIHRoZSByZXF1ZXN0IHN0YXJ0cyBhbmQgb25jZSB3aGVuIGl0IGVuZHMsXG4gKiB3aGljaCBjYW4gYmUgaWRlbnRpZmllZCBieSBjaGVja2luZyBpZiBpdCBoYXMgYW4gYGVuZFRpbWVzdGFtcGAuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdmZXRjaCc7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50RmV0Y2gpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50RmV0Y2goKSB7XG4gIGlmICghc3VwcG9ydHNOYXRpdmVGZXRjaCgpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZmlsbChHTE9CQUxfT0JKLCAnZmV0Y2gnLCBmdW5jdGlvbiAob3JpZ2luYWxGZXRjaCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgY29uc3QgeyBtZXRob2QsIHVybCB9ID0gcGFyc2VGZXRjaEFyZ3MoYXJncyk7XG5cbiAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICBhcmdzLFxuICAgICAgICBmZXRjaERhdGE6IHtcbiAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgdXJsLFxuICAgICAgICB9LFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIH07XG5cbiAgICAgIHRyaWdnZXJIYW5kbGVycygnZmV0Y2gnLCB7XG4gICAgICAgIC4uLmhhbmRsZXJEYXRhLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIHJldHVybiBvcmlnaW5hbEZldGNoLmFwcGx5KEdMT0JBTF9PQkosIGFyZ3MpLnRoZW4oXG4gICAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpbmlzaGVkSGFuZGxlckRhdGEgPSB7XG4gICAgICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgICAgICAgIGVuZFRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICB0cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywgZmluaXNoZWRIYW5kbGVyRGF0YSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICAoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zdCBlcnJvcmVkSGFuZGxlckRhdGEgPSB7XG4gICAgICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgICAgICAgIGVuZFRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICB0cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywgZXJyb3JlZEhhbmRsZXJEYXRhKTtcbiAgICAgICAgICAvLyBOT1RFOiBJZiB5b3UgYXJlIGEgU2VudHJ5IHVzZXIsIGFuZCB5b3UgYXJlIHNlZWluZyB0aGlzIHN0YWNrIGZyYW1lLFxuICAgICAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBzZW50cnkuamF2YXNjcmlwdCBTREsgY2F1Z2h0IGFuIGVycm9yIGludm9raW5nIHlvdXIgYXBwbGljYXRpb24gY29kZS5cbiAgICAgICAgICAvLyAgICAgICBUaGlzIGlzIGV4cGVjdGVkIGJlaGF2aW9yIGFuZCBOT1QgaW5kaWNhdGl2ZSBvZiBhIGJ1ZyB3aXRoIHNlbnRyeS5qYXZhc2NyaXB0LlxuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFzUHJvcChvYmosIHByb3ApIHtcbiAgcmV0dXJuICEhb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICEhKG9iaiApW3Byb3BdO1xufVxuXG5mdW5jdGlvbiBnZXRVcmxGcm9tUmVzb3VyY2UocmVzb3VyY2UpIHtcbiAgaWYgKHR5cGVvZiByZXNvdXJjZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcmVzb3VyY2U7XG4gIH1cblxuICBpZiAoIXJlc291cmNlKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKGhhc1Byb3AocmVzb3VyY2UsICd1cmwnKSkge1xuICAgIHJldHVybiByZXNvdXJjZS51cmw7XG4gIH1cblxuICBpZiAocmVzb3VyY2UudG9TdHJpbmcpIHtcbiAgICByZXR1cm4gcmVzb3VyY2UudG9TdHJpbmcoKTtcbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBQYXJzZXMgdGhlIGZldGNoIGFyZ3VtZW50cyB0byBmaW5kIHRoZSB1c2VkIEh0dHAgbWV0aG9kIGFuZCB0aGUgdXJsIG9mIHRoZSByZXF1ZXN0LlxuICogRXhwb3J0ZWQgZm9yIHRlc3RzIG9ubHkuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlRmV0Y2hBcmdzKGZldGNoQXJncykge1xuICBpZiAoZmV0Y2hBcmdzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB7IG1ldGhvZDogJ0dFVCcsIHVybDogJycgfTtcbiAgfVxuXG4gIGlmIChmZXRjaEFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgY29uc3QgW3VybCwgb3B0aW9uc10gPSBmZXRjaEFyZ3MgO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHVybDogZ2V0VXJsRnJvbVJlc291cmNlKHVybCksXG4gICAgICBtZXRob2Q6IGhhc1Byb3Aob3B0aW9ucywgJ21ldGhvZCcpID8gU3RyaW5nKG9wdGlvbnMubWV0aG9kKS50b1VwcGVyQ2FzZSgpIDogJ0dFVCcsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGFyZyA9IGZldGNoQXJnc1swXTtcbiAgcmV0dXJuIHtcbiAgICB1cmw6IGdldFVybEZyb21SZXNvdXJjZShhcmcgKSxcbiAgICBtZXRob2Q6IGhhc1Byb3AoYXJnLCAnbWV0aG9kJykgPyBTdHJpbmcoYXJnLm1ldGhvZCkudG9VcHBlckNhc2UoKSA6ICdHRVQnLFxuICB9O1xufVxuXG5leHBvcnQgeyBhZGRGZXRjaEluc3RydW1lbnRhdGlvbkhhbmRsZXIsIHBhcnNlRmV0Y2hBcmdzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/globalError.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalError.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalErrorInstrumentationHandler: () => (/* binding */ addGlobalErrorInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDaUM7O0FBRTlFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLHVCQUF1QixxREFBVTs7QUFFakMsRUFBRSxxREFBVTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw2REFBZTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxFQUFFLHFEQUFVO0FBQ1o7O0FBRWdEO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxFcnJvci5qcz83ZTI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuLi93b3JsZHdpZGUuanMnO1xuaW1wb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCB0cmlnZ2VySGFuZGxlcnMgfSBmcm9tICcuL19oYW5kbGVycy5qcyc7XG5cbmxldCBfb2xkT25FcnJvckhhbmRsZXIgPSBudWxsO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiBlcnJvciBpcyBjYXB0dXJlZCBieSB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXIuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsRXJyb3JJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdlcnJvcic7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50RXJyb3IpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50RXJyb3IoKSB7XG4gIF9vbGRPbkVycm9ySGFuZGxlciA9IEdMT0JBTF9PQkoub25lcnJvcjtcblxuICBHTE9CQUxfT0JKLm9uZXJyb3IgPSBmdW5jdGlvbiAoXG4gICAgbXNnLFxuICAgIHVybCxcbiAgICBsaW5lLFxuICAgIGNvbHVtbixcbiAgICBlcnJvcixcbiAgKSB7XG4gICAgY29uc3QgaGFuZGxlckRhdGEgPSB7XG4gICAgICBjb2x1bW4sXG4gICAgICBlcnJvcixcbiAgICAgIGxpbmUsXG4gICAgICBtc2csXG4gICAgICB1cmwsXG4gICAgfTtcbiAgICB0cmlnZ2VySGFuZGxlcnMoJ2Vycm9yJywgaGFuZGxlckRhdGEpO1xuXG4gICAgaWYgKF9vbGRPbkVycm9ySGFuZGxlciAmJiAhX29sZE9uRXJyb3JIYW5kbGVyLl9fU0VOVFJZX0xPQURFUl9fKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG4gICAgICByZXR1cm4gX29sZE9uRXJyb3JIYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIEdMT0JBTF9PQkoub25lcnJvci5fX1NFTlRSWV9JTlNUUlVNRU5URURfXyA9IHRydWU7XG59XG5cbmV4cG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsRXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/globalError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalUnhandledRejectionInstrumentationHandler: () => (/* binding */ addGlobalUnhandledRejectionInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalUnhandledRejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ2lDOztBQUU5RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0RBQVU7QUFDWixFQUFFLDZEQUFlO0FBQ2pCOztBQUVBO0FBQ0Esb0NBQW9DLHFEQUFVOztBQUU5QyxFQUFFLHFEQUFVO0FBQ1o7QUFDQSxJQUFJLDZEQUFlOztBQUVuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEVBQUUscURBQVU7QUFDWjs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pbnN0cnVtZW50L2dsb2JhbFVuaGFuZGxlZFJlamVjdGlvbi5qcz82YjFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuLi93b3JsZHdpZGUuanMnO1xuaW1wb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCB0cmlnZ2VySGFuZGxlcnMgfSBmcm9tICcuL19oYW5kbGVycy5qcyc7XG5cbmxldCBfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyID0gbnVsbDtcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYW4gdW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIGlzIGNhcHR1cmVkLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIoXG4gIGhhbmRsZXIsXG4pIHtcbiAgY29uc3QgdHlwZSA9ICd1bmhhbmRsZWRyZWplY3Rpb24nO1xuICBhZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBtYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudFVuaGFuZGxlZFJlamVjdGlvbik7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRVbmhhbmRsZWRSZWplY3Rpb24oKSB7XG4gIF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSBHTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uO1xuXG4gIEdMT0JBTF9PQkoub251bmhhbmRsZWRyZWplY3Rpb24gPSBmdW5jdGlvbiAoZSkge1xuICAgIGNvbnN0IGhhbmRsZXJEYXRhID0gZTtcbiAgICB0cmlnZ2VySGFuZGxlcnMoJ3VuaGFuZGxlZHJlamVjdGlvbicsIGhhbmRsZXJEYXRhKTtcblxuICAgIGlmIChfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyICYmICFfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyLl9fU0VOVFJZX0xPQURFUl9fKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG4gICAgICByZXR1cm4gX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIEdMT0JBTF9PQkoub251bmhhbmRsZWRyZWplY3Rpb24uX19TRU5UUllfSU5TVFJVTUVOVEVEX18gPSB0cnVlO1xufVxuXG5leHBvcnQgeyBhZGRHbG9iYWxVbmhhbmRsZWRSZWplY3Rpb25JbnN0cnVtZW50YXRpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/instrument/xhr.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/xhr.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SENTRY_XHR_DATA_KEY: () => (/* binding */ SENTRY_XHR_DATA_KEY),\n/* harmony export */   addXhrInstrumentationHandler: () => (/* binding */ addXhrInstrumentationHandler),\n/* harmony export */   instrumentXHR: () => (/* binding */ instrumentXHR)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ \"(rsc)/./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(header) && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\n\n//# sourceMappingURL=xhr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/instrument/xhr.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDOMError: () => (/* binding */ isDOMError),\n/* harmony export */   isDOMException: () => (/* binding */ isDOMException),\n/* harmony export */   isElement: () => (/* binding */ isElement),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   isErrorEvent: () => (/* binding */ isErrorEvent),\n/* harmony export */   isEvent: () => (/* binding */ isEvent),\n/* harmony export */   isInstanceOf: () => (/* binding */ isInstanceOf),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isParameterizedString: () => (/* binding */ isParameterizedString),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isPrimitive: () => (/* binding */ isPrimitive),\n/* harmony export */   isRegExp: () => (/* binding */ isRegExp),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isSyntheticEvent: () => (/* binding */ isSyntheticEvent),\n/* harmony export */   isThenable: () => (/* binding */ isThenable),\n/* harmony export */   isVueViewModel: () => (/* binding */ isVueViewModel)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\n\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/is.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSOLE_LEVELS: () => (/* binding */ CONSOLE_LEVELS),\n/* harmony export */   consoleSandbox: () => (/* binding */ consoleSandbox),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   originalConsoleMethods: () => (/* binding */ originalConsoleMethods)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\n\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNIOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBdUI7QUFDL0I7QUFDQTs7QUFFQSxrQkFBa0IscURBQVU7QUFDNUI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxNQUFNLHdEQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFVLGtCQUFrQixPQUFPLEdBQUcsS0FBSztBQUN2RCxXQUFXO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2xvZ2dlci5qcz9hZWI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG4vKiogUHJlZml4IGZvciBsb2dnaW5nIHN0cmluZ3MgKi9cbmNvbnN0IFBSRUZJWCA9ICdTZW50cnkgTG9nZ2VyICc7XG5cbmNvbnN0IENPTlNPTEVfTEVWRUxTID0gW1xuICAnZGVidWcnLFxuICAnaW5mbycsXG4gICd3YXJuJyxcbiAgJ2Vycm9yJyxcbiAgJ2xvZycsXG4gICdhc3NlcnQnLFxuICAndHJhY2UnLFxuXSA7XG5cbi8qKiBUaGlzIG1heSBiZSBtdXRhdGVkIGJ5IHRoZSBjb25zb2xlIGluc3RydW1lbnRhdGlvbi4gKi9cbmNvbnN0IG9yaWdpbmFsQ29uc29sZU1ldGhvZHNcblxuID0ge307XG5cbi8qKiBKU0RvYyAqL1xuXG4vKipcbiAqIFRlbXBvcmFyaWx5IGRpc2FibGUgc2VudHJ5IGNvbnNvbGUgaW5zdHJ1bWVudGF0aW9ucy5cbiAqXG4gKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biBhZ2FpbnN0IHRoZSBvcmlnaW5hbCBgY29uc29sZWAgbWVzc2FnZXNcbiAqIEByZXR1cm5zIFRoZSByZXN1bHRzIG9mIHRoZSBjYWxsYmFja1xuICovXG5mdW5jdGlvbiBjb25zb2xlU2FuZGJveChjYWxsYmFjaykge1xuICBpZiAoISgnY29uc29sZScgaW4gR0xPQkFMX09CSikpIHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfVxuXG4gIGNvbnN0IGNvbnNvbGUgPSBHTE9CQUxfT0JKLmNvbnNvbGUgO1xuICBjb25zdCB3cmFwcGVkRnVuY3MgPSB7fTtcblxuICBjb25zdCB3cmFwcGVkTGV2ZWxzID0gT2JqZWN0LmtleXMob3JpZ2luYWxDb25zb2xlTWV0aG9kcykgO1xuXG4gIC8vIFJlc3RvcmUgYWxsIHdyYXBwZWQgY29uc29sZSBtZXRob2RzXG4gIHdyYXBwZWRMZXZlbHMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF0gO1xuICAgIHdyYXBwZWRGdW5jc1tsZXZlbF0gPSBjb25zb2xlW2xldmVsXSA7XG4gICAgY29uc29sZVtsZXZlbF0gPSBvcmlnaW5hbENvbnNvbGVNZXRob2Q7XG4gIH0pO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH0gZmluYWxseSB7XG4gICAgLy8gUmV2ZXJ0IHJlc3RvcmF0aW9uIHRvIHdyYXBwZWQgc3RhdGVcbiAgICB3cmFwcGVkTGV2ZWxzLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgY29uc29sZVtsZXZlbF0gPSB3cmFwcGVkRnVuY3NbbGV2ZWxdIDtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlTG9nZ2VyKCkge1xuICBsZXQgZW5hYmxlZCA9IGZhbHNlO1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSBmYWxzZTtcbiAgICB9LFxuICAgIGlzRW5hYmxlZDogKCkgPT4gZW5hYmxlZCxcbiAgfTtcblxuICBpZiAoREVCVUdfQlVJTEQpIHtcbiAgICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAgICAgR0xPQkFMX09CSi5jb25zb2xlW25hbWVdKGAke1BSRUZJWH1bJHtuYW1lfV06YCwgLi4uYXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBsb2dnZXIgO1xufVxuXG5jb25zdCBsb2dnZXIgPSBtYWtlTG9nZ2VyKCk7XG5cbmV4cG9ydCB7IENPTlNPTEVfTEVWRUxTLCBjb25zb2xlU2FuZGJveCwgbG9nZ2VyLCBvcmlnaW5hbENvbnNvbGVNZXRob2RzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/lru.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/lru.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LRUMap: () => (/* binding */ LRUMap)\n/* harmony export */ });\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\n\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbHJ1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2xydS5qcz9lM2MzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBBIHNpbXBsZSBMZWFzdCBSZWNlbnRseSBVc2VkIG1hcCAqL1xuY2xhc3MgTFJVTWFwIHtcblxuICAgY29uc3RydWN0b3IoICBfbWF4U2l6ZSkge3RoaXMuX21heFNpemUgPSBfbWF4U2l6ZTtcbiAgICB0aGlzLl9jYWNoZSA9IG5ldyBNYXAoKTtcbiAgfVxuXG4gIC8qKiBHZXQgdGhlIGN1cnJlbnQgc2l6ZSBvZiB0aGUgY2FjaGUgKi9cbiAgIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9jYWNoZS5zaXplO1xuICB9XG5cbiAgLyoqIEdldCBhbiBlbnRyeSBvciB1bmRlZmluZWQgaWYgaXQgd2FzIG5vdCBpbiB0aGUgY2FjaGUuIFJlLWluc2VydHMgdG8gdXBkYXRlIHRoZSByZWNlbnRseSB1c2VkIG9yZGVyICovXG4gICBnZXQoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIGFuZCByZS1pbnNlcnQgdG8gdXBkYXRlIHRoZSBvcmRlclxuICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIHRoaXMuX2NhY2hlLnNldChrZXksIHZhbHVlKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogSW5zZXJ0IGFuIGVudHJ5IGFuZCBldmljdCBhbiBvbGRlciBlbnRyeSBpZiB3ZSd2ZSByZWFjaGVkIG1heFNpemUgKi9cbiAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX2NhY2hlLnNpemUgPj0gdGhpcy5fbWF4U2l6ZSkge1xuICAgICAgLy8ga2V5cygpIHJldHVybnMgYW4gaXRlcmF0b3IgaW4gaW5zZXJ0aW9uIG9yZGVyIHNvIGtleXMoKS5uZXh0KCkgZ2l2ZXMgdXMgdGhlIG9sZGVzdCBrZXlcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZSh0aGlzLl9jYWNoZS5rZXlzKCkubmV4dCgpLnZhbHVlKTtcbiAgICB9XG4gICAgdGhpcy5fY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xuICB9XG5cbiAgLyoqIFJlbW92ZSBhbiBlbnRyeSBhbmQgcmV0dXJuIHRoZSBlbnRyeSBpZiBpdCB3YXMgaW4gdGhlIGNhY2hlICovXG4gICByZW1vdmUoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogQ2xlYXIgYWxsIGVudHJpZXMgKi9cbiAgIGNsZWFyKCkge1xuICAgIHRoaXMuX2NhY2hlLmNsZWFyKCk7XG4gIH1cblxuICAvKiogR2V0IGFsbCB0aGUga2V5cyAqL1xuICAga2V5cygpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9jYWNoZS5rZXlzKCkpO1xuICB9XG5cbiAgLyoqIEdldCBhbGwgdGhlIHZhbHVlcyAqL1xuICAgdmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgIHRoaXMuX2NhY2hlLmZvckVhY2godmFsdWUgPT4gdmFsdWVzLnB1c2godmFsdWUpKTtcbiAgICByZXR1cm4gdmFsdWVzO1xuICB9XG59XG5cbmV4cG9ydCB7IExSVU1hcCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bHJ1LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/lru.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoBuilder: () => (/* binding */ memoBuilder)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL21lbW8uanM/ZTQ4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqXG4gKiBIZWxwZXIgdG8gZGVjeWNsZSBqc29uIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gbWVtb0J1aWxkZXIoKSB7XG4gIGNvbnN0IGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJztcbiAgY29uc3QgaW5uZXIgPSBoYXNXZWFrU2V0ID8gbmV3IFdlYWtTZXQoKSA6IFtdO1xuICBmdW5jdGlvbiBtZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpZiAoaW5uZXIuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpbm5lci5hZGQob2JqKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBpbm5lcltpXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpbm5lci5wdXNoKG9iaik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpbm5lci5kZWxldGUob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaW5uZXJbaV0gPT09IG9iaikge1xuICAgICAgICAgIGlubmVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gW21lbW9pemUsIHVubWVtb2l6ZV07XG59XG5cbmV4cG9ydCB7IG1lbW9CdWlsZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/memo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addContextToFrame: () => (/* binding */ addContextToFrame),\n/* harmony export */   addExceptionMechanism: () => (/* binding */ addExceptionMechanism),\n/* harmony export */   addExceptionTypeValue: () => (/* binding */ addExceptionTypeValue),\n/* harmony export */   arrayify: () => (/* binding */ arrayify),\n/* harmony export */   checkOrSetAlreadyCaught: () => (/* binding */ checkOrSetAlreadyCaught),\n/* harmony export */   getEventDescription: () => (/* binding */ getEventDescription),\n/* harmony export */   parseSemver: () => (/* binding */ parseSemver),\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/misc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/node-stack-trace.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node-stack-trace.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filenameIsInApp: () => (/* binding */ filenameIsInApp),\n/* harmony export */   node: () => (/* binding */ node)\n/* harmony export */ });\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app: filenameIsInApp(filename, isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS1zdGFjay10cmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxHQUFHO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQ0FBcUMsU0FBUyxHQUFHLFdBQVc7QUFDNUQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL25vZGUtc3RhY2stdHJhY2UuanM/ZDZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERvZXMgdGhpcyBmaWxlbmFtZSBsb29rIGxpa2UgaXQncyBwYXJ0IG9mIHRoZSBhcHAgY29kZT9cbiAqL1xuZnVuY3Rpb24gZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGlzSW50ZXJuYWwgPVxuICAgIGlzTmF0aXZlIHx8XG4gICAgKGZpbGVuYW1lICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiBpdCdzIGFuIGFic29sdXRlIGxpbnV4IHBhdGhcbiAgICAgICFmaWxlbmFtZS5zdGFydHNXaXRoKCcvJykgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgd2luZG93cyBwYXRoXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bQS1aXTovKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIHBhdGggaXMgc3RhcnRpbmcgd2l0aCBhIGRvdFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIGZyYW1lIGhhcyBhIHByb3RvY29sLiBJbiBub2RlLCB0aGlzIGlzIHVzdWFsbHkgdGhlIGNhc2UgaWYgdGhlIGZpbGUgZ290IHByZS1wcm9jZXNzZWQgd2l0aCBhIGJ1bmRsZXIgbGlrZSB3ZWJwYWNrXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bYS16QS1aXShbYS16QS1aMC05LlxcLStdKSo6XFwvXFwvLykpOyAvLyBTY2hlbWEgZnJvbTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM2NDE3ODJcblxuICAvLyBpbl9hcHAgaXMgYWxsIHRoYXQncyBub3QgYW4gaW50ZXJuYWwgTm9kZSBmdW5jdGlvbiBvciBhIG1vZHVsZSB3aXRoaW4gbm9kZV9tb2R1bGVzXG4gIC8vIG5vdGUgdGhhdCBpc05hdGl2ZSBhcHBlYXJzIHRvIHJldHVybiB0cnVlIGV2ZW4gZm9yIG5vZGUgY29yZSBsaWJyYXJpZXNcbiAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tbm9kZS9pc3N1ZXMvMTc2XG5cbiAgcmV0dXJuICFpc0ludGVybmFsICYmIGZpbGVuYW1lICE9PSB1bmRlZmluZWQgJiYgIWZpbGVuYW1lLmluY2x1ZGVzKCdub2RlX21vZHVsZXMvJyk7XG59XG5cbi8qKiBOb2RlIFN0YWNrIGxpbmUgcGFyc2VyICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZnVuY3Rpb24gbm9kZShnZXRNb2R1bGUpIHtcbiAgY29uc3QgRklMRU5BTUVfTUFUQ0ggPSAvXlxccypbLV17NCx9JC87XG4gIGNvbnN0IEZVTExfTUFUQ0ggPSAvYXQgKD86YXN5bmMgKT8oPzooLis/KVxccytcXCgpPyg/OiguKyk6KFxcZCspOihcXGQrKT98KFteKV0rKSlcXCk/LztcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuICByZXR1cm4gKGxpbmUpID0+IHtcbiAgICBjb25zdCBsaW5lTWF0Y2ggPSBsaW5lLm1hdGNoKEZVTExfTUFUQ0gpO1xuXG4gICAgaWYgKGxpbmVNYXRjaCkge1xuICAgICAgbGV0IG9iamVjdDtcbiAgICAgIGxldCBtZXRob2Q7XG4gICAgICBsZXQgZnVuY3Rpb25OYW1lO1xuICAgICAgbGV0IHR5cGVOYW1lO1xuICAgICAgbGV0IG1ldGhvZE5hbWU7XG5cbiAgICAgIGlmIChsaW5lTWF0Y2hbMV0pIHtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gbGluZU1hdGNoWzFdO1xuXG4gICAgICAgIGxldCBtZXRob2RTdGFydCA9IGZ1bmN0aW9uTmFtZS5sYXN0SW5kZXhPZignLicpO1xuICAgICAgICBpZiAoZnVuY3Rpb25OYW1lW21ldGhvZFN0YXJ0IC0gMV0gPT09ICcuJykge1xuICAgICAgICAgIG1ldGhvZFN0YXJ0LS07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobWV0aG9kU3RhcnQgPiAwKSB7XG4gICAgICAgICAgb2JqZWN0ID0gZnVuY3Rpb25OYW1lLnNsaWNlKDAsIG1ldGhvZFN0YXJ0KTtcbiAgICAgICAgICBtZXRob2QgPSBmdW5jdGlvbk5hbWUuc2xpY2UobWV0aG9kU3RhcnQgKyAxKTtcbiAgICAgICAgICBjb25zdCBvYmplY3RFbmQgPSBvYmplY3QuaW5kZXhPZignLk1vZHVsZScpO1xuICAgICAgICAgIGlmIChvYmplY3RFbmQgPiAwKSB7XG4gICAgICAgICAgICBmdW5jdGlvbk5hbWUgPSBmdW5jdGlvbk5hbWUuc2xpY2Uob2JqZWN0RW5kICsgMSk7XG4gICAgICAgICAgICBvYmplY3QgPSBvYmplY3Quc2xpY2UoMCwgb2JqZWN0RW5kKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHlwZU5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QpIHtcbiAgICAgICAgdHlwZU5hbWUgPSBvYmplY3Q7XG4gICAgICAgIG1ldGhvZE5hbWUgPSBtZXRob2Q7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QgPT09ICc8YW5vbnltb3VzPicpIHtcbiAgICAgICAgbWV0aG9kTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAoZnVuY3Rpb25OYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZE5hbWUgfHwgJzxhbm9ueW1vdXM+JztcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdHlwZU5hbWUgPyBgJHt0eXBlTmFtZX0uJHttZXRob2ROYW1lfWAgOiBtZXRob2ROYW1lO1xuICAgICAgfVxuXG4gICAgICBsZXQgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbMl0gJiYgbGluZU1hdGNoWzJdLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSA/IGxpbmVNYXRjaFsyXS5zbGljZSg3KSA6IGxpbmVNYXRjaFsyXTtcbiAgICAgIGNvbnN0IGlzTmF0aXZlID0gbGluZU1hdGNoWzVdID09PSAnbmF0aXZlJztcblxuICAgICAgLy8gSWYgaXQncyBhIFdpbmRvd3MgcGF0aCwgdHJpbSB0aGUgbGVhZGluZyBzbGFzaCBzbyB0aGF0IGAvQzovZm9vYCBiZWNvbWVzIGBDOi9mb29gXG4gICAgICBpZiAoZmlsZW5hbWUgJiYgZmlsZW5hbWUubWF0Y2goL1xcL1tBLVpdOi8pKSB7XG4gICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc2xpY2UoMSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZmlsZW5hbWUgJiYgbGluZU1hdGNoWzVdICYmICFpc05hdGl2ZSkge1xuICAgICAgICBmaWxlbmFtZSA9IGxpbmVNYXRjaFs1XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWUsXG4gICAgICAgIG1vZHVsZTogZ2V0TW9kdWxlID8gZ2V0TW9kdWxlKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZnVuY3Rpb246IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgbGluZW5vOiBwYXJzZUludChsaW5lTWF0Y2hbM10sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGNvbG5vOiBwYXJzZUludChsaW5lTWF0Y2hbNF0sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGluX2FwcDogZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSksXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChsaW5lLm1hdGNoKEZJTEVOQU1FX01BVENIKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWU6IGxpbmUsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmV4cG9ydCB7IGZpbGVuYW1lSXNJbkFwcCwgbm9kZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1zdGFjay10cmFjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/node-stack-trace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/node.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node.js ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dynamicRequire: () => (/* binding */ dynamicRequire),\n/* harmony export */   isNodeEnv: () => (/* binding */ isNodeEnv),\n/* harmony export */   loadModule: () => (/* binding */ loadModule)\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/@sentry/utils/esm/env.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !(0,_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowserBundle)() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3REFBZTtBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRixnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBLFlBQVksTUFBTTtBQUNsQixvQ0FBb0MsTUFBTSxnQkFBZ0IsV0FBVztBQUNyRSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVpRDtBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL25vZGUuanM/ZDVlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jyb3dzZXJCdW5kbGUgfSBmcm9tICcuL2Vudi5qcyc7XG5cbi8qKlxuICogTk9URTogSW4gb3JkZXIgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzLCBpZiB5b3UgYWRkIGEgZnVuY3Rpb24gdG8gdGhpcyBtb2R1bGUgYW5kIGl0IG5lZWRzIHRvIHByaW50IHNvbWV0aGluZyxcbiAqIHlvdSBtdXN0IGVpdGhlciBhKSB1c2UgYGNvbnNvbGUubG9nYCByYXRoZXIgdGhhbiB0aGUgbG9nZ2VyLCBvciBiKSBwdXQgeW91ciBmdW5jdGlvbiBlbHNld2hlcmUuXG4gKi9cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciB3ZSdyZSBpbiB0aGUgTm9kZS5qcyBvciBCcm93c2VyIGVudmlyb25tZW50XG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIGdpdmVuIHF1ZXN0aW9uXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUVudigpIHtcbiAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgYnJvd3NlciBidW5kbGVzIGFzIHRob3NlIGNhbiBiZSBvcHRpbWl6ZWQgc3RhdGljYWxseVxuICAvLyBieSB0ZXJzZXIvcm9sbHVwLlxuICByZXR1cm4gKFxuICAgICFpc0Jyb3dzZXJCdW5kbGUoKSAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9jZXNzIDogMCkgPT09ICdbb2JqZWN0IHByb2Nlc3NdJ1xuICApO1xufVxuXG4vKipcbiAqIFJlcXVpcmVzIGEgbW9kdWxlIHdoaWNoIGlzIHByb3RlY3RlZCBhZ2FpbnN0IGJ1bmRsZXIgbWluaWZpY2F0aW9uLlxuICpcbiAqIEBwYXJhbSByZXF1ZXN0IFRoZSBtb2R1bGUgcGF0aCB0byByZXNvbHZlXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBkeW5hbWljUmVxdWlyZShtb2QsIHJlcXVlc3QpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICByZXR1cm4gbW9kLnJlcXVpcmUocmVxdWVzdCk7XG59XG5cbi8qKlxuICogSGVscGVyIGZvciBkeW5hbWljYWxseSBsb2FkaW5nIG1vZHVsZSB0aGF0IHNob3VsZCB3b3JrIHdpdGggbGlua2VkIGRlcGVuZGVuY2llcy5cbiAqIFRoZSBwcm9ibGVtIGlzIHRoYXQgd2UgX3Nob3VsZF8gYmUgdXNpbmcgYHJlcXVpcmUocmVxdWlyZS5yZXNvbHZlKG1vZHVsZU5hbWUsIHsgcGF0aHM6IFtjd2QoKV0gfSkpYFxuICogSG93ZXZlciBpdCdzIF9ub3QgcG9zc2libGVfIHRvIGRvIHRoYXQgd2l0aCBXZWJwYWNrLCBhcyBpdCBoYXMgdG8ga25vdyBhbGwgdGhlIGRlcGVuZGVuY2llcyBkdXJpbmdcbiAqIGJ1aWxkIHRpbWUuIGByZXF1aXJlLnJlc29sdmVgIGlzIGFsc28gbm90IGF2YWlsYWJsZSBpbiBhbnkgb3RoZXIgd2F5LCBzbyB3ZSBjYW5ub3QgY3JlYXRlLFxuICogYSBmYWtlIGhlbHBlciBsaWtlIHdlIGRvIHdpdGggYGR5bmFtaWNSZXF1aXJlYC5cbiAqXG4gKiBXZSBhbHdheXMgcHJlZmVyIHRvIHVzZSBsb2NhbCBwYWNrYWdlLCB0aHVzIHRoZSB2YWx1ZSBpcyBub3QgcmV0dXJuZWQgZWFybHkgZnJvbSBlYWNoIGB0cnkvY2F0Y2hgIGJsb2NrLlxuICogVGhhdCBpcyB0byBtaW1pYyB0aGUgYmVoYXZpb3Igb2YgYHJlcXVpcmUucmVzb2x2ZWAgZXhhY3RseS5cbiAqXG4gKiBAcGFyYW0gbW9kdWxlTmFtZSBtb2R1bGUgbmFtZSB0byByZXF1aXJlXG4gKiBAcmV0dXJucyBwb3NzaWJseSByZXF1aXJlZCBtb2R1bGVcbiAqL1xuZnVuY3Rpb24gbG9hZE1vZHVsZShtb2R1bGVOYW1lKSB7XG4gIGxldCBtb2Q7XG5cbiAgdHJ5IHtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIG1vZHVsZU5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gbm8tZW1wdHlcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBjd2QgfSA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgJ3Byb2Nlc3MnKTtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIGAke2N3ZCgpfS9ub2RlX21vZHVsZXMvJHttb2R1bGVOYW1lfWApIDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICByZXR1cm4gbW9kO1xufVxuXG5leHBvcnQgeyBkeW5hbWljUmVxdWlyZSwgaXNOb2RlRW52LCBsb2FkTW9kdWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeToSize: () => (/* binding */ normalizeToSize),\n/* harmony export */   normalizeUrlToBase: () => (/* binding */ normalizeUrlToBase),\n/* harmony export */   walk: () => (/* binding */ visit)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"(rsc)/./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"(rsc)/./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isVueViewModel)(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/normalize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNonEnumerableProperty: () => (/* binding */ addNonEnumerableProperty),\n/* harmony export */   convertToPlainObject: () => (/* binding */ convertToPlainObject),\n/* harmony export */   dropUndefinedKeys: () => (/* binding */ dropUndefinedKeys),\n/* harmony export */   extractExceptionKeysForMessage: () => (/* binding */ extractExceptionKeysForMessage),\n/* harmony export */   fill: () => (/* binding */ fill),\n/* harmony export */   getOriginalFunction: () => (/* binding */ getOriginalFunction),\n/* harmony export */   markFunctionWrapped: () => (/* binding */ markFunctionWrapped),\n/* harmony export */   objectify: () => (/* binding */ objectify),\n/* harmony export */   urlEncode: () => (/* binding */ urlEncode)\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser.js */ \"(rsc)/./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/path.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/path.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basename: () => (/* binding */ basename),\n/* harmony export */   dirname: () => (/* binding */ dirname),\n/* harmony export */   isAbsolute: () => (/* binding */ isAbsolute),\n/* harmony export */   join: () => (/* binding */ join),\n/* harmony export */   normalizePath: () => (/* binding */ normalizePath),\n/* harmony export */   relative: () => (/* binding */ relative),\n/* harmony export */   resolve: () => (/* binding */ resolve)\n/* harmony export */ });\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/path.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/promisebuffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/promisebuffer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makePromiseBuffer: () => (/* binding */ makePromiseBuffer)\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ \"(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDZ0Q7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvRUFBbUIsS0FBSyxrREFBVztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUFXO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsYUFBYSxvRUFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcz9iM2JiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbnRyeUVycm9yIH0gZnJvbSAnLi9lcnJvci5qcyc7XG5pbXBvcnQgeyByZWplY3RlZFN5bmNQcm9taXNlLCBTeW5jUHJvbWlzZSwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB9IGZyb20gJy4vc3luY3Byb21pc2UuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbmV3IFByb21pc2VCdWZmZXIgb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBsaW1pdFxuICogQHBhcmFtIGxpbWl0IG1heCBudW1iZXIgb2YgcHJvbWlzZXMgdGhhdCBjYW4gYmUgc3RvcmVkIGluIHRoZSBidWZmZXJcbiAqL1xuZnVuY3Rpb24gbWFrZVByb21pc2VCdWZmZXIobGltaXQpIHtcbiAgY29uc3QgYnVmZmVyID0gW107XG5cbiAgZnVuY3Rpb24gaXNSZWFkeSgpIHtcbiAgICByZXR1cm4gbGltaXQgPT09IHVuZGVmaW5lZCB8fCBidWZmZXIubGVuZ3RoIDwgbGltaXQ7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGEgcHJvbWlzZSBmcm9tIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIHRhc2sgQ2FuIGJlIGFueSBQcm9taXNlTGlrZTxUPlxuICAgKiBAcmV0dXJucyBSZW1vdmVkIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiByZW1vdmUodGFzaykge1xuICAgIHJldHVybiBidWZmZXIuc3BsaWNlKGJ1ZmZlci5pbmRleE9mKHRhc2spLCAxKVswXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBwcm9taXNlIChyZXByZXNlbnRpbmcgYW4gaW4tZmxpZ2h0IGFjdGlvbikgdG8gdGhlIHF1ZXVlLCBhbmQgc2V0IGl0IHRvIHJlbW92ZSBpdHNlbGYgb24gZnVsZmlsbG1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB0YXNrUHJvZHVjZXIgQSBmdW5jdGlvbiBwcm9kdWNpbmcgYW55IFByb21pc2VMaWtlPFQ+OyBJbiBwcmV2aW91cyB2ZXJzaW9ucyB0aGlzIHVzZWQgdG8gYmUgYHRhc2s6XG4gICAqICAgICAgICBQcm9taXNlTGlrZTxUPmAsIGJ1dCB1bmRlciB0aGF0IG1vZGVsLCBQcm9taXNlcyB3ZXJlIGluc3RhbnRseSBjcmVhdGVkIG9uIHRoZSBjYWxsLXNpdGUgYW5kIHRoZWlyIGV4ZWN1dG9yXG4gICAqICAgICAgICBmdW5jdGlvbnMgdGhlcmVmb3JlIHJhbiBpbW1lZGlhdGVseS4gVGh1cywgZXZlbiBpZiB0aGUgYnVmZmVyIHdhcyBmdWxsLCB0aGUgYWN0aW9uIHN0aWxsIGhhcHBlbmVkLiBCeVxuICAgKiAgICAgICAgcmVxdWlyaW5nIHRoZSBwcm9taXNlIHRvIGJlIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiwgd2UgY2FuIGRlZmVyIHByb21pc2UgY3JlYXRpb24gdW50aWwgYWZ0ZXIgdGhlIGJ1ZmZlclxuICAgKiAgICAgICAgbGltaXQgY2hlY2suXG4gICAqIEByZXR1cm5zIFRoZSBvcmlnaW5hbCBwcm9taXNlLlxuICAgKi9cbiAgZnVuY3Rpb24gYWRkKHRhc2tQcm9kdWNlcikge1xuICAgIGlmICghaXNSZWFkeSgpKSB7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRTeW5jUHJvbWlzZShuZXcgU2VudHJ5RXJyb3IoJ05vdCBhZGRpbmcgUHJvbWlzZSBiZWNhdXNlIGJ1ZmZlciBsaW1pdCB3YXMgcmVhY2hlZC4nKSk7XG4gICAgfVxuXG4gICAgLy8gc3RhcnQgdGhlIHRhc2sgYW5kIGFkZCBpdHMgcHJvbWlzZSB0byB0aGUgcXVldWVcbiAgICBjb25zdCB0YXNrID0gdGFza1Byb2R1Y2VyKCk7XG4gICAgaWYgKGJ1ZmZlci5pbmRleE9mKHRhc2spID09PSAtMSkge1xuICAgICAgYnVmZmVyLnB1c2godGFzayk7XG4gICAgfVxuICAgIHZvaWQgdGFza1xuICAgICAgLnRoZW4oKCkgPT4gcmVtb3ZlKHRhc2spKVxuICAgICAgLy8gVXNlIGB0aGVuKG51bGwsIHJlamVjdGlvbkhhbmRsZXIpYCByYXRoZXIgdGhhbiBgY2F0Y2gocmVqZWN0aW9uSGFuZGxlcilgIHNvIHRoYXQgd2UgY2FuIHVzZSBgUHJvbWlzZUxpa2VgXG4gICAgICAvLyByYXRoZXIgdGhhbiBgUHJvbWlzZWAuIGBQcm9taXNlTGlrZWAgZG9lc24ndCBoYXZlIGEgYC5jYXRjaGAgbWV0aG9kLCBtYWtpbmcgaXRzIHBvbHlmaWxsIHNtYWxsZXIuIChFUzUgZGlkbid0XG4gICAgICAvLyBoYXZlIHByb21pc2VzLCBzbyBUUyBoYXMgdG8gcG9seWZpbGwgd2hlbiBkb3duLWNvbXBpbGluZy4pXG4gICAgICAudGhlbihudWxsLCAoKSA9PlxuICAgICAgICByZW1vdmUodGFzaykudGhlbihudWxsLCAoKSA9PiB7XG4gICAgICAgICAgLy8gV2UgaGF2ZSB0byBhZGQgYW5vdGhlciBjYXRjaCBoZXJlIGJlY2F1c2UgYHJlbW92ZSgpYCBzdGFydHMgYSBuZXcgcHJvbWlzZSBjaGFpbi5cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIHJldHVybiB0YXNrO1xuICB9XG5cbiAgLyoqXG4gICAqIFdhaXQgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgcXVldWUgdG8gcmVzb2x2ZSBvciBmb3IgdGltZW91dCB0byBleHBpcmUsIHdoaWNoZXZlciBjb21lcyBmaXJzdC5cbiAgICpcbiAgICogQHBhcmFtIHRpbWVvdXQgVGhlIHRpbWUsIGluIG1zLCBhZnRlciB3aGljaCB0byByZXNvbHZlIHRvIGBmYWxzZWAgaWYgdGhlIHF1ZXVlIGlzIHN0aWxsIG5vbi1lbXB0eS4gUGFzc2luZyBgMGAgKG9yXG4gICAqIG5vdCBwYXNzaW5nIGFueXRoaW5nKSB3aWxsIG1ha2UgdGhlIHByb21pc2Ugd2FpdCBhcyBsb25nIGFzIGl0IHRha2VzIGZvciB0aGUgcXVldWUgdG8gZHJhaW4gYmVmb3JlIHJlc29sdmluZyB0b1xuICAgKiBgdHJ1ZWAuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB3aGljaCB3aWxsIHJlc29sdmUgdG8gYHRydWVgIGlmIHRoZSBxdWV1ZSBpcyBhbHJlYWR5IGVtcHR5IG9yIGRyYWlucyBiZWZvcmUgdGhlIHRpbWVvdXQsIGFuZFxuICAgKiBgZmFsc2VgIG90aGVyd2lzZVxuICAgKi9cbiAgZnVuY3Rpb24gZHJhaW4odGltZW91dCkge1xuICAgIHJldHVybiBuZXcgU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGNvdW50ZXIgPSBidWZmZXIubGVuZ3RoO1xuXG4gICAgICBpZiAoIWNvdW50ZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIHdhaXQgZm9yIGB0aW1lb3V0YCBtcyBhbmQgdGhlbiByZXNvbHZlIHRvIGBmYWxzZWAgKGlmIG5vdCBjYW5jZWxsZWQgZmlyc3QpXG4gICAgICBjb25zdCBjYXB0dXJlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRpbWVvdXQgJiYgdGltZW91dCA+IDApIHtcbiAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgIC8vIGlmIGFsbCBwcm9taXNlcyByZXNvbHZlIGluIHRpbWUsIGNhbmNlbCB0aGUgdGltZXIgYW5kIHJlc29sdmUgdG8gYHRydWVgXG4gICAgICBidWZmZXIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgdm9pZCByZXNvbHZlZFN5bmNQcm9taXNlKGl0ZW0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICghLS1jb3VudGVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoY2FwdHVyZWRTZXRUaW1lb3V0KTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgICQ6IGJ1ZmZlcixcbiAgICBhZGQsXG4gICAgZHJhaW4sXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VQcm9taXNlQnVmZmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlYnVmZmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/promisebuffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/ratelimit.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/ratelimit.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_AFTER: () => (/* binding */ DEFAULT_RETRY_AFTER),\n/* harmony export */   disabledUntil: () => (/* binding */ disabledUntil),\n/* harmony export */   isRateLimited: () => (/* binding */ isRateLimited),\n/* harmony export */   parseRetryAfterHeader: () => (/* binding */ parseRetryAfterHeader),\n/* harmony export */   updateRateLimits: () => (/* binding */ updateRateLimits)\n/* harmony export */ });\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBLFFBQVE7QUFDUixrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVzRztBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3JhdGVsaW1pdC5qcz9kNjg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEludGVudGlvbmFsbHkga2VlcGluZyB0aGUga2V5IGJyb2FkLCBhcyB3ZSBkb24ndCBrbm93IGZvciBzdXJlIHdoYXQgcmF0ZSBsaW1pdCBoZWFkZXJzIGdldCByZXR1cm5lZCBmcm9tIGJhY2tlbmRcblxuY29uc3QgREVGQVVMVF9SRVRSWV9BRlRFUiA9IDYwICogMTAwMDsgLy8gNjAgc2Vjb25kc1xuXG4vKipcbiAqIEV4dHJhY3RzIFJldHJ5LUFmdGVyIHZhbHVlIGZyb20gdGhlIHJlcXVlc3QgaGVhZGVyIG9yIHJldHVybnMgZGVmYXVsdCB2YWx1ZVxuICogQHBhcmFtIGhlYWRlciBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgJ1JldHJ5LUFmdGVyJyBoZWFkZXJcbiAqIEBwYXJhbSBub3cgY3VycmVudCB1bml4IHRpbWVzdGFtcFxuICpcbiAqL1xuZnVuY3Rpb24gcGFyc2VSZXRyeUFmdGVySGVhZGVyKGhlYWRlciwgbm93ID0gRGF0ZS5ub3coKSkge1xuICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KGAke2hlYWRlcn1gLCAxMCk7XG4gIGlmICghaXNOYU4oaGVhZGVyRGVsYXkpKSB7XG4gICAgcmV0dXJuIGhlYWRlckRlbGF5ICogMTAwMDtcbiAgfVxuXG4gIGNvbnN0IGhlYWRlckRhdGUgPSBEYXRlLnBhcnNlKGAke2hlYWRlcn1gKTtcbiAgaWYgKCFpc05hTihoZWFkZXJEYXRlKSkge1xuICAgIHJldHVybiBoZWFkZXJEYXRlIC0gbm93O1xuICB9XG5cbiAgcmV0dXJuIERFRkFVTFRfUkVUUllfQUZURVI7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdGltZSB0aGF0IHRoZSBnaXZlbiBjYXRlZ29yeSBpcyBkaXNhYmxlZCB1bnRpbCBmb3IgcmF0ZSBsaW1pdGluZy5cbiAqIEluIGNhc2Ugbm8gY2F0ZWdvcnktc3BlY2lmaWMgbGltaXQgaXMgc2V0IGJ1dCBhIGdlbmVyYWwgcmF0ZSBsaW1pdCBhY3Jvc3MgYWxsIGNhdGVnb3JpZXMgaXMgYWN0aXZlLFxuICogdGhhdCB0aW1lIGlzIHJldHVybmVkLlxuICpcbiAqIEByZXR1cm4gdGhlIHRpbWUgaW4gbXMgdGhhdCB0aGUgY2F0ZWdvcnkgaXMgZGlzYWJsZWQgdW50aWwgb3IgMCBpZiB0aGVyZSdzIG5vIGFjdGl2ZSByYXRlIGxpbWl0LlxuICovXG5mdW5jdGlvbiBkaXNhYmxlZFVudGlsKGxpbWl0cywgZGF0YUNhdGVnb3J5KSB7XG4gIHJldHVybiBsaW1pdHNbZGF0YUNhdGVnb3J5XSB8fCBsaW1pdHMuYWxsIHx8IDA7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgY2F0ZWdvcnkgaXMgcmF0ZSBsaW1pdGVkXG4gKi9cbmZ1bmN0aW9uIGlzUmF0ZUxpbWl0ZWQobGltaXRzLCBkYXRhQ2F0ZWdvcnksIG5vdyA9IERhdGUubm93KCkpIHtcbiAgcmV0dXJuIGRpc2FibGVkVW50aWwobGltaXRzLCBkYXRhQ2F0ZWdvcnkpID4gbm93O1xufVxuXG4vKipcbiAqIFVwZGF0ZSByYXRlbGltaXRzIGZyb20gaW5jb21pbmcgaGVhZGVycy5cbiAqXG4gKiBAcmV0dXJuIHRoZSB1cGRhdGVkIFJhdGVMaW1pdHMgb2JqZWN0LlxuICovXG5mdW5jdGlvbiB1cGRhdGVSYXRlTGltaXRzKFxuICBsaW1pdHMsXG4gIHsgc3RhdHVzQ29kZSwgaGVhZGVycyB9LFxuICBub3cgPSBEYXRlLm5vdygpLFxuKSB7XG4gIGNvbnN0IHVwZGF0ZWRSYXRlTGltaXRzID0ge1xuICAgIC4uLmxpbWl0cyxcbiAgfTtcblxuICAvLyBcIlRoZSBuYW1lIGlzIGNhc2UtaW5zZW5zaXRpdmUuXCJcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hlYWRlcnMvZ2V0XG4gIGNvbnN0IHJhdGVMaW1pdEhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sneC1zZW50cnktcmF0ZS1saW1pdHMnXTtcbiAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sncmV0cnktYWZ0ZXInXTtcblxuICBpZiAocmF0ZUxpbWl0SGVhZGVyKSB7XG4gICAgLyoqXG4gICAgICogcmF0ZSBsaW1pdCBoZWFkZXJzIGFyZSBvZiB0aGUgZm9ybVxuICAgICAqICAgICA8aGVhZGVyPiw8aGVhZGVyPiwuLlxuICAgICAqIHdoZXJlIGVhY2ggPGhlYWRlcj4gaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPjogPGNhdGVnb3JpZXM+OiA8c2NvcGU+OiA8cmVhc29uX2NvZGU+OiA8bmFtZXNwYWNlcz5cbiAgICAgKiB3aGVyZVxuICAgICAqICAgICA8cmV0cnlfYWZ0ZXI+IGlzIGEgZGVsYXkgaW4gc2Vjb25kc1xuICAgICAqICAgICA8Y2F0ZWdvcmllcz4gaXMgdGhlIGV2ZW50IHR5cGUocykgKGVycm9yLCB0cmFuc2FjdGlvbiwgZXRjKSBiZWluZyByYXRlIGxpbWl0ZWQgYW5kIGlzIG9mIHRoZSBmb3JtXG4gICAgICogICAgICAgICA8Y2F0ZWdvcnk+OzxjYXRlZ29yeT47Li4uXG4gICAgICogICAgIDxzY29wZT4gaXMgd2hhdCdzIGJlaW5nIGxpbWl0ZWQgKG9yZywgcHJvamVjdCwgb3Iga2V5KSAtIGlnbm9yZWQgYnkgU0RLXG4gICAgICogICAgIDxyZWFzb25fY29kZT4gaXMgYW4gYXJiaXRyYXJ5IHN0cmluZyBsaWtlIFwib3JnX3F1b3RhXCIgLSBpZ25vcmVkIGJ5IFNES1xuICAgICAqICAgICA8bmFtZXNwYWNlcz4gU2VtaWNvbG9uLXNlcGFyYXRlZCBsaXN0IG9mIG1ldHJpYyBuYW1lc3BhY2UgaWRlbnRpZmllcnMuIERlZmluZXMgd2hpY2ggbmFtZXNwYWNlKHMpIHdpbGwgYmUgYWZmZWN0ZWQuXG4gICAgICogICAgICAgICBPbmx5IHByZXNlbnQgaWYgcmF0ZSBsaW1pdCBhcHBsaWVzIHRvIHRoZSBtZXRyaWNfYnVja2V0IGRhdGEgY2F0ZWdvcnkuXG4gICAgICovXG4gICAgZm9yIChjb25zdCBsaW1pdCBvZiByYXRlTGltaXRIZWFkZXIudHJpbSgpLnNwbGl0KCcsJykpIHtcbiAgICAgIGNvbnN0IFtyZXRyeUFmdGVyLCBjYXRlZ29yaWVzLCAsICwgbmFtZXNwYWNlc10gPSBsaW1pdC5zcGxpdCgnOicsIDUpO1xuICAgICAgY29uc3QgaGVhZGVyRGVsYXkgPSBwYXJzZUludChyZXRyeUFmdGVyLCAxMCk7XG4gICAgICBjb25zdCBkZWxheSA9ICghaXNOYU4oaGVhZGVyRGVsYXkpID8gaGVhZGVyRGVsYXkgOiA2MCkgKiAxMDAwOyAvLyA2MHNlYyBkZWZhdWx0XG4gICAgICBpZiAoIWNhdGVnb3JpZXMpIHtcbiAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgZGVsYXk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGNhdGVnb3J5IG9mIGNhdGVnb3JpZXMuc3BsaXQoJzsnKSkge1xuICAgICAgICAgIGlmIChjYXRlZ29yeSA9PT0gJ21ldHJpY19idWNrZXQnKSB7XG4gICAgICAgICAgICAvLyBuYW1lc3BhY2VzIHdpbGwgYmUgcHJlc2VudCB3aGVuIGNhdGVnb3J5ID09PSAnbWV0cmljX2J1Y2tldCdcbiAgICAgICAgICAgIGlmICghbmFtZXNwYWNlcyB8fCBuYW1lc3BhY2VzLnNwbGl0KCc7JykuaW5jbHVkZXMoJ2N1c3RvbScpKSB7XG4gICAgICAgICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzW2NhdGVnb3J5XSA9IG5vdyArIGRlbGF5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0c1tjYXRlZ29yeV0gPSBub3cgKyBkZWxheTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAocmV0cnlBZnRlckhlYWRlcikge1xuICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIHBhcnNlUmV0cnlBZnRlckhlYWRlcihyZXRyeUFmdGVySGVhZGVyLCBub3cpO1xuICB9IGVsc2UgaWYgKHN0YXR1c0NvZGUgPT09IDQyOSkge1xuICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIDYwICogMTAwMDtcbiAgfVxuXG4gIHJldHVybiB1cGRhdGVkUmF0ZUxpbWl0cztcbn1cblxuZXhwb3J0IHsgREVGQVVMVF9SRVRSWV9BRlRFUiwgZGlzYWJsZWRVbnRpbCwgaXNSYXRlTGltaXRlZCwgcGFyc2VSZXRyeUFmdGVySGVhZGVyLCB1cGRhdGVSYXRlTGltaXRzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYXRlbGltaXQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/ratelimit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/requestdata.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/requestdata.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_USER_INCLUDES: () => (/* binding */ DEFAULT_USER_INCLUDES),\n/* harmony export */   addRequestDataToEvent: () => (/* binding */ addRequestDataToEvent),\n/* harmony export */   addRequestDataToTransaction: () => (/* binding */ addRequestDataToTransaction),\n/* harmony export */   extractPathForTransaction: () => (/* binding */ extractPathForTransaction),\n/* harmony export */   extractRequestData: () => (/* binding */ extractRequestData),\n/* harmony export */   winterCGHeadersToDict: () => (/* binding */ winterCGHeadersToDict),\n/* harmony export */   winterCGRequestToRequestData: () => (/* binding */ winterCGRequestToRequestData)\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cookie.js */ \"(rsc)/./node_modules/@sentry/utils/esm/cookie.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"(rsc)/./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n\n\n\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request.\n *\n * @deprecated This utility will be removed in v8.\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    const [name, source] = extractPathForTransaction(req, { path: true, method: true });\n    transaction.updateName(name);\n    // TODO: SEMANTIC_ATTRIBUTE_SENTRY_SOURCE is in core, align this once we merge utils & core\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMetadata({ source });\n  }\n  transaction.setAttribute('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setAttribute('baseUrl', req.baseUrl);\n  }\n  // TODO: We need to rewrite this to a flat format?\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && (0,_cookie_js__WEBPACK_IMPORTED_MODULE_1__.parseCookie)(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isString)(req.body) ? req.body : JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_3__.normalize)(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    return (\n      req.query ||\n      (typeof URL !== 'undefined' && new URL(originalUrl).search.slice(1)) ||\n      // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n      (deps && deps.url && deps.url.parse(originalUrl).query) ||\n      undefined\n    );\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n      _logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/requestdata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/severity.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/severity.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   severityFromString: () => (/* binding */ severityFromString),\n/* harmony export */   severityLevelFromString: () => (/* binding */ severityLevelFromString),\n/* harmony export */   validSeverityLevels: () => (/* binding */ validSeverityLevels)\n/* harmony export */ });\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0Esa0VBQWtFLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0RTtBQUM1RSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3NldmVyaXR5LmpzP2NjNjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogSWRlYWxseSB0aGUgYFNldmVyaXR5TGV2ZWxgIHR5cGUgd291bGQgYmUgZGVyaXZlZCBmcm9tIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCwgYnV0IHRoYXQgd291bGQgbWVhbiBlaXRoZXJcbi8vXG4vLyBhKSBtb3ZpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIHRvIGBAc2VudHJ5L3R5cGVzYCxcbi8vIGIpIG1vdmluZyB0aGVgU2V2ZXJpdHlMZXZlbGAgdHlwZSBoZXJlLCBvclxuLy8gYykgaW1wb3J0aW5nIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCBmcm9tIGhlcmUgaW50byBgQHNlbnRyeS90eXBlc2AuXG4vL1xuLy8gT3B0aW9uIEEgd291bGQgbWFrZSBgQHNlbnRyeS90eXBlc2AgYSBydW50aW1lIGRlcGVuZGVuY3kgb2YgYEBzZW50cnkvdXRpbHNgIChub3QgZ29vZCksIGFuZCBvcHRpb25zIEIgYW5kIEMgd291bGRcbi8vIGNyZWF0ZSBhIGNpcmN1bGFyIGRlcGVuZGVuY3kgYmV0d2VlbiBgQHNlbnRyeS90eXBlc2AgYW5kIGBAc2VudHJ5L3V0aWxzYCAoYWxzbyBub3QgZ29vZCkuIFNvIGEgVE9ETyBhY2NvbXBhbnlpbmcgdGhlXG4vLyB0eXBlLCByZW1pbmRpbmcgYW55b25lIHdobyBjaGFuZ2VzIGl0IHRvIGNoYW5nZSB0aGlzIGxpc3QgYWxzbywgd2lsbCBoYXZlIHRvIGRvLlxuXG5jb25zdCB2YWxpZFNldmVyaXR5TGV2ZWxzID0gWydmYXRhbCcsICdlcnJvcicsICd3YXJuaW5nJywgJ2xvZycsICdpbmZvJywgJ2RlYnVnJ107XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmctYmFzZWQgbGV2ZWwgaW50byBhIG1lbWJlciBvZiB0aGUgZGVwcmVjYXRlZCB7QGxpbmsgU2V2ZXJpdHl9IGVudW0uXG4gKlxuICogQGRlcHJlY2F0ZWQgYHNldmVyaXR5RnJvbVN0cmluZ2AgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmdgIGluc3RlYWQuXG4gKlxuICogQHBhcmFtIGxldmVsIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBTZXZlcml0eVxuICogQHJldHVybnMgU2V2ZXJpdHlcbiAqL1xuZnVuY3Rpb24gc2V2ZXJpdHlGcm9tU3RyaW5nKGxldmVsKSB7XG4gIHJldHVybiBzZXZlcml0eUxldmVsRnJvbVN0cmluZyhsZXZlbCkgO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgc3RyaW5nLWJhc2VkIGxldmVsIGludG8gYSBgU2V2ZXJpdHlMZXZlbGAsIG5vcm1hbGl6aW5nIGl0IGFsb25nIHRoZSB3YXkuXG4gKlxuICogQHBhcmFtIGxldmVsIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBkZXNpcmVkIGBTZXZlcml0eUxldmVsYC5cbiAqIEByZXR1cm5zIFRoZSBgU2V2ZXJpdHlMZXZlbGAgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4gc3RyaW5nLCBvciAnbG9nJyBpZiB0aGUgc3RyaW5nIGlzbid0IGEgdmFsaWQgbGV2ZWwuXG4gKi9cbmZ1bmN0aW9uIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nKGxldmVsKSB7XG4gIHJldHVybiAobGV2ZWwgPT09ICd3YXJuJyA/ICd3YXJuaW5nJyA6IHZhbGlkU2V2ZXJpdHlMZXZlbHMuaW5jbHVkZXMobGV2ZWwpID8gbGV2ZWwgOiAnbG9nJykgO1xufVxuXG5leHBvcnQgeyBzZXZlcml0eUZyb21TdHJpbmcsIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nLCB2YWxpZFNldmVyaXR5TGV2ZWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXZlcml0eS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/severity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStackParser: () => (/* binding */ createStackParser),\n/* harmony export */   filenameIsInApp: () => (/* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.filenameIsInApp),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   nodeStackLineParser: () => (/* binding */ nodeStackLineParser),\n/* harmony export */   stackParserFromStackParserOptions: () => (/* binding */ stackParserFromStackParserOptions),\n/* harmony export */   stripSentryFramesAndReverse: () => (/* binding */ stripSentryFramesAndReverse)\n/* harmony export */ });\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-stack-trace.js */ \"(rsc)/./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n\n\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.node)(getModule)];\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/stacktrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMatchingPattern: () => (/* binding */ isMatchingPattern),\n/* harmony export */   safeJoin: () => (/* binding */ safeJoin),\n/* harmony export */   snipLine: () => (/* binding */ snipLine),\n/* harmony export */   stringMatchesSomePattern: () => (/* binding */ stringMatchesSomePattern),\n/* harmony export */   truncate: () => (/* binding */ truncate)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isVueViewModel)(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQWM7QUFDeEI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0RBQVE7QUFDZjtBQUNBOztBQUVBLE1BQU0sZ0RBQVE7QUFDZDtBQUNBO0FBQ0EsTUFBTSxnREFBUTtBQUNkO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzbV9iYW5raW5nLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3N0cmluZy5qcz8zNzRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVnVlVmlld01vZGVsLCBpc1N0cmluZywgaXNSZWdFeHAgfSBmcm9tICcuL2lzLmpzJztcblxuLyoqXG4gKiBUcnVuY2F0ZXMgZ2l2ZW4gc3RyaW5nIHRvIHRoZSBtYXhpbXVtIGNoYXJhY3RlcnMgY291bnRcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nICgwID0gdW5saW1pdGVkKVxuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gdHJ1bmNhdGUoc3RyLCBtYXggPSAwKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJyB8fCBtYXggPT09IDApIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIHJldHVybiBzdHIubGVuZ3RoIDw9IG1heCA/IHN0ciA6IGAke3N0ci5zbGljZSgwLCBtYXgpfS4uLmA7XG59XG5cbi8qKlxuICogVGhpcyBpcyBiYXNpY2FsbHkganVzdCBgdHJpbV9saW5lYCBmcm9tXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS9ibG9iL21hc3Rlci9zcmMvc2VudHJ5L2xhbmcvamF2YXNjcmlwdC9wcm9jZXNzb3IucHkjTDY3XG4gKlxuICogQHBhcmFtIHN0ciBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcGFyYW0gbWF4IE1heGltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdHJ1bmNhdGVkIHN0cmluZ1xuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gc25pcExpbmUobGluZSwgY29sbm8pIHtcbiAgbGV0IG5ld0xpbmUgPSBsaW5lO1xuICBjb25zdCBsaW5lTGVuZ3RoID0gbmV3TGluZS5sZW5ndGg7XG4gIGlmIChsaW5lTGVuZ3RoIDw9IDE1MCkge1xuICAgIHJldHVybiBuZXdMaW5lO1xuICB9XG4gIGlmIChjb2xubyA+IGxpbmVMZW5ndGgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBjb2xubyA9IGxpbmVMZW5ndGg7XG4gIH1cblxuICBsZXQgc3RhcnQgPSBNYXRoLm1heChjb2xubyAtIDYwLCAwKTtcbiAgaWYgKHN0YXJ0IDwgNSkge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuXG4gIGxldCBlbmQgPSBNYXRoLm1pbihzdGFydCArIDE0MCwgbGluZUxlbmd0aCk7XG4gIGlmIChlbmQgPiBsaW5lTGVuZ3RoIC0gNSkge1xuICAgIGVuZCA9IGxpbmVMZW5ndGg7XG4gIH1cbiAgaWYgKGVuZCA9PT0gbGluZUxlbmd0aCkge1xuICAgIHN0YXJ0ID0gTWF0aC5tYXgoZW5kIC0gMTQwLCAwKTtcbiAgfVxuXG4gIG5ld0xpbmUgPSBuZXdMaW5lLnNsaWNlKHN0YXJ0LCBlbmQpO1xuICBpZiAoc3RhcnQgPiAwKSB7XG4gICAgbmV3TGluZSA9IGAne3NuaXB9ICR7bmV3TGluZX1gO1xuICB9XG4gIGlmIChlbmQgPCBsaW5lTGVuZ3RoKSB7XG4gICAgbmV3TGluZSArPSAnIHtzbmlwfSc7XG4gIH1cblxuICByZXR1cm4gbmV3TGluZTtcbn1cblxuLyoqXG4gKiBKb2luIHZhbHVlcyBpbiBhcnJheVxuICogQHBhcmFtIGlucHV0IGFycmF5IG9mIHZhbHVlcyB0byBiZSBqb2luZWQgdG9nZXRoZXJcbiAqIEBwYXJhbSBkZWxpbWl0ZXIgc3RyaW5nIHRvIGJlIHBsYWNlZCBpbi1iZXR3ZWVuIHZhbHVlc1xuICogQHJldHVybnMgSm9pbmVkIHZhbHVlc1xuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gc2FmZUpvaW4oaW5wdXQsIGRlbGltaXRlcikge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0ID0gW107XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLWZvci1vZlxuICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgdmFsdWUgPSBpbnB1dFtpXTtcbiAgICB0cnkge1xuICAgICAgLy8gVGhpcyBpcyBhIGhhY2sgdG8gZml4IGEgVnVlMy1zcGVjaWZpYyBidWcgdGhhdCBjYXVzZXMgYW4gaW5maW5pdGUgbG9vcCBvZlxuICAgICAgLy8gY29uc29sZSB3YXJuaW5ncy4gVGhpcyBoYXBwZW5zIHdoZW4gYSBWdWUgdGVtcGxhdGUgaXMgcmVuZGVyZWQgd2l0aFxuICAgICAgLy8gYW4gdW5kZWNsYXJlZCB2YXJpYWJsZSwgd2hpY2ggd2UgdHJ5IHRvIHN0cmluZ2lmeSwgdWx0aW1hdGVseSBjYXVzaW5nXG4gICAgICAvLyBWdWUgdG8gaXNzdWUgYW5vdGhlciB3YXJuaW5nIHdoaWNoIHJlcGVhdHMgaW5kZWZpbml0ZWx5LlxuICAgICAgLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L3B1bGwvODk4MVxuICAgICAgaWYgKGlzVnVlVmlld01vZGVsKHZhbHVlKSkge1xuICAgICAgICBvdXRwdXQucHVzaCgnW1Z1ZVZpZXdNb2RlbF0nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dHB1dC5wdXNoKFN0cmluZyh2YWx1ZSkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIG91dHB1dC5wdXNoKCdbdmFsdWUgY2Fubm90IGJlIHNlcmlhbGl6ZWRdJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dHB1dC5qb2luKGRlbGltaXRlcik7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiB2YWx1ZSBtYXRjaGVzIGEgcmVnZXggb3Igc3RyaW5nXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBzdHJpbmcgdG8gdGVzdFxuICogQHBhcmFtIHBhdHRlcm4gRWl0aGVyIGEgcmVnZXggb3IgYSBzdHJpbmcgYWdhaW5zdCB3aGljaCBgdmFsdWVgIHdpbGwgYmUgbWF0Y2hlZFxuICogQHBhcmFtIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoIElmIHRydWUsIGB2YWx1ZWAgbXVzdCBtYXRjaCBgcGF0dGVybmAgZXhhY3RseS4gSWYgZmFsc2UsIGB2YWx1ZWAgd2lsbCBtYXRjaFxuICogYHBhdHRlcm5gIGlmIGl0IGNvbnRhaW5zIGBwYXR0ZXJuYC4gT25seSBhcHBsaWVzIHRvIHN0cmluZy10eXBlIHBhdHRlcm5zLlxuICovXG5mdW5jdGlvbiBpc01hdGNoaW5nUGF0dGVybihcbiAgdmFsdWUsXG4gIHBhdHRlcm4sXG4gIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID0gZmFsc2UsXG4pIHtcbiAgaWYgKCFpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoaXNSZWdFeHAocGF0dGVybikpIHtcbiAgICByZXR1cm4gcGF0dGVybi50ZXN0KHZhbHVlKTtcbiAgfVxuICBpZiAoaXNTdHJpbmcocGF0dGVybikpIHtcbiAgICByZXR1cm4gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPyB2YWx1ZSA9PT0gcGF0dGVybiA6IHZhbHVlLmluY2x1ZGVzKHBhdHRlcm4pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIFRlc3QgdGhlIGdpdmVuIHN0cmluZyBhZ2FpbnN0IGFuIGFycmF5IG9mIHN0cmluZ3MgYW5kIHJlZ2V4ZXMuIEJ5IGRlZmF1bHQsIHN0cmluZyBtYXRjaGluZyBpcyBkb25lIG9uIGFcbiAqIHN1YnN0cmluZy1pbmNsdXNpb24gYmFzaXMgcmF0aGVyIHRoYW4gYSBzdHJpY3QgZXF1YWxpdHkgYmFzaXNcbiAqXG4gKiBAcGFyYW0gdGVzdFN0cmluZyBUaGUgc3RyaW5nIHRvIHRlc3RcbiAqIEBwYXJhbSBwYXR0ZXJucyBUaGUgcGF0dGVybnMgYWdhaW5zdCB3aGljaCB0byB0ZXN0IHRoZSBzdHJpbmdcbiAqIEBwYXJhbSByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCBJZiB0cnVlLCBgdGVzdFN0cmluZ2AgbXVzdCBtYXRjaCBvbmUgb2YgdGhlIGdpdmVuIHN0cmluZyBwYXR0ZXJucyBleGFjdGx5IGluIG9yZGVyIHRvXG4gKiBjb3VudC4gSWYgZmFsc2UsIGB0ZXN0U3RyaW5nYCB3aWxsIG1hdGNoIGEgc3RyaW5nIHBhdHRlcm4gaWYgaXQgY29udGFpbnMgdGhhdCBwYXR0ZXJuLlxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuKFxuICB0ZXN0U3RyaW5nLFxuICBwYXR0ZXJucyA9IFtdLFxuICByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA9IGZhbHNlLFxuKSB7XG4gIHJldHVybiBwYXR0ZXJucy5zb21lKHBhdHRlcm4gPT4gaXNNYXRjaGluZ1BhdHRlcm4odGVzdFN0cmluZywgcGF0dGVybiwgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2gpKTtcbn1cblxuZXhwb3J0IHsgaXNNYXRjaGluZ1BhdHRlcm4sIHNhZmVKb2luLCBzbmlwTGluZSwgc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuLCB0cnVuY2F0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/supports.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/supports.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNativeFetch: () => (/* binding */ isNativeFetch),\n/* harmony export */   supportsDOMError: () => (/* binding */ supportsDOMError),\n/* harmony export */   supportsDOMException: () => (/* binding */ supportsDOMException),\n/* harmony export */   supportsErrorEvent: () => (/* binding */ supportsErrorEvent),\n/* harmony export */   supportsFetch: () => (/* binding */ supportsFetch),\n/* harmony export */   supportsNativeFetch: () => (/* binding */ supportsNativeFetch),\n/* harmony export */   supportsReferrerPolicy: () => (/* binding */ supportsReferrerPolicy),\n/* harmony export */   supportsReportingObserver: () => (/* binding */ supportsReportingObserver)\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3VwcG9ydHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDVjtBQUNZOztBQUVqRDtBQUNBLGVBQWUsOERBQWU7O0FBRTlCO0FBQ0E7QUFDQSxJQUFJLHlCQUF5QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksdUJBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUJBQXVCO0FBQ2pFOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDBCQUEwQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sTUFBTSx3REFBVztBQUNqQixRQUFRLDhDQUFNO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGdDQUFnQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNkJBQTZCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRTRLO0FBQzVLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3VwcG9ydHMuanM/MDNhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIuanMnO1xuaW1wb3J0IHsgZ2V0R2xvYmFsT2JqZWN0IH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IFdJTkRPVyA9IGdldEdsb2JhbE9iamVjdCgpO1xuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBFcnJvckV2ZW50IG9iamVjdHNcbiAqIHtAbGluayBzdXBwb3J0c0Vycm9yRXZlbnR9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzRXJyb3JFdmVudCgpIHtcbiAgdHJ5IHtcbiAgICBuZXcgRXJyb3JFdmVudCgnJyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRE9NRXJyb3Igb2JqZWN0c1xuICoge0BsaW5rIHN1cHBvcnRzRE9NRXJyb3J9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzRE9NRXJyb3IoKSB7XG4gIHRyeSB7XG4gICAgLy8gQ2hyb21lOiBWTTg5OjEgVW5jYXVnaHQgVHlwZUVycm9yOiBGYWlsZWQgdG8gY29uc3RydWN0ICdET01FcnJvcic6XG4gICAgLy8gMSBhcmd1bWVudCByZXF1aXJlZCwgYnV0IG9ubHkgMCBwcmVzZW50LlxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSXQgcmVhbGx5IG5lZWRzIDEgYXJndW1lbnQsIG5vdCAwLlxuICAgIG5ldyBET01FcnJvcignJyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRE9NRXhjZXB0aW9uIG9iamVjdHNcbiAqIHtAbGluayBzdXBwb3J0c0RPTUV4Y2VwdGlvbn0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNET01FeGNlcHRpb24oKSB7XG4gIHRyeSB7XG4gICAgbmV3IERPTUV4Y2VwdGlvbignJyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRmV0Y2ggQVBJXG4gKiB7QGxpbmsgc3VwcG9ydHNGZXRjaH0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNGZXRjaCgpIHtcbiAgaWYgKCEoJ2ZldGNoJyBpbiBXSU5ET1cpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBuZXcgSGVhZGVycygpO1xuICAgIG5ldyBSZXF1ZXN0KCdodHRwOi8vd3d3LmV4YW1wbGUuY29tJyk7XG4gICAgbmV3IFJlc3BvbnNlKCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbi8qKlxuICogaXNOYXRpdmVGZXRjaCBjaGVja3MgaWYgdGhlIGdpdmVuIGZ1bmN0aW9uIGlzIGEgbmF0aXZlIGltcGxlbWVudGF0aW9uIG9mIGZldGNoKClcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbmZ1bmN0aW9uIGlzTmF0aXZlRmV0Y2goZnVuYykge1xuICByZXR1cm4gZnVuYyAmJiAvXmZ1bmN0aW9uIGZldGNoXFwoXFwpXFxzK1xce1xccytcXFtuYXRpdmUgY29kZVxcXVxccytcXH0kLy50ZXN0KGZ1bmMudG9TdHJpbmcoKSk7XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEZldGNoIEFQSSBuYXRpdmVseVxuICoge0BsaW5rIHN1cHBvcnRzTmF0aXZlRmV0Y2h9LlxuICpcbiAqIEByZXR1cm5zIHRydWUgaWYgYHdpbmRvdy5mZXRjaGAgaXMgbmF0aXZlbHkgaW1wbGVtZW50ZWQsIGZhbHNlIG90aGVyd2lzZVxuICovXG5mdW5jdGlvbiBzdXBwb3J0c05hdGl2ZUZldGNoKCkge1xuICBpZiAodHlwZW9mIEVkZ2VSdW50aW1lID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKCFzdXBwb3J0c0ZldGNoKCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBGYXN0IHBhdGggdG8gYXZvaWQgRE9NIEkvT1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gIGlmIChpc05hdGl2ZUZldGNoKFdJTkRPVy5mZXRjaCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIHdpbmRvdy5mZXRjaCBpcyBpbXBsZW1lbnRlZCwgYnV0IGlzIHBvbHlmaWxsZWQgb3IgYWxyZWFkeSB3cmFwcGVkIChlLmc6IGJ5IGEgY2hyb21lIGV4dGVuc2lvbilcbiAgLy8gc28gY3JlYXRlIGEgXCJwdXJlXCIgaWZyYW1lIHRvIHNlZSBpZiB0aGF0IGhhcyBuYXRpdmUgZmV0Y2hcbiAgbGV0IHJlc3VsdCA9IGZhbHNlO1xuICBjb25zdCBkb2MgPSBXSU5ET1cuZG9jdW1lbnQ7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBpZiAoZG9jICYmIHR5cGVvZiAoZG9jLmNyZWF0ZUVsZW1lbnQgKSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzYW5kYm94ID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgICAgc2FuZGJveC5oaWRkZW4gPSB0cnVlO1xuICAgICAgZG9jLmhlYWQuYXBwZW5kQ2hpbGQoc2FuZGJveCk7XG4gICAgICBpZiAoc2FuZGJveC5jb250ZW50V2luZG93ICYmIHNhbmRib3guY29udGVudFdpbmRvdy5mZXRjaCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gICAgICAgIHJlc3VsdCA9IGlzTmF0aXZlRmV0Y2goc2FuZGJveC5jb250ZW50V2luZG93LmZldGNoKTtcbiAgICAgIH1cbiAgICAgIGRvYy5oZWFkLnJlbW92ZUNoaWxkKHNhbmRib3gpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLndhcm4oJ0NvdWxkIG5vdCBjcmVhdGUgc2FuZGJveCBpZnJhbWUgZm9yIHB1cmUgZmV0Y2ggY2hlY2ssIGJhaWxpbmcgdG8gd2luZG93LmZldGNoOiAnLCBlcnIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIFJlcG9ydGluZ09ic2VydmVyIEFQSVxuICoge0BsaW5rIHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXJ9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIoKSB7XG4gIHJldHVybiAnUmVwb3J0aW5nT2JzZXJ2ZXInIGluIFdJTkRPVztcbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgUmVmZXJyZXIgUG9saWN5IEFQSVxuICoge0BsaW5rIHN1cHBvcnRzUmVmZXJyZXJQb2xpY3l9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzUmVmZXJyZXJQb2xpY3koKSB7XG4gIC8vIERlc3BpdGUgYWxsIHN0YXJzIGluIHRoZSBza3kgc2F5aW5nIHRoYXQgRWRnZSBzdXBwb3J0cyBvbGQgZHJhZnQgc3ludGF4LCBha2EgJ25ldmVyJywgJ2Fsd2F5cycsICdvcmlnaW4nIGFuZCAnZGVmYXVsdCdcbiAgLy8gKHNlZSBodHRwczovL2Nhbml1c2UuY29tLyNmZWF0PXJlZmVycmVyLXBvbGljeSksXG4gIC8vIGl0IGRvZXNuJ3QuIEFuZCBpdCB0aHJvd3MgYW4gZXhjZXB0aW9uIGluc3RlYWQgb2YgaWdub3JpbmcgdGhpcyBwYXJhbWV0ZXIuLi5cbiAgLy8gUkVGOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3JhdmVuLWpzL2lzc3Vlcy8xMjMzXG5cbiAgaWYgKCFzdXBwb3J0c0ZldGNoKCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0cnkge1xuICAgIG5ldyBSZXF1ZXN0KCdfJywge1xuICAgICAgcmVmZXJyZXJQb2xpY3k6ICdvcmlnaW4nICxcbiAgICB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgeyBpc05hdGl2ZUZldGNoLCBzdXBwb3J0c0RPTUVycm9yLCBzdXBwb3J0c0RPTUV4Y2VwdGlvbiwgc3VwcG9ydHNFcnJvckV2ZW50LCBzdXBwb3J0c0ZldGNoLCBzdXBwb3J0c05hdGl2ZUZldGNoLCBzdXBwb3J0c1JlZmVycmVyUG9saWN5LCBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXBwb3J0cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/supports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SyncPromise: () => (/* binding */ SyncPromise),\n/* harmony export */   rejectedSyncPromise: () => (/* binding */ rejectedSyncPromise),\n/* harmony export */   resolvedSyncPromise: () => (/* binding */ resolvedSyncPromise)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@sentry/utils/esm/is.js\");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQzs7QUFFckM7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxzQkFBc0I7QUFDdEIsQ0FBQyx3QkFBd0I7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSyx3Q0FBd0MseUNBQXlDLHlDQUF5QztBQUMvSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBLFFBQVEsa0RBQVU7QUFDbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFaUU7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9zeW5jcHJvbWlzZS5qcz9kZjZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVGhlbmFibGUgfSBmcm9tICcuL2lzLmpzJztcblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LWZ1bmN0aW9uLXJldHVybi10eXBlICovXG5cbi8qKiBTeW5jUHJvbWlzZSBpbnRlcm5hbCBzdGF0ZXMgKi9cbnZhciBTdGF0ZXM7IChmdW5jdGlvbiAoU3RhdGVzKSB7XG4gIC8qKiBQZW5kaW5nICovXG4gIGNvbnN0IFBFTkRJTkcgPSAwOyBTdGF0ZXNbU3RhdGVzW1wiUEVORElOR1wiXSA9IFBFTkRJTkddID0gXCJQRU5ESU5HXCI7XG4gIC8qKiBSZXNvbHZlZCAvIE9LICovXG4gIGNvbnN0IFJFU09MVkVEID0gMTsgU3RhdGVzW1N0YXRlc1tcIlJFU09MVkVEXCJdID0gUkVTT0xWRURdID0gXCJSRVNPTFZFRFwiO1xuICAvKiogUmVqZWN0ZWQgLyBFcnJvciAqL1xuICBjb25zdCBSRUpFQ1RFRCA9IDI7IFN0YXRlc1tTdGF0ZXNbXCJSRUpFQ1RFRFwiXSA9IFJFSkVDVEVEXSA9IFwiUkVKRUNURURcIjtcbn0pKFN0YXRlcyB8fCAoU3RhdGVzID0ge30pKTtcblxuLy8gT3ZlcmxvYWRzIHNvIHdlIGNhbiBjYWxsIHJlc29sdmVkU3luY1Byb21pc2Ugd2l0aG91dCBhcmd1bWVudHMgYW5kIGdlbmVyaWMgYXJndW1lbnRcblxuLyoqXG4gKiBDcmVhdGVzIGEgcmVzb2x2ZWQgc3luYyBwcm9taXNlLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gcmVzb2x2ZSB0aGUgcHJvbWlzZSB3aXRoXG4gKiBAcmV0dXJucyB0aGUgcmVzb2x2ZWQgc3luYyBwcm9taXNlXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVkU3luY1Byb21pc2UodmFsdWUpIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlamVjdGVkIHN5bmMgcHJvbWlzZS5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIHJlamVjdCB0aGUgcHJvbWlzZSB3aXRoXG4gKiBAcmV0dXJucyB0aGUgcmVqZWN0ZWQgc3luYyBwcm9taXNlXG4gKi9cbmZ1bmN0aW9uIHJlamVjdGVkU3luY1Byb21pc2UocmVhc29uKSB7XG4gIHJldHVybiBuZXcgU3luY1Byb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgIHJlamVjdChyZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaGVuYWJsZSBjbGFzcyB0aGF0IGJlaGF2ZXMgbGlrZSBhIFByb21pc2UgYW5kIGZvbGxvd3MgaXQncyBpbnRlcmZhY2VcbiAqIGJ1dCBpcyBub3QgYXN5bmMgaW50ZXJuYWxseVxuICovXG5jbGFzcyBTeW5jUHJvbWlzZSB7XG5cbiAgIGNvbnN0cnVjdG9yKFxuICAgIGV4ZWN1dG9yLFxuICApIHtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0My5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQ0LmNhbGwodGhpcyk7XG4gICAgdGhpcy5fc3RhdGUgPSBTdGF0ZXMuUEVORElORztcbiAgICB0aGlzLl9oYW5kbGVycyA9IFtdO1xuXG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKHRoaXMuX3Jlc29sdmUsIHRoaXMuX3JlamVjdCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fcmVqZWN0KGUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgdGhlbihcbiAgICBvbmZ1bGZpbGxlZCxcbiAgICBvbnJlamVjdGVkLFxuICApIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZXJzLnB1c2goW1xuICAgICAgICBmYWxzZSxcbiAgICAgICAgcmVzdWx0ID0+IHtcbiAgICAgICAgICBpZiAoIW9uZnVsZmlsbGVkKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiDCr1xcXyjjg4QpXy/Cr1xuICAgICAgICAgICAgLy8gVE9ETzogRklYTUVcbiAgICAgICAgICAgIHJlc29sdmUocmVzdWx0ICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHJlc29sdmUob25mdWxmaWxsZWQocmVzdWx0KSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaWYgKCFvbnJlamVjdGVkKSB7XG4gICAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShvbnJlamVjdGVkKHJlYXNvbikpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgXSk7XG4gICAgICB0aGlzLl9leGVjdXRlSGFuZGxlcnMoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgY2F0Y2goXG4gICAgb25yZWplY3RlZCxcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbih2YWwgPT4gdmFsLCBvbnJlamVjdGVkKTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgZmluYWxseShvbmZpbmFsbHkpIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCB2YWw7XG4gICAgICBsZXQgaXNSZWplY3RlZDtcblxuICAgICAgcmV0dXJuIHRoaXMudGhlbihcbiAgICAgICAgdmFsdWUgPT4ge1xuICAgICAgICAgIGlzUmVqZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICB2YWwgPSB2YWx1ZTtcbiAgICAgICAgICBpZiAob25maW5hbGx5KSB7XG4gICAgICAgICAgICBvbmZpbmFsbHkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaXNSZWplY3RlZCA9IHRydWU7XG4gICAgICAgICAgdmFsID0gcmVhc29uO1xuICAgICAgICAgIGlmIChvbmZpbmFsbHkpIHtcbiAgICAgICAgICAgIG9uZmluYWxseSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICkudGhlbigoKSA9PiB7XG4gICAgICAgIGlmIChpc1JlamVjdGVkKSB7XG4gICAgICAgICAgcmVqZWN0KHZhbCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh2YWwgKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0KCkge3RoaXMuX3Jlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICB0aGlzLl9zZXRSZXN1bHQoU3RhdGVzLlJFU09MVkVELCB2YWx1ZSk7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDIoKSB7dGhpcy5fcmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgIHRoaXMuX3NldFJlc3VsdChTdGF0ZXMuUkVKRUNURUQsIHJlYXNvbik7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDMoKSB7dGhpcy5fc2V0UmVzdWx0ID0gKHN0YXRlLCB2YWx1ZSkgPT4ge1xuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gU3RhdGVzLlBFTkRJTkcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIHZvaWQgKHZhbHVlICkudGhlbih0aGlzLl9yZXNvbHZlLCB0aGlzLl9yZWplY3QpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3N0YXRlID0gc3RhdGU7XG4gICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcblxuICAgIHRoaXMuX2V4ZWN1dGVIYW5kbGVycygpO1xuICB9O31cblxuICAvKiogSlNEb2MgKi9cbiAgICBfX2luaXQ0KCkge3RoaXMuX2V4ZWN1dGVIYW5kbGVycyA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5fc3RhdGUgPT09IFN0YXRlcy5QRU5ESU5HKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2FjaGVkSGFuZGxlcnMgPSB0aGlzLl9oYW5kbGVycy5zbGljZSgpO1xuICAgIHRoaXMuX2hhbmRsZXJzID0gW107XG5cbiAgICBjYWNoZWRIYW5kbGVycy5mb3JFYWNoKGhhbmRsZXIgPT4ge1xuICAgICAgaWYgKGhhbmRsZXJbMF0pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fc3RhdGUgPT09IFN0YXRlcy5SRVNPTFZFRCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgICAgIGhhbmRsZXJbMV0odGhpcy5fdmFsdWUgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX3N0YXRlID09PSBTdGF0ZXMuUkVKRUNURUQpIHtcbiAgICAgICAgaGFuZGxlclsyXSh0aGlzLl92YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGhhbmRsZXJbMF0gPSB0cnVlO1xuICAgIH0pO1xuICB9O31cbn1cblxuZXhwb3J0IHsgU3luY1Byb21pc2UsIHJlamVjdGVkU3luY1Byb21pc2UsIHJlc29sdmVkU3luY1Byb21pc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNwcm9taXNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/syncpromise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _browserPerformanceTimeOriginMode: () => (/* binding */ _browserPerformanceTimeOriginMode),\n/* harmony export */   browserPerformanceTimeOrigin: () => (/* binding */ browserPerformanceTimeOrigin),\n/* harmony export */   dateTimestampInSeconds: () => (/* binding */ dateTimestampInSeconds),\n/* harmony export */   timestampInSeconds: () => (/* binding */ timestampInSeconds),\n/* harmony export */   timestampWithMs: () => (/* binding */ timestampWithMs)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/time.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRACEPARENT_REGEXP: () => (/* binding */ TRACEPARENT_REGEXP),\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   generateSentryTraceHeader: () => (/* binding */ generateSentryTraceHeader),\n/* harmony export */   propagationContextFromHeaders: () => (/* binding */ propagationContextFromHeaders),\n/* harmony export */   tracingContextFromHeaders: () => (/* binding */ tracingContextFromHeaders)\n/* harmony export */ });\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ \"(rsc)/./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n        spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n        parentSpanId: parentSpanId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n        spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      parentSpanId: parentSpanId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdHJhY2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFFO0FBQ25DOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCLEdBQUc7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsa0ZBQXFDOztBQUV0RSxVQUFVLHVDQUF1Qzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrQ0FBSztBQUNqQyxnQkFBZ0IsK0NBQUs7QUFDckIsT0FBTztBQUNQO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQSw0QkFBNEIsK0NBQUs7QUFDakMsc0NBQXNDLCtDQUFLO0FBQzNDLGdCQUFnQiwrQ0FBSztBQUNyQjtBQUNBLHlDQUF5QztBQUN6QyxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0ZBQXFDOztBQUV0RSxVQUFVLHVDQUF1Qzs7QUFFakQ7QUFDQTtBQUNBLDBCQUEwQiwrQ0FBSztBQUMvQixjQUFjLCtDQUFLO0FBQ25CO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsMEJBQTBCLCtDQUFLO0FBQy9CLG9DQUFvQywrQ0FBSztBQUN6QyxjQUFjLCtDQUFLO0FBQ25CO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0NBQUs7QUFDakIsV0FBVywrQ0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVEsR0FBRyxPQUFPLEVBQUUsY0FBYztBQUM5Qzs7QUFFMkk7QUFDM0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc21fYmFua2luZy8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS90cmFjaW5nLmpzP2JjZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dCB9IGZyb20gJy4vYmFnZ2FnZS5qcyc7XG5pbXBvcnQgeyB1dWlkNCB9IGZyb20gJy4vbWlzYy5qcyc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAc2VudHJ5LWludGVybmFsL3Nkay9uby1yZWdleHAtY29uc3RydWN0b3IgLS0gUmVnRXhwIGlzIHVzZWQgZm9yIHJlYWRhYmlsaXR5IGhlcmVcbmNvbnN0IFRSQUNFUEFSRU5UX1JFR0VYUCA9IG5ldyBSZWdFeHAoXG4gICdeWyBcXFxcdF0qJyArIC8vIHdoaXRlc3BhY2VcbiAgICAnKFswLTlhLWZdezMyfSk/JyArIC8vIHRyYWNlX2lkXG4gICAgJy0/KFswLTlhLWZdezE2fSk/JyArIC8vIHNwYW5faWRcbiAgICAnLT8oWzAxXSk/JyArIC8vIHNhbXBsZWRcbiAgICAnWyBcXFxcdF0qJCcsIC8vIHdoaXRlc3BhY2Vcbik7XG5cbi8qKlxuICogRXh0cmFjdCB0cmFuc2FjdGlvbiBjb250ZXh0IGRhdGEgZnJvbSBhIGBzZW50cnktdHJhY2VgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0gdHJhY2VwYXJlbnQgVHJhY2VwYXJlbnQgc3RyaW5nXG4gKlxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgZGF0YSBmcm9tIHRoZSBoZWFkZXIsIG9yIHVuZGVmaW5lZCBpZiB0cmFjZXBhcmVudCBzdHJpbmcgaXMgbWFsZm9ybWVkXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFjZXBhcmVudERhdGEodHJhY2VwYXJlbnQpIHtcbiAgaWYgKCF0cmFjZXBhcmVudCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSB0cmFjaW5nIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnNgIGluc3RlYWQuXG4gKi9cbi8vIFRPRE8odjgpOiBSZW1vdmUgdGhpcyBmdW5jdGlvblxuZnVuY3Rpb24gdHJhY2luZ0NvbnRleHRGcm9tSGVhZGVycyhcbiAgc2VudHJ5VHJhY2UsXG4gIGJhZ2dhZ2UsXG4pXG5cbiB7XG4gIGNvbnN0IHRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGEoc2VudHJ5VHJhY2UpO1xuICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dChiYWdnYWdlKTtcblxuICBjb25zdCB7IHRyYWNlSWQsIHBhcmVudFNwYW5JZCwgcGFyZW50U2FtcGxlZCB9ID0gdHJhY2VwYXJlbnREYXRhIHx8IHt9O1xuXG4gIGlmICghdHJhY2VwYXJlbnREYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRyYWNlcGFyZW50RGF0YSxcbiAgICAgIGR5bmFtaWNTYW1wbGluZ0NvbnRleHQ6IHVuZGVmaW5lZCxcbiAgICAgIHByb3BhZ2F0aW9uQ29udGV4dDoge1xuICAgICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IHV1aWQ0KCksXG4gICAgICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZXBhcmVudERhdGEsXG4gICAgICBkeW5hbWljU2FtcGxpbmdDb250ZXh0OiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgICBwcm9wYWdhdGlvbkNvbnRleHQ6IHtcbiAgICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgICBwYXJlbnRTcGFuSWQ6IHBhcmVudFNwYW5JZCB8fCB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgICBkc2M6IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgfHwge30sIC8vIElmIHdlIGhhdmUgdHJhY2VwYXJlbnQgZGF0YSBidXQgbm8gRFNDIGl0IG1lYW5zIHdlIGFyZSBub3QgaGVhZCBvZiB0cmFjZSBhbmQgd2UgbXVzdCBmcmVlemUgaXRcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHByb3BhZ2F0aW9uIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzLlxuICovXG5mdW5jdGlvbiBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyhcbiAgc2VudHJ5VHJhY2UsXG4gIGJhZ2dhZ2UsXG4pIHtcbiAgY29uc3QgdHJhY2VwYXJlbnREYXRhID0gZXh0cmFjdFRyYWNlcGFyZW50RGF0YShzZW50cnlUcmFjZSk7XG4gIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KGJhZ2dhZ2UpO1xuXG4gIGNvbnN0IHsgdHJhY2VJZCwgcGFyZW50U3BhbklkLCBwYXJlbnRTYW1wbGVkIH0gPSB0cmFjZXBhcmVudERhdGEgfHwge307XG5cbiAgaWYgKCF0cmFjZXBhcmVudERhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgc3BhbklkOiB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgICAgcGFyZW50U3BhbklkOiBwYXJlbnRTcGFuSWQgfHwgdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgc3BhbklkOiB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgZHNjOiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBzZW50cnktdHJhY2UgaGVhZGVyIGZyb20gc3BhbiBjb250ZXh0IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcihcbiAgdHJhY2VJZCA9IHV1aWQ0KCksXG4gIHNwYW5JZCA9IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgc2FtcGxlZCxcbikge1xuICBsZXQgc2FtcGxlZFN0cmluZyA9ICcnO1xuICBpZiAoc2FtcGxlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc2FtcGxlZFN0cmluZyA9IHNhbXBsZWQgPyAnLTEnIDogJy0wJztcbiAgfVxuICByZXR1cm4gYCR7dHJhY2VJZH0tJHtzcGFuSWR9JHtzYW1wbGVkU3RyaW5nfWA7XG59XG5cbmV4cG9ydCB7IFRSQUNFUEFSRU5UX1JFR0VYUCwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSwgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMsIHRyYWNpbmdDb250ZXh0RnJvbUhlYWRlcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/tracing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/url.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/url.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNumberOfUrlSegments: () => (/* binding */ getNumberOfUrlSegments),\n/* harmony export */   getSanitizedUrlString: () => (/* binding */ getSanitizedUrlString),\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl),\n/* harmony export */   stripUrlQueryAndFragment: () => (/* binding */ stripUrlQueryAndFragment)\n/* harmony export */ });\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\n\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUJBQXVCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGNBQWMsU0FBUyxVQUFVLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDbkU7O0FBRTZGO0FBQzdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzP2ZhMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQYXJzZXMgc3RyaW5nIGZvcm0gb2YgVVJMIGludG8gYW4gb2JqZWN0XG4gKiAvLyBib3Jyb3dlZCBmcm9tIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzOTg2I2FwcGVuZGl4LUJcbiAqIC8vIGludGVudGlvbmFsbHkgdXNpbmcgcmVnZXggYW5kIG5vdCA8YS8+IGhyZWYgcGFyc2luZyB0cmljayBiZWNhdXNlIFJlYWN0IE5hdGl2ZSBhbmQgb3RoZXJcbiAqIC8vIGVudmlyb25tZW50cyB3aGVyZSBET00gbWlnaHQgbm90IGJlIGF2YWlsYWJsZVxuICogQHJldHVybnMgcGFyc2VkIFVSTCBvYmplY3RcbiAqL1xuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goL14oKFteOi8/I10rKTopPyhcXC9cXC8oW14vPyNdKikpPyhbXj8jXSopKFxcPyhbXiNdKikpPygjKC4qKSk/JC8pO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICAvLyBjb2VyY2UgdG8gdW5kZWZpbmVkIHZhbHVlcyB0byBlbXB0eSBzdHJpbmcgc28gd2UgZG9uJ3QgZ2V0ICd1bmRlZmluZWQnXG4gIGNvbnN0IHF1ZXJ5ID0gbWF0Y2hbNl0gfHwgJyc7XG4gIGNvbnN0IGZyYWdtZW50ID0gbWF0Y2hbOF0gfHwgJyc7XG4gIHJldHVybiB7XG4gICAgaG9zdDogbWF0Y2hbNF0sXG4gICAgcGF0aDogbWF0Y2hbNV0sXG4gICAgcHJvdG9jb2w6IG1hdGNoWzJdLFxuICAgIHNlYXJjaDogcXVlcnksXG4gICAgaGFzaDogZnJhZ21lbnQsXG4gICAgcmVsYXRpdmU6IG1hdGNoWzVdICsgcXVlcnkgKyBmcmFnbWVudCwgLy8gZXZlcnl0aGluZyBtaW51cyBvcmlnaW5cbiAgfTtcbn1cblxuLyoqXG4gKiBTdHJpcCB0aGUgcXVlcnkgc3RyaW5nIGFuZCBmcmFnbWVudCBvZmYgb2YgYSBnaXZlbiBVUkwgb3IgcGF0aCAoaWYgcHJlc2VudClcbiAqXG4gKiBAcGFyYW0gdXJsUGF0aCBGdWxsIFVSTCBvciBwYXRoLCBpbmNsdWRpbmcgcG9zc2libGUgcXVlcnkgc3RyaW5nIGFuZC9vciBmcmFnbWVudFxuICogQHJldHVybnMgVVJMIG9yIHBhdGggd2l0aG91dCBxdWVyeSBzdHJpbmcgb3IgZnJhZ21lbnRcbiAqL1xuZnVuY3Rpb24gc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50KHVybFBhdGgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtZXNjYXBlXG4gIHJldHVybiB1cmxQYXRoLnNwbGl0KC9bXFw/I10vLCAxKVswXTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIG51bWJlciBvZiBVUkwgc2VnbWVudHMgb2YgYSBwYXNzZWQgc3RyaW5nIFVSTC5cbiAqL1xuZnVuY3Rpb24gZ2V0TnVtYmVyT2ZVcmxTZWdtZW50cyh1cmwpIHtcbiAgLy8gc3BsaXQgYXQgJy8nIG9yIGF0ICdcXC8nIHRvIHNwbGl0IHJlZ2V4IHVybHMgY29ycmVjdGx5XG4gIHJldHVybiB1cmwuc3BsaXQoL1xcXFw/XFwvLykuZmlsdGVyKHMgPT4gcy5sZW5ndGggPiAwICYmIHMgIT09ICcsJykubGVuZ3RoO1xufVxuXG4vKipcbiAqIFRha2VzIGEgVVJMIG9iamVjdCBhbmQgcmV0dXJucyBhIHNhbml0aXplZCBzdHJpbmcgd2hpY2ggaXMgc2FmZSB0byB1c2UgYXMgc3BhbiBkZXNjcmlwdGlvblxuICogc2VlOiBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvZGF0YS1oYW5kbGluZy8jc3RydWN0dXJpbmctZGF0YVxuICovXG5mdW5jdGlvbiBnZXRTYW5pdGl6ZWRVcmxTdHJpbmcodXJsKSB7XG4gIGNvbnN0IHsgcHJvdG9jb2wsIGhvc3QsIHBhdGggfSA9IHVybDtcblxuICBjb25zdCBmaWx0ZXJlZEhvc3QgPVxuICAgIChob3N0ICYmXG4gICAgICBob3N0XG4gICAgICAgIC8vIEFsd2F5cyBmaWx0ZXIgb3V0IGF1dGhvcml0eVxuICAgICAgICAucmVwbGFjZSgvXi4qQC8sICdbZmlsdGVyZWRdOltmaWx0ZXJlZF1AJylcbiAgICAgICAgLy8gRG9uJ3Qgc2hvdyBzdGFuZGFyZCA6ODAgKGh0dHApIGFuZCA6NDQzIChodHRwcykgcG9ydHMgdG8gcmVkdWNlIHRoZSBub2lzZVxuICAgICAgICAvLyBUT0RPOiBVc2UgbmV3IFVSTCBnbG9iYWwgaWYgaXQgZXhpc3RzXG4gICAgICAgIC5yZXBsYWNlKC8oOjgwKSQvLCAnJylcbiAgICAgICAgLnJlcGxhY2UoLyg6NDQzKSQvLCAnJykpIHx8XG4gICAgJyc7XG5cbiAgcmV0dXJuIGAke3Byb3RvY29sID8gYCR7cHJvdG9jb2x9Oi8vYCA6ICcnfSR7ZmlsdGVyZWRIb3N0fSR7cGF0aH1gO1xufVxuXG5leHBvcnQgeyBnZXROdW1iZXJPZlVybFNlZ21lbnRzLCBnZXRTYW5pdGl6ZWRVcmxTdHJpbmcsIHBhcnNlVXJsLCBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeStringForRegex: () => (/* binding */ escapeStringForRegex)\n/* harmony export */ });\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 12+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\n\n//# sourceMappingURL=escapeStringForRegex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVuZG9yL2VzY2FwZVN0cmluZ0ZvclJlZ2V4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVuZG9yL2VzY2FwZVN0cmluZ0ZvclJlZ2V4LmpzPzcxMTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9lc2NhcGUtc3RyaW5nLXJlZ2V4cCBidXQgd2l0aCBtb2RpZmljYXRpb25zIHRvOlxuLy8gICBhKSByZWR1Y2UgdGhlIHNpemUgYnkgc2tpcHBpbmcgdGhlIHJ1bnRpbWUgdHlwZSAtIGNoZWNraW5nXG4vLyAgIGIpIGVuc3VyZSBpdCBnZXRzIGRvd24gLSBjb21waWxlZCBmb3Igb2xkIHZlcnNpb25zIG9mIE5vZGUodGhlIHB1Ymxpc2hlZCBwYWNrYWdlIG9ubHkgc3VwcG9ydHMgTm9kZSAxMispLlxuLy9cbi8vIE1JVCBMaWNlbnNlXG4vL1xuLy8gQ29weXJpZ2h0IChjKSBTaW5kcmUgU29yaHVzIDxzaW5kcmVzb3JodXNAZ21haWwuY29tPiAoaHR0cHM6Ly9zaW5kcmVzb3JodXMuY29tKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZFxuLy8gZG9jdW1lbnRhdGlvbiBmaWxlcyh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZCAvIG9yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kXG4vLyB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2Zcbi8vIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE9cbi8vIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5JTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbi8vIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1Ncbi8vIElOIFRIRSBTT0ZUV0FSRS5cblxuLyoqXG4gKiBHaXZlbiBhIHN0cmluZywgZXNjYXBlIGNoYXJhY3RlcnMgd2hpY2ggaGF2ZSBtZWFuaW5nIGluIHRoZSByZWdleCBncmFtbWFyLCBzdWNoIHRoYXQgdGhlIHJlc3VsdCBpcyBzYWZlIHRvIGZlZWQgdG9cbiAqIGBuZXcgUmVnRXhwKClgLlxuICpcbiAqIEBwYXJhbSByZWdleFN0cmluZyBUaGUgc3RyaW5nIHRvIGVzY2FwZVxuICogQHJldHVybnMgQW4gdmVyc2lvbiBvZiB0aGUgc3RyaW5nIHdpdGggYWxsIHNwZWNpYWwgcmVnZXggY2hhcmFjdGVycyBlc2NhcGVkXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZ0ZvclJlZ2V4KHJlZ2V4U3RyaW5nKSB7XG4gIC8vIGVzY2FwZSB0aGUgaHlwaGVuIHNlcGFyYXRlbHkgc28gd2UgY2FuIGFsc28gcmVwbGFjZSBpdCB3aXRoIGEgdW5pY29kZSBsaXRlcmFsIGh5cGhlbiwgdG8gYXZvaWQgdGhlIHByb2JsZW1zXG4gIC8vIGRpc2N1c3NlZCBpbiBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2VzY2FwZS1zdHJpbmctcmVnZXhwL2lzc3Vlcy8yMC5cbiAgcmV0dXJuIHJlZ2V4U3RyaW5nLnJlcGxhY2UoL1t8XFxcXHt9KClbXFxdXiQrKj8uXS9nLCAnXFxcXCQmJykucmVwbGFjZSgvLS9nLCAnXFxcXHgyZCcpO1xufVxuXG5leHBvcnQgeyBlc2NhcGVTdHJpbmdGb3JSZWdleCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXNjYXBlU3RyaW5nRm9yUmVnZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLOBAL_OBJ: () => (/* binding */ GLOBAL_OBJ),\n/* harmony export */   getGlobalObject: () => (/* binding */ getGlobalObject),\n/* harmony export */   getGlobalSingleton: () => (/* binding */ getGlobalSingleton)\n/* harmony export */ });\n/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7O0FBRTJEO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNtX2JhbmtpbmcvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzPzZkM2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEludGVybmFsIGdsb2JhbCB3aXRoIGNvbW1vbiBwcm9wZXJ0aWVzIGFuZCBTZW50cnkgZXh0ZW5zaW9ucyAgKi9cblxuLy8gVGhlIGNvZGUgYmVsb3cgZm9yICdpc0dsb2JhbE9iaicgYW5kICdHTE9CQUxfT0JKJyB3YXMgY29waWVkIGZyb20gY29yZS1qcyBiZWZvcmUgbW9kaWZpY2F0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9ibG9iLzFiOTQ0ZGY1NTI4MmNkYzk5YzkwZGI1ZjQ5ZWIwYjZlZGEyY2MwYTMvcGFja2FnZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2xvYmFsLmpzXG4vLyBjb3JlLWpzIGhhcyB0aGUgZm9sbG93aW5nIGxpY2VuY2U6XG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDE0LTIwMjIgRGVuaXMgUHVzaGthcmV2XG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuLyoqIFJldHVybnMgJ29iaicgaWYgaXQncyB0aGUgZ2xvYmFsIG9iamVjdCwgb3RoZXJ3aXNlIHJldHVybnMgdW5kZWZpbmVkICovXG5mdW5jdGlvbiBpc0dsb2JhbE9iaihvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouTWF0aCA9PSBNYXRoID8gb2JqIDogdW5kZWZpbmVkO1xufVxuXG4vKiogR2V0J3MgdGhlIGdsb2JhbCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgcnVudGltZSAqL1xuY29uc3QgR0xPQkFMX09CSiA9XG4gICh0eXBlb2YgZ2xvYmFsVGhpcyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaihnbG9iYWxUaGlzKSkgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaih3aW5kb3cpKSB8fFxuICAodHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgaXNHbG9iYWxPYmooc2VsZikpIHx8XG4gICh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGlzR2xvYmFsT2JqKGdsb2JhbCkpIHx8XG4gIChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pKCkgfHxcbiAge307XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIEdMT0JBTF9PQkogaW5zdGVhZCBvciBXSU5ET1cgZnJvbSBAc2VudHJ5L2Jyb3dzZXIuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIHY4XG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbE9iamVjdCgpIHtcbiAgcmV0dXJuIEdMT0JBTF9PQkogO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBnbG9iYWwgc2luZ2xldG9uIGNvbnRhaW5lZCBpbiB0aGUgZ2xvYmFsIGBfX1NFTlRSWV9fYCBvYmplY3QuXG4gKlxuICogSWYgdGhlIHNpbmdsZXRvbiBkb2Vzbid0IGFscmVhZHkgZXhpc3QgaW4gYF9fU0VOVFJZX19gLCBpdCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIGdpdmVuIGZhY3RvcnlcbiAqIGZ1bmN0aW9uIGFuZCBhZGRlZCB0byB0aGUgYF9fU0VOVFJZX19gIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBnbG9iYWwgc2luZ2xldG9uIG9uIF9fU0VOVFJZX19cbiAqIEBwYXJhbSBjcmVhdG9yIGNyZWF0b3IgRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHNpbmdsZXRvbiBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3Qgb24gYF9fU0VOVFJZX19gXG4gKiBAcGFyYW0gb2JqIChPcHRpb25hbCkgVGhlIGdsb2JhbCBvYmplY3Qgb24gd2hpY2ggdG8gbG9vayBmb3IgYF9fU0VOVFJZX19gLCBpZiBub3QgYEdMT0JBTF9PQkpgJ3MgcmV0dXJuIHZhbHVlXG4gKiBAcmV0dXJucyB0aGUgc2luZ2xldG9uXG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbFNpbmdsZXRvbihuYW1lLCBjcmVhdG9yLCBvYmopIHtcbiAgY29uc3QgZ2JsID0gKG9iaiB8fCBHTE9CQUxfT0JKKSA7XG4gIGNvbnN0IF9fU0VOVFJZX18gPSAoZ2JsLl9fU0VOVFJZX18gPSBnYmwuX19TRU5UUllfXyB8fCB7fSk7XG4gIGNvbnN0IHNpbmdsZXRvbiA9IF9fU0VOVFJZX19bbmFtZV0gfHwgKF9fU0VOVFJZX19bbmFtZV0gPSBjcmVhdG9yKCkpO1xuICByZXR1cm4gc2luZ2xldG9uO1xufVxuXG5leHBvcnQgeyBHTE9CQUxfT0JKLCBnZXRHbG9iYWxPYmplY3QsIGdldEdsb2JhbFNpbmdsZXRvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sentry/utils/esm/worldwide.js\n");

/***/ })

};
;